var documenterSearchIndex = {"docs":
[{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: CI) (Image: codecov) (Image: Aqua QA) (Image: License: MIT)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Align astronomical images of point sources. Based on the astroalign Python package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Credit: Beroiz, M., Cabral, J. B., & Sanchez, B. (2020)","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nThis package is still in the experimental stage. If you notice an issue, please feel free to let us know!","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pkg> add Astroalign","category":"page"},{"location":"#Getting-Started","page":"Home","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The following will align img_from onto img_to:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Astroalign\n\nimg_aligned, params = align_frame(img_to, img_from)","category":"page"},{"location":"","page":"Home","title":"Home","text":"info: Info\nSee the accompanying Pluto.jl notebook for more on supported keywords and additional analysis.","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Issues and pull requests welcome.","category":"page"},{"location":"#API-/-Reference","page":"Home","title":"API / Reference","text":"","category":"section"},{"location":"#Astroalign.align_frame","page":"Home","title":"Astroalign.align_frame","text":"function align_frame(img_to, img_from;\n    [box_size],\n    [ap_radius],\n    [f],\n    [min_fwhm],\n    [nsigma],\n)\n\nAlign img_from onto img_to. See below for keyword arguments currently available to control this process.\n\nbox_size: The size of the grid cells (in pixels) used to extract candidate point sources to use for alignment. Defaults to a tenth of the greatest common denominator of the dimensions of img_to. See Photometry.jl > Source Detection Algorithms for more.\nap_radius: The radius of the apertures (in pixel) to place around each point source. Defaults to 60% of first(box_size). See Photometry.jl > Aperture Photometry for more.\nf: The function to compute within each aperture. Defaults to a 2D Gaussian fitted to the aperture center. See the Source characterization section of the accompanying Pluto.jl notebook for more.\nmin_fwhm: The minimum FWHM (in pixels) that an extracted point source must have to be considered as a control point. Defaults to a fifth of the width of the first image. See PSFModels.jl > Fitting data for more.\nnsigma: The number of standard deviations above the estimated background that a source must be to be considered as a control point. Defaults to 1. See Photometry.jl > Source Detection Algorithms for more.\n\n\n\n\n\n","category":"function"},{"location":"#Astroalign.get_sources","page":"Home","title":"Astroalign.get_sources","text":"get_sources(img; box_size = nothing, nsigma = 1)\n\nExtract candidate sources in img according to Photometry.Detection.extract_sources. By default, img is first sigma clipped and then background subtracted before the candidate sources are extracted. box_size is passed to Photometry.Background.estimate_background, and nsigma is passed to Photometry.Detection.extract_sources. See the Photometry.jl documentation for more.\n\nTODO: Pass more options to clipping, background estimating, and extraction methods in Photometry.jl.\n\n\n\n\n\n","category":"function"},{"location":"#Astroalign.find_nearest","page":"Home","title":"Astroalign.find_nearest","text":"find_nearest(C_to, ℳ_to, C_from, ℳ_from)\n\nReturn the closes pair of three points between the from and to frames in the invariant mathscr M space as computed by Astroalign.triangle_invariants.\n\n\n\n\n\n","category":"function"},{"location":"#Astroalign.triangle_invariants","page":"Home","title":"Astroalign.triangle_invariants","text":"triangle_invariants(phot)\n\nReturns all combinations (C) of three candidate point sources from the table of sources phot returned by Photometry.Aperture.photometry, and the computed invariant mathscr M for each according to Eq. 3 from Beroiz, M., Cabral, J. B., & Sanchez, B. (2020).\n\n\n\n\n\n","category":"function"}]
}
