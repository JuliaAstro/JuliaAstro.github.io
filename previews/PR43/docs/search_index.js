var documenterSearchIndex = {"docs":
[{"location":"tutorials/tabular-data/#tabular-data","page":"Working with tabular data","title":"Working with tabular data","text":"","category":"section"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"Tables are a common way to represent various forms of catalogs. One common format for storing this data in astronomy is as a FITS file.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"In these examples, we will fetch and load the Hipparcos-GAIA Catalog of Accelerations [(HGCA, Brandt et al 2021])](https://iopscience.iop.org/article/10.3847/1538-4365/abf93c). This catalog cross matches stars from the Hipparcos and GAIA catalogs in order to calculate the long term astrometric proper motion anomaly; that is, the star's deviation from straight line motion in the plane of the sky over the ~20 baseline between the two missions.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"A wide range of tabular data formats are supported in Julia under a common Tables.jl interface. For example,  CSV, Excel, Arrow, CASA Tables, and various SQL formats to name a few.","category":"page"},{"location":"tutorials/tabular-data/#Packages","page":"Working with tabular data","title":"Packages","text":"","category":"section"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"FITSIO: we'll use this package to load a table stored in a FITS file\nDataFrames: we'll use this package to examine and manipulate the table\nPlots: we'll use this package to visualize the contents of the table\nAstroLib: general utility package. We'll use a helper function to compute a map projection.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"You can install the necessary packages by running Julia, and typing ] to enter Pkg-mode. Then: add FITSIO DataFrames Plots AstroLib. Alternatively, you can run using Pkg; Pkg.add([\"FITSIO\", \"DataFrames\", \"Plots\", \"AstroLib\"]).","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"If you will be using these tools as part of a larger project, it's strongly recommended to create a Julia Project to record package versions.  If you're just experimenting, you can create a temporary project by running ] activate --temp.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"If you're using Pluto notebooks, installing and recording package versions in a project are handled for you automatically.","category":"page"},{"location":"tutorials/tabular-data/#Downloading-the-data","page":"Working with tabular data","title":"Downloading the data","text":"","category":"section"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"The table in question is hosted alongside the article. Go to Table 4 and click the link at the bottom to download it in FITS format. You'll need to uncompress the archive to see the HGCA_vEDR3.fits file.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"FITS tables can be loaded using the FITSIO package or the AstroImages package which wraps it.","category":"page"},{"location":"tutorials/tabular-data/#Loading-the-table","page":"Working with tabular data","title":"Loading the table","text":"","category":"section"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> using FITSIO\njulia> fits = FITS(\"HGCA_vEDR3.fits\")\n\nFile: HGCA_vEDR3.fits\nMode: \"r\" (read-only)\nHDUs: Num  Name  Type   \n      1          Image  \n      2          Table\njulia> table_fits = fits[2]\nFile: HGCA_vEDR3.fits\nHDU: 2\nType: Table\nRows: 115346\nColumns: Name                    Size  Type     TFORM  \n         hip_id                        Int32    J\n         gaia_source_id                Int64    K\n         gaia_ra                       Float64  D\n         gaia_dec                      Float64  D\n         radial_velocity               Float32  E\n...\n         chisq                         Float32  E","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"If we choose to use the AstroImages package, this code could be substituted for:","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> using AstroImages\njulia> table_fits = load(\"HGCA_vEDR3.fits\", 2);","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"Since this table conforms to the Tables.jl interface we can already pass it to a wide range of analysis and plotting tools; however, for interactive work it's useful to wrap this data in a DataFrame from DataFrames.jl.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> using DataFrames\njulia> df = DataFrame(table_fits)\n115346×35 DataFrame\n    Row │ hip_id  gaia_source_id       gaia_ra        gaia_dec ⋯\n        │ Int32   Int64                Float64        Float64  ⋯\n────────┼───────────────────────────────────────────────────────\n      1 │      1  2738327528519591936    0.000871957    1.0889 ⋯\n      2 │      2  2341871673090078592    0.00511158   -19.4988  \n      3 │      3  2881742980523997824    0.00506023    38.8593  \n      4 │      4  4973386040722654336    0.00907157   -51.8935  \n      5 │      5  2305974989264598272    0.00997423   -40.5912 ⋯\n   ⋮    │   ⋮              ⋮                 ⋮            ⋮    ⋱\n 115343 │ 120401  5290738562888564736  119.382        -60.6309  \n 115344 │ 120402  5290832364972775808  119.449        -60.6097  \n 115345 │ 120403  5290725643625189504  119.455        -60.6836  \n 115346 │ 120404  5290820682661822848  119.512        -60.6147 ⋯\n                              32 columns and 115337 rows omitted\n","category":"page"},{"location":"tutorials/tabular-data/#Examining-the-table","page":"Working with tabular data","title":"Examining the table","text":"","category":"section"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"As a first step, let's summarize the contents of the data frame using describe:","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> describe(df)\n35×7 DataFrame\n Row │ variable                mean         min            median       max                  nmissing  eltype   \n     │ Symbol                  Union…       Any            Union…       Any                  Int64     DataType \n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ hip_id                  59162.8      1              59133.5      120404                      0  Int32\n   2 │ gaia_source_id          3.5587e18    7632157690368  3.58418e18   6917489002841762304         0  Int64\n   3 │ gaia_ra                 181.445      0.000871957    181.843      359.982                     0  Float64\n   4 │ gaia_dec                -2.13495     -89.7824       -1.96568     89.5695                     0  Float64\n   5 │ radial_velocity         NaN          NaN                         NaN                         0  Float32\n   6 │ radial_velocity_error   NaN          NaN                         NaN                         0  Float32\n   7 │ radial_velocity_source               Gaia_DR2                    None                        0  String\n   8 │ parallax_gaia           6.98091      0.1            4.29612      768.067                     0  Float32\n   9 │ parallax_gaia_error     0.0450278    0.00802848     0.023354     1.52339                     0  Float32\n  10 │ pmra_gaia               -1.43563     -4406.47       -1.73408     6766.0                      0  Float32\n  11 │ pmdec_gaia              -16.3946     -5817.8        -5.53577     10362.4                     0  Float32\n  12 │ pmra_gaia_error         0.062217     0.00743185     0.0326008    2.03418                     0  Float32\n  13 │ pmdec_gaia_error        0.0574897    0.00869586     0.029098     1.99573                     0  Float32\n  14 │ pmra_pmdec_gaia         -0.0142746   -0.971819      -0.0116653   0.891564                    0  Float32\n  15 │ pmra_hg                 -1.43057     -4406.68       -1.69382     6765.91                     0  Float32\n  ⋮  │           ⋮                  ⋮             ⋮             ⋮                ⋮              ⋮         ⋮\n  22 │ pmra_hip_error          1.22346      0.290212       0.93546      2269.23                     0  Float32\n  23 │ pmdec_hip_error         1.00177      0.289527       0.794942     113.61                      0  Float32\n  24 │ pmra_pmdec_hip          0.00441718   -0.94068       0.000400515  0.986897                    0  Float32\n  25 │ epoch_ra_gaia           2016.07      2015.11        2016.07      2017.05                     0  Float64\n  26 │ epoch_dec_gaia          2016.09      2014.95        2016.1       2017.2                      0  Float64\n  27 │ epoch_ra_hip            1991.25      1990.4         1991.25      1992.43                     0  Float64\n  28 │ epoch_dec_hip           1991.28      1990.34        1991.28      1992.41                     0  Float64\n  29 │ crosscal_pmra_hip       -0.0578266   -1.36874       -0.0648208   1.50959                     0  Float32\n  30 │ crosscal_pmdec_hip      0.00226569   -1.15742       0.00306844   1.59232                     0  Float32\n  31 │ crosscal_pmra_hg        -0.0013262   -0.0511373     -0.00269026  0.0619938                   0  Float32\n  32 │ crosscal_pmdec_hg       0.000217839  -0.0598967     0.00025581   0.0564424                   0  Float32\n  33 │ nonlinear_dpmra         -9.0424e-5   -7.98001       3.44128e-8   2.64822                     0  Float32\n  34 │ nonlinear_dpmdec        0.000311498  -4.1194        1.92019e-7   16.0394                     0  Float32\n  35 │ chisq                   566.555      3.11559e-5     3.35103      3.67633e5                   0  Float32\n                                                                                                  6 rows omitted\n","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"This lists all the columns of the table along with their min, max, median, and means. It also specifies how many entries are missing and the element type of the column.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"We can access a specific column from the table using two different syntaxes: df[:,\"epoch_ra_gaia\"], or simply df.epoch_ra_gaia.","category":"page"},{"location":"tutorials/tabular-data/#Filtering","page":"Working with tabular data","title":"Filtering","text":"","category":"section"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"Let's apply a cut to the parallax column to only include nearby stars:","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> nearby = filter(:parallax_gaia => >(50.0), df)\n799×35 DataFrame\n Row │ hip_id  gaia_source_id       gaia_ra    gaia_dec   radial_velocity  radial_vel ⋯\n     │ Int32   Int64                Float64    Float64    Float32          Float32    ⋯\n─────┼─────────────────────────────────────────────────────────────────────────────────\n   1 │    428   386655019234959872    1.30108   45.7859          -1.24273             ⋯\n   2 │    436  4706630501049679744    1.32232  -67.8351          40.2364\n   3 │    439  2306965202564744064    1.38379  -37.3675          25.2944\n   4 │    473   386653851004022144    1.42676   45.8114           1.15092\n  ⋮  │   ⋮              ⋮               ⋮          ⋮             ⋮                    ⋱\n 796 │ 117779  2867175035571212416  358.285     29.0182           1.30031             ⋯\n 797 │ 117828  6377828354964753792  358.463    -75.6342          -9.62612\n 798 │ 117966  2442996678074668288  358.914     -6.14423         17.0672\n 799 │ 120005  1022456104850892928  138.591     52.6834          11.9794\n                                                        30 columns and 791 rows omitted","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"Let's break this down. First, we specify the column name as :parallax_gaia. The : syntax defines a Symbol in Julia which is a bit like a string and a variable name. Next, we say what filter we want to apply to this column by passing a key-value Pair constructed with =>. This syntax, e.g. 1 => 2 just groups two values and is unrelated to keyword arguments. Then, we pass a predicate function, that is a function that takes one value and returns true or false. The expression >(50.0) produces such a function that takes a value and compares it with 50.0 milliarseconds of parallax. Finally, we pass the table we want to filter.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"This useful cheatsheet by Tom Kwong is a great reference for these sort of operations.","category":"page"},{"location":"tutorials/tabular-data/#Plotting","page":"Working with tabular data","title":"Plotting","text":"","category":"section"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"Let's now visualize these stars as they appear in the plane of the sky. We'll colour them based on the significance of the anomalous acceleration they had between the two satellite missions. This acceleration could be caused by a hidden companion star or planet.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> using Plots\njulia> scatter(\n    nearby.gaia_ra,\n    nearby.gaia_dec;\n    marker_z = log10.(nearby.chisq),\n    colorbartitle=\"log10 χ²\", # typed as \\chi <tab> \\^2 <tab>\n    label = \"\",\n    xlabel = \"right ascension (°)\", # typed as \\degree <tab>\n    ylabel = \"declination (°)\" \n)","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"Let's improve this plot by using a different map projection. We can make this conversion using AstroLib.jl.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"The function aitoff takes longitude and latitude (or in this case, right-ascension and delcination) and returns a new position using an Aitoff projection.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> using AstroLib\njulia> newpoints = aitoff.(nearby.gaia_ra, nearby.gaia_dec)","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"newpoints is returned as a vector of Tuples of x and y coordinates, but to plot them we'll need separate flat vectors of x and y values. We can convert using getindex:","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> newx = getindex.(newpoints, 1)\njulia> newy = getindex.(newpoints, 2)\n799-element Vector{Float64}:\n  49.51360693576993\n -71.02232113037604\n -40.77386766281466\n   ⋮\n -78.04105630927837\n  -6.821326623255115\n  64.9538084311332","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"getindex(obj, n) is equivalent to writing obj[n]. Here we use broadcasting to fetch the first and then second element of each point in the list.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"Finally, we'll make the plot and tweak some formatting options:","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"julia> scatter(\n    newx,\n    newy;\n    marker_z = log10.(nearby.chisq),\n    color = :turbo,\n    colorbartitle=\"log10 χ²\", # typed as \\chi <tab> \\^2 <tab>\n    label = \"\",\n    xlabel = \"right ascension (°)\", # typed as \\degree <tab>\n    ylabel = \"declination (°)\",\n    background=:transparent,\n    foreground=:gray,\n    framestyle=:box,\n    markerstrokewidth=0,\n    grid=:none\n)","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"(Image: Plot of nearby stars with significant acceleration)","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"We can save the plot using savefig(\"myplot.pdf\"). png, svg, and other formats are also supported.","category":"page"},{"location":"tutorials/tabular-data/","page":"Working with tabular data","title":"Working with tabular data","text":"For more on plotting in general, see the Plots.jl documentation.","category":"page"},{"location":"highlevels/numerical-utils/#Numerical-Utilities-Overview","page":"Numerical Utilities","title":"Numerical Utilities Overview","text":"","category":"section"},{"location":"highlevels/numerical-utils/#BoxLeastSquares.jl","page":"Numerical Utilities","title":"BoxLeastSquares.jl","text":"","category":"section"},{"location":"highlevels/numerical-utils/","page":"Numerical Utilities","title":"Numerical Utilities","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/numerical-utils/","page":"Numerical Utilities","title":"Numerical Utilities","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/numerical-utils/","page":"Numerical Utilities","title":"Numerical Utilities","text":"Compute box-least-squares periodogram","category":"page"},{"location":"highlevels/numerical-utils/","page":"Numerical Utilities","title":"Numerical Utilities","text":"Fit BLS periodograms to time-series data\nExtract best-fitting transit parameters from the BLS periodogram\nFully compatible with Unitful.jl","category":"page"},{"location":"highlevels/numerical-utils/#LombScargle.jl","page":"Numerical Utilities","title":"LombScargle.jl","text":"","category":"section"},{"location":"highlevels/numerical-utils/","page":"Numerical Utilities","title":"Numerical Utilities","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/numerical-utils/","page":"Numerical Utilities","title":"Numerical Utilities","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/numerical-utils/","page":"Numerical Utilities","title":"Numerical Utilities","text":"Compute Lomb-Scargle periodogram","category":"page"},{"location":"highlevels/numerical-utils/","page":"Numerical Utilities","title":"Numerical Utilities","text":"Create periodograms from unevenly sampled periodic signals\nSupports multi-threading","category":"page"},{"location":"tutorials/jwst-image-scale-bar/#tutorial-jwst-scalebar","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"","category":"section"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"This tutorial shows how to download one of the new famous JWST release images of the Carina nebula, plot it with world coordinates (RA and DEC), and add a scalebar. Let's get started!","category":"page"},{"location":"tutorials/jwst-image-scale-bar/#Packages","page":"JWST image with scale bar","title":"Packages","text":"","category":"section"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Downloads: we'll use this built-in Julia standard library to download the raw image data\nAstroImages: we'll use this package to load and display the image\nPlots: we'll use this package to display coordinates along the image and add the scalebar","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"You can install the necessary packages by running Julia, and typing ] to enter Pkg-mode. Then: add AstroImages Plots. Alternatively, you can run using Pkg; Pkg.add([\"AstroImages\", \"Plots\"]).","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"If you will be using these tools as part of a bigger project, it's strongly recommended to create a Julia Project to record package versions.  If you're just experimenting, you can create a temporary project by running ] activate --temp.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"If you're using Pluto notebooks, installing and recording package versions in a project are handled for you automatically.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/#Downloading-the-data","page":"JWST image with scale bar","title":"Downloading the data","text":"","category":"section"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"All JWST data is available from the MAST archive. ","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"A mirror of the JWST initial release data is also hosted on AWS. We'll use this to directly download a specific famous image by URL.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"warning: Large Download\nThe size of this image is over 3GB! Ensure you have enough space on your hard drive before running the following code.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"using Downloads\n\nfname = Downloads.download(\n   \"https://stpubdata-jwst.stsci.edu/ero/jw02731/L3/t/\"*\n   \"jw02731-o001_t017_nircam_clear-f187n_i2d.fits\"\n)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/#Loading-the-image","page":"JWST image with scale bar","title":"Loading the image","text":"","category":"section"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"We can use AstroImages.jl to load the image.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"using AstroImages\n\ncarina_full = load(fname); # semi-colon prevents displaying the image","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"[ Info: Image was loaded from HDU 2","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Let's check the resolution of the image:","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"size(carina)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"(14436, 8568)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Wow, that's over 120 megapixels! ","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"AstroImages will fall back to downscaling it automatically before displaying it using ImageTransformations.restrict, but let's make our lives simpler and just use every 10th pixel:","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"carina = carina_full[begin:10:end, begin:10:end]","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"(Image: Carina nebula displayed as an image)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Since we didn't put a semi-colon, the image was displayed. This works automatically if you use the VS Code editor, Jupyter notebooks, or Pluto Notebooks. If you're using a terminal, you can use ElectronDisplay.jl or ImageView.jl to open an interactive window.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"imview is the function that was called automatically  to display the image, but we can call it ourselves if we want to customize the display. We can make the image pop a little more by adjusting the display limits, or clims. These can be either a tuple of min and max values (i.e. (0.0, 100.0)) or a function to calculate them for us based on some criteria. We'll adjust the limits to remove the top and bottom 1% of all  pixels:","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"imview(carina; clims=Percent(98))","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"(Image: Carina nebula displayed as an image with higher contrast)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"In Julia, keyword arguments come after positional arguments and they can be separated by a semi-colon.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/#Adding-World-Coordinates","page":"JWST image with scale bar","title":"Adding World Coordinates","text":"","category":"section"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"The image header already contains WCS keys to specify the location of the image in the sky. Let's take a peek at one of these header keys:","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"println(carina[\"CTYPE1\", Comment])\nprintln(carina[\"CTYPE1\"])","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"first axis coordinate type\nRA---TAN","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"This shows that the coordinate type for the first axis is \"RA–-TAN\".","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Now, we'll combine AstroImages with the Plots.jl library to display these coordinates.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"using Plots\n\nimplot(carina; clims=Percent(98))","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"(Image: Carina nebula displayed in a plot)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"The image is tilted compared to the right-ascension and declination celestial coordinate system, so the grid is rotated.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"The colourbar on the right displays the units of the image: Mega-Janskys per steradian: units of energy per collecting area, per spectral bandwidth, per solid-angle on the sky.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Let's turn off the grid for now:","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"implot(carina; grid=false, clims=Percent(98))","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"(Image: Carina nebula displayed in a plot without grid lines)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Full documentation for the implot function is available in the AstroImages.jl docs.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/#Adding-a-Scalebar","page":"JWST image with scale bar","title":"Adding a Scalebar","text":"","category":"section"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Another way we can communicate the scale of this image is by adding a scalebar. Since we are working in spherical coordinates, the cartesian Pythagorean theorem won't quite cut it. There are approximations we can use for small angles, but let's go ahead and compute the scale bar length in a fully general way.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"For two points of right-ascension alpha and declination delta, a=(alpha_a delta_a) and b=(alpha_b delta_b), the angular separation is","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"cos (gamma) = cos (90 - delta_a) cos (90 - delta_b) + sin (90 - delta_a) sin (90 - delta_b) cos (alpha_a - alpha_b)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"We can calculate the length of our scalebar in pixels by picking a coordinate a, picking an angular separation gamma, and then solving for b:","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"using LinearAlgebra\n\n# Start the scalebar here in pixel coordinates\na_px = [1000, 100]\n\n# Convert to world coordinates\na_deg = pix_to_world(carina_full, a_px)\n\n# Extend by 10 arcminutes of declination\nb_deg  = a_deg .+ [0, 1/60]\n\n# Convert back to pixel coordinates\nb_px = world_to_pix(carina_full, b_deg)\n\n# Measure the angular distance in pixel coordinates\n# note: in theory this depends on where in the image we make this calculation\n# because the coordinate system is warped\narcmin_px = norm(stop_coord_pix .- start_coord_pix)\n\n# Plot our image again\nimplot(carina; grid=false, clims=Percent(98))\n\n# Overplot the scalebar\nplot!(\n    # X\n    [11000, 11000+arcmin_px],\n    # Y\n    [1000,  1000];\n    # Formatting:\n    color=:white,\n    linewidth=5,\n    label=\"\"\n)\n\n# add annotation\nannx = 11000+arcmin_px/2\nanny = 1000+100\nannotate!(\n    (annx, anny, text(\" 1' \", 10, :white, :center, :bottom))\n)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"(Image: Carina nebula displayed with a scale bar)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"Looking good! If we only want to communiate the scale and not the location, we can hide the tick marks and colorbar for a cleaner look:","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"\n# Hide decorations\nimplot(\n    carina[10:end-10, 10:end-10]; # crop slightly\n    grid=false,\n    ticks=false,\n    colorbar=false,\n    clims=Percent(98),\n    xlabel=\"\",\n    ylabel=\"\",\n    framestyle=:none,\n    background_outside=:transparent,\n)\n\n# Overplot the scalebar\nplot!(\n    # X\n    [11000, 11000+arcmin_px],\n    # Y\n    [1000,  1000];\n    # Formatting:\n    color=:white,\n    linewidth=5,\n    label=\"\",\n)\n\n# add annotation\nannx = 11000+arcmin_px/2\nanny = 1000+100\nannotate!(\n    (annx, anny, text(\" 1' \", 10, :white, :center, :bottom)) \n)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"(Image: Carina nebula displayed with a scale bar and no other plot decorations)","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"To save the image, just run savefig(\"output.png\"). pdf, svg, and other file formats are also supported.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"To learn more about displaying images and world coordinates, see the AstroImages.jl documentation.","category":"page"},{"location":"tutorials/jwst-image-scale-bar/","page":"JWST image with scale bar","title":"JWST image with scale bar","text":"For more on plotting in general, see the Plots.jl documentation.","category":"page"},{"location":"highlevels/cosmology/#Cosmology-Overview","page":"Cosmology","title":"Cosmology Overview","text":"","category":"section"},{"location":"highlevels/cosmology/#Cosmology.jl","page":"Cosmology","title":"Cosmology.jl","text":"","category":"section"},{"location":"highlevels/cosmology/","page":"Cosmology","title":"Cosmology","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/cosmology/","page":"Cosmology","title":"Cosmology","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/cosmology/","page":"Cosmology","title":"Cosmology","text":"Distances in the universe","category":"page"},{"location":"highlevels/cosmology/","page":"Cosmology","title":"Cosmology","text":"Lambda-CDM and w_0-w_a cosmologies\nOpen, closed, and flat variants\nFully compatible with Unitful.jl","category":"page"},{"location":"tutorials/curve-fit/#curve-fit","page":"Curve Fitting","title":"Curve Fitting","text":"","category":"section"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"This tutorial will demonstrate fitting data with a straight line (linear regression), an abitrary non-linear model, and finally a Bayesian model.","category":"page"},{"location":"tutorials/curve-fit/#Packages","page":"Curve Fitting","title":"Packages","text":"","category":"section"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"LinearAlgebra we'll use this built-in Julia standard library to perform a linear regression\nOptimization: we'll use this package to display coordinates along the image and add the scalebar\nOptimizationOptimJL: the specific optimizer backend we will use.  For your own problems, select the best backend from the Optimization.jl documentation page.\nTuring: we'll use this package for Bayesian modelling.\nPairPlots: we'll use this for creating a corner plot of the posterior from our Bayesian models.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"You can install the necessary packages by running Julia, and typing ] to enter Pkg-mode. Then: add Plots Optimization OptimizationOptimJL Turing PairPlots. Alternatively, you can run using Pkg; Pkg.add([\"Plots\", \"Optimization\", \"OptimizationOptimJL\", \"Turing\", \"PairPlots\"]). In your own code, you most likely won't need all of these packages. Pick and choose the one that best fits your problem.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"If you will be using these tools as part of a bigger project, it's strongly recommended to create a Julia Project to record package versions. If you're just experimenting, you can create a temporary project by running ] activate --temp.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"If you're using Pluto notebooks, installing and recording package versions in a project are handled for you automatically.","category":"page"},{"location":"tutorials/curve-fit/#Generating-the-data","page":"Curve Fitting","title":"Generating the data","text":"","category":"section"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"We'll generate synthetic data for this problem. We'll make a weak parabola with some noise. For consistency, we'll seed the Julia random number generator so that we see the same noise each time the tutorial is run.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"julia> using Random\njulia> Random.seed!(1234)","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"By calling seed!, the pattern of random numbers generated by rand and randn will be the same each time.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Now we'll generate the data:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"julia> x = 0:5:100 # Or equivalently: range(0, 100, step=5)\n0:1:100\n\njulia> y = (x ./ 20 .- 0.2).^2 .+ 2 .+ randn(length(x))\n101-element Vector{Float64}:\n  3.010656328855214\n  1.0432815884648003\n  ⋮\n 25.653998582068482\n 26.260043796712125\n","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"The randn function generates a random value normally distributed around 0 with a standard deviation of 1. rand on the other hand creates uniformly distributed random values distributed between 0 and 1.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Let's plot the data to see what it looks like:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"julia> using Plots\njulia> scatter(x, y; xlabel=\"x\", ylabel=\"y\", label=\"data\")","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"(Image: )","category":"page"},{"location":"tutorials/curve-fit/#Linear-regression","page":"Curve Fitting","title":"Linear regression","text":"","category":"section"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Before using any packages, let's perform a linear fit from scratch using some linear algebra.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"The equation of a line can be written in matrix form as ","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"quad\nbeginpmatrix \nN  sum y_i \nsum y_i  sum y_i^2\nendpmatrix\nbeginpmatrix\nc_1 \nc_2 \nendpmatrix=\nbeginpmatrix\nsum y_i \nsum y_i x_i\nendpmatrix","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"where c_1 and c_2 are the intercept and slope.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Multiplying both sides by the inverse of the first matrix gives","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"quad\nbeginpmatrix\nc_1 \nc_2 \nendpmatrix=\nbeginpmatrix \nN  sum y_i \nsum y_i  sum y_i^2\nendpmatrix^-1\nbeginpmatrix\nsum y_i \nsum y_i x_i\nendpmatrix","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"We can write the right-hand side matrix and vector (let's call them A and b) in Julia notation like so:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"julia> A = [\n          length(x) sum(x)\n          sum(x)    sum(x.^2)\n      ]\n2×2 Matrix{Int64}:\n   21   1050\n 1050  71750\n\njulia> b = [\n           sum(y)\n           sum(y .* x)                                          \n       ]\n2-element Vector{Float64}:\n   210.4250937868108\n 15023.030866331104","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"We can now perform the linear fit by solving the system of equations with the \\ operator:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"julia> c = A\\b\n2-element Vector{Float64}:\n -1.67268257376372\n  0.2338585027008085\n","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Let's make a helper function linfunc that takes an x value, a slope, and an intercept and calculates the corresponding y value:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"julia> linfunc(x; slope, intercept) = slope*x + intercept\nlinfunc (generic function with 1 method)\n","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Finally, we can plot the solution:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"julia> yfit = linfunc.(x; slope=c[2], intercept=c[1])\njulia> scatter(x, y, xlabel=\"x\", ylabel=\"y\", label=\"data\")\njulia> plot!(x, yfit, label=\"best fit\")","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"(Image: )","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"The packages LsqFit and GLM (for generalized linear models) contain functions for performing and evaluating these types of linear fits.","category":"page"},{"location":"tutorials/curve-fit/#(Non-)linear-curve-fit","page":"Curve Fitting","title":"(Non-)linear curve fit","text":"","category":"section"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"The packages above can be used to fit different polynomial models, but if we have a truly arbitrary Julia function we would like to fit to some data we can use the Optimization.jl package. Through its various backends, Optimization.jl supports a very wide range of algorithms for local, global, convex, and non-convex optimization. ","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"The first step is to define our objective function. We'll reuse our simple linfunc linear function from above:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"linfunc(x; slope, intercept) = slope*x + intercept\n\n# We must supply an objective function that will be minimized\n# The u argument is a vector of parameters from the optimizer.\n# data is a vector of static parameters passed through below.\nfunction objective(u, data)\n    # Get our fit parameters from u\n    slope, intercept = u\n    # equivalent to:\n    # slope = u[1]\n    # intercept = u[2]\n\n    # Get the x and y vectors from data\n    x, y = data\n    \n    # Calculate the residuals between our model and the data\n    residuals = linfunc.(x; slope, intercept) .- y\n\n    # Return the sum of squares of the residuals to minimize\n    return sum(residuals.^2)\nend\n\n# Define the initial parameter values for slope and intercept\nu0 = [1.0, 1.0]\n# Pass through the data we want to fit\ndata = [x,y]\n\n# Create an OptimizationProblem object to hold the function, initial\n# values, and data.\nusing Optimization\nprob = OptimizationProblem(objective,u0,data)\n\n# Import the optimization backend we want to use\nusing OptimizationOptimJL\n\n# Minimize the function. Optimization.jl uses the SciML common solver\n# interface. Pass the problem you want to solve (optimization problem\n# here) and a solver to use.\n# NelderMead() is a derivative-free method for finding a function's\n# local minimum.\nsol = solve(prob,NelderMead())\n\n# Exctract the best-fitting parameters\nslope, intercept = sol.u","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Note: the NelderMead() algorithm behaves nearly identically to MATLAB's fminsearch. ","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"We can now plot the solution:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"julia> yfit = linfunc.(x; slope, intercept)\njulia> scatter(x, y, xlabel=\"x\", ylabel=\"y\", label=\"data\")\njulia> plot!(x, yfit, label=\"best fit\")","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"(Image: )","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"We can now test out a quadratic fit using the same package:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"function objective(u, data)\n    x, y = data\n    \n    # Define an equation of a quadratic, e.g.:\n    # 3x^2 + 2x + 1\n    model = u[1] .* x.^2 .+ u[2] .* x .+ u[3]\n\n    # Calculate the residuals between our model and the data\n    residuals = model .- y\n\n    # Return the sum of squares of the residuals to minimize\n    return sum(residuals.^2)\nend\n\nu0 = [1.0, 1.0, 1.0]\ndata = [x,y]\nprob = OptimizationProblem(objective,u0,data)\nusing OptimizationOptimJL\nsol = solve(prob,NelderMead())\nu = sol.u\n\nyfit = u[1] .* x.^2 .+ u[2] .* x .+ u[3]\n\nscatter(x, y, xlabel=\"x\", ylabel=\"y\", label=\"data\")\nplot!(x,  yfit, label=\"quadratic fit\")","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"(Image: )","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"This is already very fast; however, as the scale of your problem grows, there are several routes you can take to improve the optimization performance. First, you can use automatic differentiation and a higher order optimization algorithm:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"using ForwardDiff\noptf = OptimizationFunction(objective, Optimization.AutoForwardDiff())\nprob = OptimizationProblem(optf,u0,data)\n@time sol = solve(prob,BFGS())  # another good algorithm is Newton()","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"You can also write an \"in-place\" version of objective that doesn't allocate new arrays with each iteration.","category":"page"},{"location":"tutorials/curve-fit/#Bayesian-models","page":"Curve Fitting","title":"Bayesian models","text":"","category":"section"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Let's shift gears and now create a fully Bayesian model using the Turing.jl package.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Instead of defining an arbitrary Julia function, this package requires us to use a macro called @model.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Let's start with a linear model once more, now with the Turing @model syntax:","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"# Bayesian linear regression.\n@model function linear_regression(x, y)\n    # Set variance prior.\n    σ₂ ~ truncated(Normal(0, 100), 0, Inf)\n    # Typed as \\sigma <tab> \\_2 <tab>\n\n    # Set intercept prior.\n    intercept ~ Normal(0, 5)\n\n    # Set the prior on our slope coefficient.\n    slope ~ Normal(0, 10)\n\n    # Each point is drawn from a gaussian (Normal) distribution\n    # with mean calculated form our linear model, and standard\n    # deviation as the square root of the variance variable\n    for i in eachindex(x,y)\n        y[i] ~ Normal(x[i] * slope + intercept, sqrt(σ₂))\n    end\nend\n","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"We can now draw posterior samples from this model using one of many available samplers, NUTS, the No U-Turn Sampler.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"model = linear_regression(x, y)\nchain = sample(model, NUTS(0.65), 500)","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"┌ Info: Found initial step size\n└   ϵ = 0.003125\nSampling 100%|█████████████████████████████████████| Time: 0:00:05\nChains MCMC chain (25000×15×1 Array{Float64, 3}):\n\nIterations        = 1001:1:26000\nNumber of chains  = 1\nSamples per chain = 25000\nWall duration     = 5.88 seconds\nCompute duration  = 5.88 seconds\nparameters        = σ₂, intercept, slope\ninternals         = lp, n_steps, is_accept, acceptance_rate, log_density, hamiltonian_energy, hamiltonian_energy_error, max_hamiltonian_energy_error, tree_depth, numerical_error, step_size, nom_step_size\n\nSummary Statistics\n  parameters      mean       std   naive_se      mcse          ess      rhat   ess_per_sec \n      Symbol   Float64   Float64    Float64   Float64      Float64   Float64       Float64\n\n          σ₂    6.7431    2.6279     0.0166    0.0265   10640.9415    1.0000     1810.6077\n   intercept   -1.5979    1.0739     0.0068    0.0105   10239.7534    1.0001     1742.3436\n       slope    0.2328    0.0186     0.0001    0.0002   10306.9493    1.0001     1753.7773\n\nQuantiles\n  parameters      2.5%     25.0%     50.0%     75.0%     97.5% \n      Symbol   Float64   Float64   Float64   Float64   Float64\n\n          σ₂    3.3126    4.9457    6.1965    7.9372   13.3608\n   intercept   -3.6910   -2.2965   -1.5992   -0.9049    0.5423\n       slope    0.1959    0.2206    0.2329    0.2449    0.2690","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"intercept = chain[\"intercept\"]\nslope = chain[\"slope\"]\nσ₂ = chain[\"σ₂\"]\n\nplot(x, x .* slope' .+ intercept';\n    label=\"\",\n    color=:gray,\n    alpha=0.05\n)\nscatter!(x, y, xlabel=\"x\", ylabel=\"y\", label=\"data\", color=1)","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"(Image: )","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Each gray curve is a sample from the posterior distribution of this model. To examine the model parameters and their covariance in greater detail, we can make a corner plot using the PairPlots.jl package. We'll need a few more samples for a nice plot, so re-run the NUTS sampler with more iterations first.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Random.seed!(1234)\nchain = sample(model, NUTS(0.65), 25_000)\n\nusing PairPlots\ntable = (;\n    intercept= chain[\"intercept\"],\n    slope= chain[\"slope\"],\n    σ= sqrt.(chain[\"σ₂\"])\n)\nPairPlots.corner(table)","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"(Image: )","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Let's now repeat this proceedure with a Bayesian quadratic model.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"@model function quad_regression(x, y)\n    # Prior on the variance of the data around the best-fit line\n    σ₂ ~ truncated(Normal(0, 10), 0, Inf)\n\n    # Priors on the three quadratic parameters\n    u1 ~ Normal(0,0.01)\n    u2 ~ Normal(0,0.1)\n    u3 ~ Normal(0,5)\n\n    for i in eachindex(x,y)\n        model = u1 * x[i]^2 + u2*x[i] + u3\n        y[i] ~ Normal(model, sqrt(σ₂))\n    end\nend\n","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"We can now draw posterior samples from this model using one of many available samplers, NUTS, or the No U-Turn Sampler.","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"model = quad_regression(x, y)\nchain = sample(model, NUTS(0.65), 500)","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"┌ Info: Found initial step size\n└   ϵ = 0.0001953125\nSampling 100%|█████████████████████████████████████| Time: 0:00:05\nChains MCMC chain (500×16×1 Array{Float64, 3}):\n\nIterations        = 251:1:750\nNumber of chains  = 1\nSamples per chain = 500\nWall duration     = 5.89 seconds\nCompute duration  = 5.89 seconds\nparameters        = σ₂, u1, u2, u3\ninternals         = lp, n_steps, is_accept, acceptance_rate, log_density, hamiltonian_energy, hamiltonian_energy_error, max_hamiltonian_energy_error, tree_depth, numerical_error, step_size, nom_step_size\n\nSummary Statistics\n  parameters      mean       std   naive_se      mcse        ess      rhat   ess_per_sec \n      Symbol   Float64   Float64    Float64   Float64    Float64   Float64       Float64\n\n          σ₂    1.5698    0.6322     0.0283    0.0518   117.5553    0.9994       19.9517\n          u1    0.0024    0.0003     0.0000    0.0000   134.9184    0.9997       22.8986\n          u2   -0.0059    0.0283     0.0013    0.0024   107.3698    0.9995       18.2230\n          u3    2.1371    0.6109     0.0273    0.0562    87.2121    0.9995       14.8018\n\nQuantiles\n  parameters      2.5%     25.0%     50.0%     75.0%     97.5% \n      Symbol   Float64   Float64   Float64   Float64   Float64\n\n          σ₂    0.8757    1.1468    1.3945    1.8181    3.3834\n          u1    0.0018    0.0022    0.0024    0.0026    0.0030\n          u2   -0.0612   -0.0237   -0.0045    0.0133    0.0438\n          u3    0.9635    1.7155    2.1211    2.5172    3.3960","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"u1 = chain[\"u1\"]\nu2 = chain[\"u2\"]\nu3 = chain[\"u3\"]\nposterior = u1' .* x.^2 .+ u2' .* x .+ u3'\n\nplot(x, posterior;\n    label=\"\",\n    color=:gray,\n    alpha=0.1\n)\nscatter!(x, y, xlabel=\"x\", ylabel=\"y\", label=\"data\", color=1)","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"(Image: )","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"Random.seed!(1)\nchain = sample(model, NUTS(0.65), 25_000)\n\nusing PairPlots\ntable = (;\n    u_1 = chain[\"u1\"],\n    u_2 = chain[\"u2\"],\n    u_3 = chain[\"u3\"],\n    σ= sqrt.(chain[\"σ₂\"])\n)\nPairPlots.corner(table)","category":"page"},{"location":"tutorials/curve-fit/","page":"Curve Fitting","title":"Curve Fitting","text":"(Image: )","category":"page"},{"location":"tutorials/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"Welcome! This page contains links to general tutorials useful to astronomers and astrophysicists getting started with Julia.","category":"page"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"In Julia, smaller focussed packages are preferred. This page shows how you can combine smaller packages to get big results!","category":"page"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"For more advanced usage examples, please see the documentation pages of the individual packages linked on the Ecosystem page.","category":"page"},{"location":"tutorials/#Installing-Julia","page":"Getting Started","title":"Installing Julia","text":"","category":"section"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"To install Julia, it's strongly recommended to download the official binary for your operating system.  Visit the julialang.org Downloads page, and select the latest stable version for your operating system. Currently, this is 1.7.3. Click the [help] links next to your operating system if you require more detailed instructions.","category":"page"},{"location":"tutorials/#Installing-Packages","page":"Getting Started","title":"Installing Packages","text":"","category":"section"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"Julia packages are installed and managed using the built-in package manager called Pkg.jl. You can either use it interactively by entering \"Pkg mode\" in your terminal, or programatically. We'll illustrate interactive use here.","category":"page"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"Start julia in a terminal by running julia.\nType ] to enter package-mode (see Julia documentation for more details)\nType add SomePackage to install a package, replacing SomePackage with the desired package name without the .jl extension.","category":"page"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"This will take a little while to download all the required packages and precompile for your system. If you have several packages to install, list them all at once instead of one by one to save time: add SomePackage1 SomePackage2 SomePackage3","category":"page"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"It's recommended to use Julia projects to store what packages you use and make it easier to reproduce your work. You can create or activate a previously created project by entering Pkg-mode (type ]) and running activate myproject. Another option is to create a folder for your project, and start julia in that folder with the option julia --project=./. ","category":"page"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"For more information on how to use the Julia package manager, refer to the Pkg.jl documentation.","category":"page"},{"location":"tutorials/#Tutorial-Index","page":"Getting Started","title":"Tutorial Index","text":"","category":"section"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"The following tutorials show how to use Julia to perform common taks in astronomy and astrophysics.","category":"page"},{"location":"tutorials/#General","page":"Getting Started","title":"General","text":"","category":"section"},{"location":"tutorials/","page":"Getting Started","title":"Getting Started","text":"Plot a JWST image with world coordinates and a scale bar\nLoad tabular data from a FITS file and plot acceleration of nearby stars\nCurve fitting: least square and Bayesian","category":"page"},{"location":"highlevels/orb-ephem/#Orbits-and-Ephemerides-Overview","page":"Orbits & Emphemerides","title":"Orbits & Ephemerides Overview","text":"","category":"section"},{"location":"highlevels/orb-ephem/#Transits.jl","page":"Orbits & Emphemerides","title":"Transits.jl","text":"","category":"section"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"Flexible photometric transit curves with limb darkening","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"Inspired by exoplanet\nIncludes Keplerian orbits and generic orbits\nFully compatible with Unitful.jl","category":"page"},{"location":"highlevels/orb-ephem/#sefffal/PlanetOrbits.jl","page":"Orbits & Emphemerides","title":"sefffal/PlanetOrbits.jl","text":"","category":"section"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"Tools for displaying and solving Keplerian orbits in the context of direct imaging","category":"page"},{"location":"highlevels/orb-ephem/#EarthOrientation.jl","page":"Orbits & Emphemerides","title":"EarthOrientation.jl","text":"","category":"section"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"Earth orientation parameters","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"Calculate Earth orientation parameters from IERS tables","category":"page"},{"location":"highlevels/orb-ephem/#JPLEphemeris.jl","page":"Orbits & Emphemerides","title":"JPLEphemeris.jl","text":"","category":"section"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"JPL Development Ephemerides","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"Calculate positions and velocities of solar system bodies","category":"page"},{"location":"highlevels/orb-ephem/#AstroLib.jl","page":"Orbits & Emphemerides","title":"AstroLib.jl","text":"","category":"section"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"Collection of generic astronomical and astrophysical functions","category":"page"},{"location":"highlevels/orb-ephem/","page":"Orbits & Emphemerides","title":"Orbits & Emphemerides","text":"Translation of many IDL AstroLib procedures","category":"page"},{"location":"ecosystem/#eco","page":"Ecosystem","title":"Ecosystem","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"The joy of our community is the many astronomy and astrophysics packages available for wide use. Packages are separated by functionality and Julia's declarative package manager takes care of resolving dependencies. You get just the functionality you need, and smaller packages lead to more rapid development.","category":"page"},{"location":"ecosystem/#Data-I/O","page":"Ecosystem","title":"Data I/O","text":"","category":"section"},{"location":"ecosystem/#ASDF2.jl","page":"Ecosystem","title":"ASDF2.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Load files in ASDF format, which is the upcoming stadnard for STScI/Roman","category":"page"},{"location":"ecosystem/#AstroImages.jl","page":"Ecosystem","title":"AstroImages.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Load, manipulate, and visualize astronomical images","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Works with the FileIO.jl interface","category":"page"},{"location":"ecosystem/#FITSIO.jl","page":"Ecosystem","title":"FITSIO.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Reading and writing FITS files","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Interact with header data units (HDUs), FITS headers, and FITS data: both images and tables\nFITS tables follow the Tables.jl interface, allowing seamless integration with the rich data ecosystem, like CSV.jl, DataFrames.jl, etc.","category":"page"},{"location":"ecosystem/#CFITSIO.jl","page":"Ecosystem","title":"CFITSIO.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Reading and writing FITS files","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Low-level wrapper for cfitsio\nThe c interface can be directly accessed with the CFITSIO_jll package","category":"page"},{"location":"ecosystem/#mweastwood/CasaCore.jl","page":"Ecosystem","title":"mweastwood/CasaCore.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Tables and measurement sets for radio astronomy","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Wrapper for CasaCore\nInterface for CASA tables and measures","category":"page"},{"location":"ecosystem/#emmt/OIFITS.jl","page":"Ecosystem","title":"emmt/OIFITS.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Support for OI-FITS","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Read and write OI-FITS optical interferometry data format","category":"page"},{"location":"ecosystem/#aplavin/VLBIData.jl","page":"Ecosystem","title":"aplavin/VLBIData.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Work with data formats common in very long baseline interferometry (VLBI)","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Read interferometric visibilities (uvfits), images (fits), and source models\nMinimal writing support for source models","category":"page"},{"location":"ecosystem/#aplavin/Difmap.jl","page":"Ecosystem","title":"aplavin/Difmap.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Wrapper for the Difmap program used in synthesis imaging","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Execute Difmap scripts, handle inputs/outputs and logs\nDisplay images and plots from Difmap in interactive Julia environments","category":"page"},{"location":"ecosystem/#Visualization-and-Plotting","page":"Ecosystem","title":"Visualization and Plotting","text":"","category":"section"},{"location":"ecosystem/#AstroImages.jl-2","page":"Ecosystem","title":"AstroImages.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Load, manipulate, and visualize astronomical images","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Works with the FileIO.jl interface\nAutomatic visualizations are directly integrated into many environments like VSCode, Pluto.jl, and IJulia.jl\nIncludes recipes for plotting with Plots.jl","category":"page"},{"location":"ecosystem/#SAOImageDS9.jl","page":"Ecosystem","title":"SAOImageDS9.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Interface with the DS9 image viewer","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Uses XPA.jl to communicate with DS9 instances\nEasily display images in DS9 and add features like circles and lines\nLow-level API accessible with set and get","category":"page"},{"location":"ecosystem/#Image-Processing","page":"Ecosystem","title":"Image Processing","text":"","category":"section"},{"location":"ecosystem/#CCDReduction.jl","page":"Ecosystem","title":"CCDReduction.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Common CCD image processing routines","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Creation of calibration files\nDark subtraction, flat normalization, bias subtraction, cropping\nSpecialized iterator for processing directories of FITS files using a table built from the FITS headers.","category":"page"},{"location":"ecosystem/#LACosmic.jl","page":"Ecosystem","title":"LACosmic.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Cosmic-ray rejection by Laplacian edge detection","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Implementation of the L.A.Cosmic algorithm (van Dokkum, 2001)\nReturns bad pixel masks and cleaned data","category":"page"},{"location":"ecosystem/#Photometry.jl","page":"Ecosystem","title":"Photometry.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Aperture photometry","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Background estimation and source extraction\nFast and precise aperture photometry","category":"page"},{"location":"ecosystem/#PSFModels.jl","page":"Ecosystem","title":"PSFModels.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Analytical, allocation-free point-spread-functions (PSF)","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Lazy representation allows fast allocation-free calculations\nGaussian (Normal), Moffat, and Airy disk.","category":"page"},{"location":"ecosystem/#Reproject.jl","page":"Ecosystem","title":"Reproject.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Astronomical image reprojection","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Uses FITSIO.jl and WCS.jl to reproject coordinate systems between FITS images","category":"page"},{"location":"ecosystem/#JuliaHCI/HCIToolbox.jl","page":"Ecosystem","title":"JuliaHCI/HCIToolbox.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Common utilities for high-contrast imaging (HCI) processing","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Morphological operations (rotation, stacking, shifting)\nMasking routines (circles, annulus, series of annuli)\nSpectral scaling and descaling","category":"page"},{"location":"ecosystem/#JuliaHCI/SubpixelRegistration.jl","page":"Ecosystem","title":"JuliaHCI/SubpixelRegistration.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Sub-pixel registration using discrete Fourier transforms","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Uses FFTs to register images, with arbitrary precision\nIncludes methods for Fourier based image-translation (phase-shifting)","category":"page"},{"location":"ecosystem/#JuliaHCI/ADI.jl","page":"Ecosystem","title":"JuliaHCI/ADI.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Angular Differential Imaging (ADI) routines in Julia","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"PCA, NMF, LLSG, LOCI, etc.\nApply algorithms framewise or in spectral differential imaging (SDI) using Julia's multiple dispatch\nProvide an interface for using these algorithms in other tools\nCommon HCI metrics including S/N maps, contrast curves, throughput curves (from PSF injection), STIM, etc.","category":"page"},{"location":"ecosystem/#Statistics","page":"Ecosystem","title":"Statistics","text":"","category":"section"},{"location":"ecosystem/#mileslucas/BiweightStats.jl","page":"Ecosystem","title":"mileslucas/BiweightStats.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Robust statistics based on the biweight transform","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Implements the location, scale, midvariance, midcovariance, and midcorrelation statistics","category":"page"},{"location":"ecosystem/#JuliaHCI/ADI.jl-2","page":"Ecosystem","title":"JuliaHCI/ADI.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Angular Differential Imaging (ADI) routines in Julia","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"PCA, NMF, LLSG, LOCI, etc.\nApply algorithms framewise or in spectral differential imaging (SDI) using Julia's multiple dispatch\nProvide an interface for using these algorithms in other tools\nCommon HCI metrics including S/N maps, contrast curves, throughput curves (from PSF injection), STIM, etc.","category":"page"},{"location":"ecosystem/#Time,-Coordinates,-Units","page":"Ecosystem","title":"Time, Coordinates, Units","text":"","category":"section"},{"location":"ecosystem/#AstroAngles.jl","page":"Ecosystem","title":"AstroAngles.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"String parsing and representation of angles","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Parse and represent sexagesimal angles with a variety of delimiters\nMethods for converting to hour-minute-second angles from degrees and radians, and vice-versa","category":"page"},{"location":"ecosystem/#AstroTime.jl","page":"Ecosystem","title":"AstroTime.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Astronomical time keeping","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"High-precision, time-scale aware, DateTime-like data type\nSupport all commonly used astronomical time scales","category":"page"},{"location":"ecosystem/#ERFA.jl","page":"Ecosystem","title":"ERFA.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Time systems conversions","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Low-level wrapper for liberfa","category":"page"},{"location":"ecosystem/#SkyCoords.jl","page":"Ecosystem","title":"SkyCoords.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Astronomical coordinate systems","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Supports ICRS, galactic, and FK5 coordinate systems\nFast conversion of coordinates between different systems","category":"page"},{"location":"ecosystem/#SPICE.jl","page":"Ecosystem","title":"SPICE.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"SPICE data retrieval and usage","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Wrapper for CSPICE\nRead SPICE data files and compute derived observation geometry such as altitude, latitude/longitude and lighting angles","category":"page"},{"location":"ecosystem/#UnitfulAstro.jl","page":"Ecosystem","title":"UnitfulAstro.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Astronomical units","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Extension of Unitful.jl","category":"page"},{"location":"ecosystem/#WCS.jl","page":"Ecosystem","title":"WCS.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"World Coordinate System transformations","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Wrapper for wcslib","category":"page"},{"location":"ecosystem/#Orbits-and-Ephemerides","page":"Ecosystem","title":"Orbits and Ephemerides","text":"","category":"section"},{"location":"ecosystem/#Transits.jl","page":"Ecosystem","title":"Transits.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Flexible photometric transit curves with limb darkening","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Inspired by exoplanet\nIncludes Keplerian orbits and generic orbits\nFully compatible with Unitful.jl","category":"page"},{"location":"ecosystem/#sefffal/PlanetOrbits.jl","page":"Ecosystem","title":"sefffal/PlanetOrbits.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Tools for displaying and solving Keplerian orbits in the context of direct imaging","category":"page"},{"location":"ecosystem/#EarthOrientation.jl","page":"Ecosystem","title":"EarthOrientation.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Earth orientation parameters","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Calculate Earth orientation parameters from IERS tables","category":"page"},{"location":"ecosystem/#JPLEphemeris.jl","page":"Ecosystem","title":"JPLEphemeris.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"JPL Development Ephemerides","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Calculate positions and velocities of solar system bodies","category":"page"},{"location":"ecosystem/#AstroLib.jl","page":"Ecosystem","title":"AstroLib.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Collection of generic astronomical and astrophysical functions","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Translation of many IDL AstroLib procedures","category":"page"},{"location":"ecosystem/#General","page":"Ecosystem","title":"General","text":"","category":"section"},{"location":"ecosystem/#AstroLib.jl-2","page":"Ecosystem","title":"AstroLib.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Collection of generic astronomical and astrophysical functions","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Translation of many IDL AstroLib procedures","category":"page"},{"location":"ecosystem/#BoxLeastSquares.jl","page":"Ecosystem","title":"BoxLeastSquares.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Compute box-least-squares periodogram","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Fit BLS periodograms to time-series data\nExtract best-fitting transit parameters from the BLS periodogram\nFully compatible with Unitful.jl","category":"page"},{"location":"ecosystem/#Cosmology.jl","page":"Ecosystem","title":"Cosmology.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Distances in the universe","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Lambda-CDM and w_0-w_a cosmologies\nOpen, closed, and flat variants\nFully compatible with Unitful.jl","category":"page"},{"location":"ecosystem/#DustExtinction.jl","page":"Ecosystem","title":"DustExtinction.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Dust extinction laws and maps","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Various empirical extinction models\nSFD (1998) galactic dust map\nFully compatible with Unitful.jl","category":"page"},{"location":"ecosystem/#Healpix.jl","page":"Ecosystem","title":"Healpix.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Implementation of Healpix spherical tesselation scheme in pure Julia","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"pixel functions, query functions, map functions\npower spectrum support\nplotting support","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"See also:","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"HealpixMPI.jl","category":"page"},{"location":"ecosystem/#Korg.jl","page":"Ecosystem","title":"Korg.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Theoretical stellar spectra from 1D model atmospheres and linelists, assuming LTE","category":"page"},{"location":"ecosystem/#LombScargle.jl","page":"Ecosystem","title":"LombScargle.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Compute Lomb-Scargle periodogram","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Create periodograms from unevenly sampled periodic signals\nSupports multi-threading","category":"page"},{"location":"ecosystem/#manuelbehrendt/Mera.jl","page":"Ecosystem","title":"manuelbehrendt/Mera.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Working with large hydrodynamical simulation data","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Loading, writing, analysing 3D AMR/uniform-grid and N-body data sets\nMemory lightweight data processing within a database framework\nMany predefined functions and examples","category":"page"},{"location":"ecosystem/#Photometry.jl-2","page":"Ecosystem","title":"Photometry.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Aperture photometry","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Background estimation and source extraction\nFast and precise aperture photometry","category":"page"},{"location":"ecosystem/#SatelliteToolbox.jl","page":"Ecosystem","title":"SatelliteToolbox.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Perform analysis and build simulations related to satellites","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Atmospheric, gravitational, and geomagnetic field models\nOrbit propagators","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"See also:","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"ReferenceFrameRotations.jl","category":"page"},{"location":"ecosystem/#Transits.jl-2","page":"Ecosystem","title":"Transits.jl","text":"","category":"section"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: curly braces) Repository","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"(Image: book icon) Documentation","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Flexible photometric transit curves with limb darkening","category":"page"},{"location":"ecosystem/","page":"Ecosystem","title":"Ecosystem","text":"Inspired by exoplanet\nIncludes Keplerian orbits and generic orbits\nFast polynomial limb-darkening laws based on Agol, Luger, Foreman-Mackey (2020)\nComposable limb-darkening extensions for integrated light curves and secondary light curves.\nFully compatible with Unitful.jl","category":"page"},{"location":"highlevels/images/#Images-Overview","page":"Images","title":"Images Overview","text":"","category":"section"},{"location":"highlevels/images/#AstroImages.jl","page":"Images","title":"AstroImages.jl","text":"","category":"section"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Load, manipulate, and visualize astronomical images","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Built on top of Images.jl and Plots.jl\nWorks with the FileIO.jl interface\nAutomatic visualizations are directly integrated into many environments like VSCode, Pluto.jl, and IJulia.jl\nIncludes recipes for plotting with Plots.jl","category":"page"},{"location":"highlevels/images/#SAOImageDS9.jl","page":"Images","title":"SAOImageDS9.jl","text":"","category":"section"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Interface with the DS9 image viewer","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Uses XPA.jl to communicate with DS9 instances\nEasily display images in DS9 and add features like circles and lines\nLow-level API accessible with set and get","category":"page"},{"location":"highlevels/images/#Photometry.jl","page":"Images","title":"Photometry.jl","text":"","category":"section"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Aperture photometry","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Background estimation and source extraction\nFast and precise aperture photometry","category":"page"},{"location":"highlevels/images/#PSFModels.jl","page":"Images","title":"PSFModels.jl","text":"","category":"section"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Analytical, allocation-free point-spread-functions (PSF)","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Lazy representation allows fast allocation-free calculations\nGaussian (Normal), Moffat, and Airy disk.","category":"page"},{"location":"highlevels/images/#LACosmic.jl","page":"Images","title":"LACosmic.jl","text":"","category":"section"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Cosmic-ray rejection by Laplacian edge detection","category":"page"},{"location":"highlevels/images/","page":"Images","title":"Images","text":"Implementation of the L.A.Cosmic algorithm (van Dokkum, 2001)\nReturns bad pixel masks and cleaned data","category":"page"},{"location":"highlevels/stats/#Statistics-Overview","page":"Statistics","title":"Statistics Overview","text":"","category":"section"},{"location":"highlevels/stats/#PairPlots.jl","page":"Statistics","title":"PairPlots.jl","text":"","category":"section"},{"location":"highlevels/stats/","page":"Statistics","title":"Statistics","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/stats/","page":"Statistics","title":"Statistics","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/stats/","page":"Statistics","title":"Statistics","text":"Visualization of high-dimensional data","category":"page"},{"location":"highlevels/stats/","page":"Statistics","title":"Statistics","text":"Create pairwise corner plots and histograms of features in a dataset\nWorks with matrices and Tables.jl compatible data\nBuilt on top of Makie","category":"page"},{"location":"highlevels/vizplot/#Visualization-and-Plotting-Overview","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"","category":"section"},{"location":"highlevels/vizplot/#AstroImages.jl","page":"Visualization & Plotting Overview","title":"AstroImages.jl","text":"","category":"section"},{"location":"highlevels/vizplot/","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/vizplot/","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/vizplot/","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"Load, manipulate, and visualize astronomical images","category":"page"},{"location":"highlevels/vizplot/","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"Works with the FileIO.jl interface\nAutomatic visualizations are directly integrated into many environments like VSCode, Pluto.jl, and IJulia.jl\nIncludes recipes for plotting with Plots.jl","category":"page"},{"location":"highlevels/vizplot/#SAOImageDS9.jl","page":"Visualization & Plotting Overview","title":"SAOImageDS9.jl","text":"","category":"section"},{"location":"highlevels/vizplot/","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/vizplot/","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/vizplot/","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"Interface with the DS9 image viewer","category":"page"},{"location":"highlevels/vizplot/","page":"Visualization & Plotting Overview","title":"Visualization & Plotting Overview","text":"Uses XPA.jl to communicate with DS9 instances\nEasily display images in DS9 and add features like circles and lines\nLow-level API accessible with set and get","category":"page"},{"location":"highlevels/timecoords/#Time,-Coordinates,-and-Units-Overview","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units Overview","text":"","category":"section"},{"location":"highlevels/timecoords/#AstroAngles.jl","page":"Time, Coordinates, & Units","title":"AstroAngles.jl","text":"","category":"section"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"String parsing and representation of angles","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Parse and represent sexagesimal angles with a variety of delimiters\nMethods for converting to hour-minute-second angles from degrees and radians, and vice-versa","category":"page"},{"location":"highlevels/timecoords/#AstroTime.jl","page":"Time, Coordinates, & Units","title":"AstroTime.jl","text":"","category":"section"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Astronomical time keeping","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"High-precision, time-scale aware, DateTime-like data type\nSupport all commonly used astronomical time scales","category":"page"},{"location":"highlevels/timecoords/#ERFA.jl","page":"Time, Coordinates, & Units","title":"ERFA.jl","text":"","category":"section"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Time systems conversions","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Low-level wrapper for liberfa","category":"page"},{"location":"highlevels/timecoords/#SkyCoords.jl","page":"Time, Coordinates, & Units","title":"SkyCoords.jl","text":"","category":"section"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Astronomical coordinate systems","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Supports ICRS, galactic, and FK5 coordinate systems\nFast conversion of coordinates between different systems","category":"page"},{"location":"highlevels/timecoords/#UnitfulAstro.jl","page":"Time, Coordinates, & Units","title":"UnitfulAstro.jl","text":"","category":"section"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Astronomical units","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Extension of Unitful.jl","category":"page"},{"location":"highlevels/timecoords/#WCS.jl","page":"Time, Coordinates, & Units","title":"WCS.jl","text":"","category":"section"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"(Image: book icon) Documentaiton","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"World Coordinate System transformations","category":"page"},{"location":"highlevels/timecoords/","page":"Time, Coordinates, & Units","title":"Time, Coordinates, & Units","text":"Wrapper for wcslib","category":"page"},{"location":"highlevels/dataio/#Data-I/O-Overview","page":"Data I/O","title":"Data I/O Overview","text":"","category":"section"},{"location":"highlevels/dataio/#AstroImages.jl","page":"Data I/O","title":"AstroImages.jl","text":"","category":"section"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Load, manipulate, and visualize astronomical images","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Works with the FileIO.jl interface","category":"page"},{"location":"highlevels/dataio/#FITSIO.jl","page":"Data I/O","title":"FITSIO.jl","text":"","category":"section"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Reading and writing FITS files","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Interact with header data units (HDUs), FITS headers, and FITS data: both images and tables\nFITS tables follow the Tables.jl interface, allowing seamless integration with the rich data ecosystem, like CSV.jl, DataFrames.jl, etc.","category":"page"},{"location":"highlevels/dataio/#CFITSIO.jl","page":"Data I/O","title":"CFITSIO.jl","text":"","category":"section"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Reading and writing FITS files","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Low-level wrapper for cfitsio\nThe c interface can be directly accessed with the CFITSIO_jll package","category":"page"},{"location":"highlevels/dataio/#mweastwood/CasaCore.jl","page":"Data I/O","title":"mweastwood/CasaCore.jl","text":"","category":"section"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Tables and measurement sets for radio astronomy","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Wrapper for CasaCore\nInterface for CASA tables and measures","category":"page"},{"location":"highlevels/dataio/#emmt/OIFITS.jl","page":"Data I/O","title":"emmt/OIFITS.jl","text":"","category":"section"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Support for OI-FITS","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Read and write OI-FITS optical interferometry data format","category":"page"},{"location":"highlevels/dataio/#aplavin/VLBIData.jl","page":"Data I/O","title":"aplavin/VLBIData.jl","text":"","category":"section"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Work with data formats common in very long baseline interferometry (VLBI)","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Read interferometric visibilities (uvfits), images (fits), and source models\nMinimal writing support for source models","category":"page"},{"location":"highlevels/dataio/#aplavin/Difmap.jl","page":"Data I/O","title":"aplavin/Difmap.jl","text":"","category":"section"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: curly braces) Repository","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"(Image: book icon) Documentation","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Wrapper for the Difmap program used in synthesis imaging","category":"page"},{"location":"highlevels/dataio/","page":"Data I/O","title":"Data I/O","text":"Execute Difmap scripts, handle inputs/outputs and logs\nDisplay images and plots from Difmap in interactive Julia environments","category":"page"},{"location":"#JuliaAstro","page":"Home","title":"JuliaAstro","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"JuliaAstro and its affiliated organizations are a community for astronomy in Julia. We have a wide variety of packages from aperture photometry to cosmology. Check out a curated list of packages in the JuliaAstro ecosystem (and beyond) on the ecosystem page.","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Our contributors come from diverse backgrounds and have various levels of interactions within astronomy and academia. Use the packages, file issues, and join the conversation!","category":"page"},{"location":"","page":"Home","title":"Home","text":"JuliaAstro on GitHub\nJuliaHCI on GitHub\njulia-astro mailing list on Google Groups\nAstro/Space topics on JuliaLang Discourse\n#JuliaAstro:openastronomy.org on Matrix\n#astronomy on JuliaLang Slack","category":"page"},{"location":"#Google-Summer-of-Code-(GSoC)","page":"Home","title":"Google Summer of Code (GSoC)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Would you like to contribute to JuliaAstro through Google Summer of Code? You can! We are member of OpenAstronomy; go to the GSoC page to see how to apply and the list of ideas. You can also propose your own idea to us!","category":"page"},{"location":"#Talks-and-Presentations","page":"Home","title":"Talks and Presentations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<details>\n<summary>JuliaCon 2022</summary>","category":"page"},{"location":"","page":"Home","title":"Home","text":"Julia in Astronomy & Astrophysics Research\nComrade: High-Performance Black Hole Imaging\nRVSpectML: Precision Velocities from Spectroscopic Time Series\nFinding Fast Radio Bursts, Faster\nCosmological Emulators with Flux.jl and DifferentialEquations.jl\nVisualizing astronomical data with AstroImages.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"</details>","category":"page"}]
}
