var documenterSearchIndex = {"docs": [

{
    "location": "#",
    "page": "Home",
    "title": "Home",
    "category": "page",
    "text": ""
},

{
    "location": "#ERFA.jl-1",
    "page": "Home",
    "title": "ERFA.jl",
    "category": "section",
    "text": "(Image: Build Status) (Image: Build status)Julia wrapper for liberfa."
},

{
    "location": "#Installation-1",
    "page": "Home",
    "title": "Installation",
    "category": "section",
    "text": "julia> Pkg.add(\"ERFA\")"
},

{
    "location": "#Example-1",
    "page": "Home",
    "title": "Example",
    "category": "section",
    "text": "julia> using ERFA\n\njulia> u1,u2 = ERFA.dtf2d(\"UTC\", 2010, 7, 24, 11, 18, 7.318)\n(2.4554015e6,0.47091803240740737)\n\njulia> a1,a2 = ERFA.utctai(u1, u2)\n(2.4554015e6,0.4713115509259259)\n\njulia> t1,t2 = ERFA.taitt(a1, a2)\n(2.4554015e6,0.4716840509259259)\n\njulia> ERFA.d2dtf(\"tt\", 3, t1, t2)\n(2010,7,24,11,19,13,502)"
},

{
    "location": "api/#",
    "page": "API",
    "title": "API",
    "category": "page",
    "text": ""
},

{
    "location": "api/#ERFA.AULT",
    "page": "API",
    "title": "ERFA.AULT",
    "category": "constant",
    "text": "Light time for 1 au (s)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.CMPS",
    "page": "API",
    "title": "ERFA.CMPS",
    "category": "constant",
    "text": "Speed of light (m/s)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.D2PI",
    "page": "API",
    "title": "ERFA.D2PI",
    "category": "constant",
    "text": "2Pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DAS2R",
    "page": "API",
    "title": "ERFA.DAS2R",
    "category": "constant",
    "text": "Arcseconds to radians\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DAU",
    "page": "API",
    "title": "ERFA.DAU",
    "category": "constant",
    "text": "Astronomical unit (m, IAU 2012)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DAYSEC",
    "page": "API",
    "title": "ERFA.DAYSEC",
    "category": "constant",
    "text": "Seconds per day\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DC",
    "page": "API",
    "title": "ERFA.DC",
    "category": "constant",
    "text": "Speed of light (au per day)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DD2R",
    "page": "API",
    "title": "ERFA.DD2R",
    "category": "constant",
    "text": "Degrees to radians\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DJ00",
    "page": "API",
    "title": "ERFA.DJ00",
    "category": "constant",
    "text": "Reference epoch (J2000.0), Julian Date\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DJC",
    "page": "API",
    "title": "ERFA.DJC",
    "category": "constant",
    "text": "Days per Julian century\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DJM",
    "page": "API",
    "title": "ERFA.DJM",
    "category": "constant",
    "text": "Days per Julian millennium\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DJM0",
    "page": "API",
    "title": "ERFA.DJM0",
    "category": "constant",
    "text": "Julian Date of Modified Julian Date zero\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DJM00",
    "page": "API",
    "title": "ERFA.DJM00",
    "category": "constant",
    "text": "Reference epoch (J2000.0), Modified Julian Date\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DJM77",
    "page": "API",
    "title": "ERFA.DJM77",
    "category": "constant",
    "text": "1977 Jan 1.0 as MJD\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DJY",
    "page": "API",
    "title": "ERFA.DJY",
    "category": "constant",
    "text": "Days per Julian year\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DMAS2R",
    "page": "API",
    "title": "ERFA.DMAS2R",
    "category": "constant",
    "text": "Milliarcseconds to radians\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DPI",
    "page": "API",
    "title": "ERFA.DPI",
    "category": "constant",
    "text": "Pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DR2AS",
    "page": "API",
    "title": "ERFA.DR2AS",
    "category": "constant",
    "text": "Radians to arcseconds\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DR2D",
    "page": "API",
    "title": "ERFA.DR2D",
    "category": "constant",
    "text": "Radians to degrees\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DS2R",
    "page": "API",
    "title": "ERFA.DS2R",
    "category": "constant",
    "text": "Seconds of time to radians\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.DTY",
    "page": "API",
    "title": "ERFA.DTY",
    "category": "constant",
    "text": "Length of tropical year B1900 (days)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ELB",
    "page": "API",
    "title": "ERFA.ELB",
    "category": "constant",
    "text": "L_B = 1 - d(TDB)/d(TCB)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ELG",
    "page": "API",
    "title": "ERFA.ELG",
    "category": "constant",
    "text": "L_G = 1 - d(TT)/d(TCG)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.SRS",
    "page": "API",
    "title": "ERFA.SRS",
    "category": "constant",
    "text": "Schwarzschild radius of the Sun (au) = 2 * 1.32712440041e20 / (2.99792458e8)^2 / 1.49597870700e11\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.TDB0",
    "page": "API",
    "title": "ERFA.TDB0",
    "category": "constant",
    "text": "TDB (s) at TAI 1977/1/1.0\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.TTMTAI",
    "page": "API",
    "title": "ERFA.TTMTAI",
    "category": "constant",
    "text": "TT minus TAI (s)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.TURNAS",
    "page": "API",
    "title": "ERFA.TURNAS",
    "category": "constant",
    "text": "Arcseconds in a full circle\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.a2af",
    "page": "API",
    "title": "ERFA.a2af",
    "category": "function",
    "text": "a2af(ndp, a)\n\nDecompose radians into degrees, arcminutes, arcseconds, fraction.\n\nGiven\n\nndp: Resolution (Note 1)\nangle: Angle in radians\n\nReturned\n\nsign: \'+\' or \'-\'\nidmsf: Degrees, arcminutes, arcseconds, fraction\n\nCalled\n\neraD2tf: decompose days to hms\n\nNotes\n\nThe argument ndp is interpreted as follows:\nndp         resolution  :      ...0000 00 00 -7         1000 00 00 -6          100 00 00 -5           10 00 00 -4            1 00 00 -3            0 10 00 -2            0 01 00 -1            0 00 10  0            0 00 01  1            0 00 00.1  2            0 00 00.01  3            0 00 00.001  :            0 00 00.000...\nThe largest positive useful value for ndp is determined by the size of angle, the format of doubles on the target platform, and the risk of overflowing idmsf[3].  On a typical platform, for angle up to 2pi, the available floating-point precision might correspond to ndp=12.  However, the practical limit is typically ndp=9, set by the capacity of a 32-bit int, or ndp=4 if int is only 16 bits.\nThe absolute value of angle may exceed 2pi.  In cases where it does not, it is up to the caller to test for and handle the case where angle is very nearly 2pi and rounds up to 360 degrees, by testing for idmsf[0]=360 and setting idmsf[0-3] to zero.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.a2tf",
    "page": "API",
    "title": "ERFA.a2tf",
    "category": "function",
    "text": "a2tf(ndp, a)\n\nDecompose radians into hours, minutes, seconds, fraction.\n\nGiven\n\nndp: Resolution (Note 1)\nangle: Angle in radians\n\nReturned\n\nsign: \'+\' or \'-\'\nihmsf: Hours, minutes, seconds, fraction\n\nCalled\n\neraD2tf: decompose days to hms\n\nNotes\n\nThe argument ndp is interpreted as follows:\nndp         resolution  :      ...0000 00 00 -7         1000 00 00 -6          100 00 00 -5           10 00 00 -4            1 00 00 -3            0 10 00 -2            0 01 00 -1            0 00 10  0            0 00 01  1            0 00 00.1  2            0 00 00.01  3            0 00 00.001  :            0 00 00.000...\nThe largest positive useful value for ndp is determined by the size of angle, the format of doubles on the target platform, and the risk of overflowing ihmsf[3].  On a typical platform, for angle up to 2pi, the available floating-point precision might correspond to ndp=12.  However, the practical limit is typically ndp=9, set by the capacity of a 32-bit int, or ndp=4 if int is only 16 bits.\nThe absolute value of angle may exceed 2pi.  In cases where it does not, it is up to the caller to test for and handle the case where angle is very nearly 2pi and rounds up to 24 hours, by testing for ihmsf[0]=24 and setting ihmsf[0-3] to zero.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ab-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.ab",
    "category": "method",
    "text": "ab(pnat, v, s, bm1)\n\nApply aberration to transform natural direction into proper direction.\n\nGiven\n\npnat: Natural direction to the source (unit vector)\nv: Observer barycentric velocity in units of c\ns: Distance between the Sun and the observer (au)\nbm1: sqrt1-v^2 reciprocal of Lorenz factor\n\nReturned\n\nppr: Proper direction to source (unit vector)\n\nNotes\n\nThe algorithm is based on Expr. (7.40) in the Explanatory Supplement (Urban & Seidelmann 2013), but with the following changes:\nRigorous rather than approximate normalization is applied.\nThe gravitational potential term from Expr. (7) in  Klioner (2003) is added, taking into account only the Sun\'s  contribution.  This has a maximum effect of about  0.4 microarcsecond.\nIn almost all cases, the maximum accuracy will be limited by the supplied velocity.  For example, if the ERFA eraEpv00 function is used, errors of up to 5 microarcseconds could occur.\n\nReferences\n\nUrban, S. & Seidelmann, P. K. (eds), Explanatory Supplement to   the Astronomical Almanac, 3rd ed., University Science Books   (2013).\nKlioner, Sergei A., \"A practical relativistic model for micro-   arcsecond astrometry in space\", Astr. J. 125, 1580-1597 (2003).\n\nCalled\n\neraPdp: scalar product of two p-vectors\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.af2a-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.af2a",
    "category": "method",
    "text": "af2a(s, ideg, iamin, asec)\n\nConvert degrees, arcminutes, arcseconds to radians.\n\nGiven\n\ns: Sign:  \'-\' = negative, otherwise positive\nideg: Degrees\niamin: Arcminutes\nasec: Arcseconds\n\nReturned\n\nrad: Angle in radians\n\nNotes\n\nThe result is computed even if any of the range checks fail.\nNegative ideg, iamin and/or asec produce a warning status, but  the absolute value is used in the conversion.\nIf there are multiple errors, the status value reflects only the  first, the smallest taking precedence.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.anp",
    "page": "API",
    "title": "ERFA.anp",
    "category": "function",
    "text": "anp(a)\n\nNormalize angle into the range 0 <= a < 2pi.\n\nGiven\n\na: Angle (radians)\n\nReturned\n\nAngle in range 0-2pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.anpm",
    "page": "API",
    "title": "ERFA.anpm",
    "category": "function",
    "text": "anpm(a)\n\nNormalize angle into the range -pi <= a < +pi.\n\nGiven\n\na: Angle (radians)\n\nReturned\n\nAngle in range +/-pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apcg-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.apcg",
    "category": "method",
    "text": "apcg(date1, date2, ebpv, ehp)\n\nFor a geocentric observer, prepare star-independent astrometry parameters for transformations between ICRS and GCRS coordinates. The Earth ephemeris is supplied by the caller.\n\nThe parameters produced by this function are required in the parallax, light deflection and aberration parts of the astrometric transformation chain.\n\nGiven\n\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 1)\nebpv: Earth barycentric pos/vel (au, au/day)\nehp: Earth heliocentric position (au)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: unchanged\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: unchanged\nrefa: unchanged\nrefb: unchanged\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nAll the vectors are with respect to BCRS axes.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used by eraAtciq and eraAticq.\n\nCalled\n\neraApcs: astrometry parameters, ICRS-GCRS, space observer\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apcg13-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.apcg13",
    "category": "method",
    "text": "apcg13(date1, date2)\n\nFor a geocentric observer, prepare star-independent astrometry parameters for transformations between ICRS and GCRS coordinates. The caller supplies the date, and ERFA models are used to predict the Earth ephemeris.\n\nThe parameters produced by this function are required in the parallax, light deflection and aberration parts of the astrometric transformation chain.\n\nGiven\n\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 1)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: unchanged\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: unchanged\nrefa: unchanged\nrefb: unchanged\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nAll the vectors are with respect to BCRS axes.\nIn cases where the caller wishes to supply his own Earth ephemeris, the function eraApcg can be used instead of the present function.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used by eraAtciq* and eraAticq*.\n\nCalled\n\neraEpv00: Earth position and velocity\neraApcg: astrometry parameters, ICRS-GCRS, geocenter\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apci-NTuple{7,Any}",
    "page": "API",
    "title": "ERFA.apci",
    "category": "method",
    "text": "apci(date1, date2, ebpv, ehp, x, y, s)\n\nFor a terrestrial observer, prepare star-independent astrometry parameters for transformations between ICRS and geocentric CIRS coordinates.  The Earth ephemeris and CIP/CIO are supplied by the caller.\n\nThe parameters produced by this function are required in the parallax, light deflection, aberration, and bias-precession-nutation parts of the astrometric transformation chain.\n\nGiven\n\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 1)\nebpv: Earth barycentric position/velocity (au, au/day)\nehp: Earth heliocentric position (au)\nx, y: CIP X,Y (components of unit vector)\ns: The CIO locator s (radians)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: unchanged\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: unchanged\nrefa: unchanged\nrefb: unchanged\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nAll the vectors are with respect to BCRS axes.\nIn cases where the caller does not wish to provide the Earth ephemeris and CIP/CIO, the function eraApci13 can be used instead of the present function.  This computes the required quantities using other ERFA functions.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used by eraAtciq* and eraAticq*.\n\nCalled\n\neraApcg: astrometry parameters, ICRS-GCRS, geocenter\neraC2ixys: celestial-to-intermediate matrix, given X,Y and s\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apci13-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.apci13",
    "category": "method",
    "text": "apci13(date1, date2)\n\nFor a terrestrial observer, prepare star-independent astrometry parameters for transformations between ICRS and geocentric CIRS coordinates.  The caller supplies the date, and ERFA models are used to predict the Earth ephemeris and CIP/CIO.\n\nThe parameters produced by this function are required in the parallax, light deflection, aberration, and bias-precession-nutation parts of the astrometric transformation chain.\n\nGiven\n\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 1)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: unchanged\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: unchanged\nrefa: unchanged\nrefb: unchanged\neo: Equation of the origins (ERA-GST)\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nAll the vectors are with respect to BCRS axes.\nIn cases where the caller wishes to supply his own Earth ephemeris and CIP/CIO, the function eraApci can be used instead of the present function.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used by eraAtciq* and eraAticq*.\n\nCalled\n\neraEpv00: Earth position and velocity\neraPnm06a: classical NPB matrix, IAU 2006/2000A\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS06: the CIO locator s, given X,Y, IAU 2006\neraApci: astrometry parameters, ICRS-CIRS\neraEors: equation of the origins, given NPB matrix and s\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apco-NTuple{16,Any}",
    "page": "API",
    "title": "ERFA.apco",
    "category": "method",
    "text": "apco(date1, date2, ebpv, ehp, x, y, s, theta, elong, phi, hm, xp, yp, sp, refa, refb)\n\nFor a terrestrial observer, prepare star-independent astrometry parameters for transformations between ICRS and observed coordinates.  The caller supplies the Earth ephemeris, the Earth rotation information and the refraction constants as well as the site coordinates.\n\nGiven\n\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 1)\nebpv: Earth barycentric PV (au, au/day, Note 2)\nehp: Earth heliocentric P (au, Note 2)\nx, y: CIP X,Y (components of unit vector)\ns: The CIO locator s (radians)\ntheta: Earth rotation angle (radians)\nelong: Longitude (radians, east +ve, Note 3)\nphi: Latitude (geodetic, radians, Note 3)\nhm: Height above ellipsoid (m, geodetic, Note 3)\nxp, yp: Polar motion coordinates (radians, Note 4)\nsp: The TIO locator s\' (radians, Note 4)\nrefa: Refraction constant A (radians, Note 5)\nrefb: Refraction constant B (radians, Note 5)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nThe vectors eb, eh, and all the astrom vectors, are with respect to BCRS axes.\nThe geographical coordinates are with respect to the ERFA_WGS84 reference ellipsoid.  TAKE CARE WITH THE LONGITUDE SIGN CONVENTION:  the longitude required by the present function is right-handed, i.e. east-positive, in accordance with geographical convention.\nxp and yp are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions), measured along the meridians 0 and 90 deg west respectively.  sp is the TIO locator s\', in radians, which positions the Terrestrial Intermediate Origin on the equator.  For many applications, xp, yp and (especially) sp can be set to zero.\nInternally, the polar motion is stored in a form rotated onto the local meridian.\nThe refraction constants refa and refb are for use in a dZ = Atan(Z)+Btan^3(Z) model, where Z is the observed (i.e. refracted) zenith distance and dZ is the amount of refraction.\nIt is advisable to take great care with units, as even unlikely values of the input parameters are accepted and processed in accordance with the models used.\nIn cases where the caller does not wish to provide the Earth Ephemeris, the Earth rotation information and refraction constants, the function eraApco13 can be used instead of the present function.  This starts from UTC and weather readings etc. and computes suitable values using other ERFA functions.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used by eraAtioq, eraAtoiq, eraAtciq and eraAticq.\n\nCalled\n\neraAper: astrometry parameters: update ERA\neraC2ixys: celestial-to-intermediate matrix, given X,Y and s\neraPvtob: position/velocity of terrestrial station\neraTrxpv: product of transpose of r-matrix and pv-vector\neraApcs: astrometry parameters, ICRS-GCRS, space observer\neraCr: copy r-matrix\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apco13-NTuple{12,Any}",
    "page": "API",
    "title": "ERFA.apco13",
    "category": "method",
    "text": "apco13(utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tk, rh, wl)\n\nFor a terrestrial observer, prepare star-independent astrometry parameters for transformations between ICRS and observed coordinates.  The caller supplies UTC, site coordinates, ambient air conditions and observing wavelength, and ERFA models are used to obtain the Earth ephemeris, CIP/CIO and refraction constants.\n\nThe parameters produced by this function are required in the parallax, light deflection, aberration, and bias-precession-nutation parts of the ICRS/CIRS transformations.\n\nGiven\n\nutc1: UTC as a 2-part...\nutc2: ...quasi Julian Date (Notes 1,2)\ndut1: UT1-UTC (seconds, Note 3)\nelong: Longitude (radians, east +ve, Note 4)\nphi: Latitude (geodetic, radians, Note 4)\nhm: Height above ellipsoid (m, geodetic, Notes 4,6)\nxp, yp: Polar motion coordinates (radians, Note 5)\nphpa: Pressure at the observer (hPa = mB, Note 6)\ntc: Ambient temperature at the observer (deg C)\nrh: Relative humidity at the observer (range 0-1)\nwl: Wavelength (micrometers, Note 7)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\neo: Equation of the origins (ERA-GST)\n\nNotes\n\nutc1+utc2 is quasi Julian Date (see Note 2), apportioned in any  convenient way between the two arguments, for example where utc1  is the Julian Day Number and utc2 is the fraction of a day.\nHowever, JD cannot unambiguously represent UTC during a leap  second unless special measures are taken.  The convention in the  present function is that the JD day represents UTC days whether  the length is 86399, 86400 or 86401 SI seconds.\nApplications should use the function eraDtf2d to convert from  calendar date and time of day into 2-part quasi Julian Date, as  it implements the leap-second-ambiguity convention just  described.\nThe warning status \"dubious year\" flags UTCs that predate the  introduction of the time scale or that are too far in the  future to be trusted.  See eraDat for further details.\nUT1-UTC is tabulated in IERS bulletins.  It increases by exactly  one second at the end of each positive UTC leap second,  introduced in order to keep UT1-UTC within +/- 0.9s.  n.b. This  practice is under review, and in the future UT1-UTC may grow  essentially without limit.\nThe geographical coordinates are with respect to the ERFA_WGS84  reference ellipsoid.  TAKE CARE WITH THE LONGITUDE SIGN:  the  longitude required by the present function is east-positive  (i.e. right-handed), in accordance with geographical convention.\nThe polar motion xp,yp can be obtained from IERS bulletins.  The  values are the coordinates (in radians) of the Celestial  Intermediate Pole with respect to the International Terrestrial  Reference System (see IERS Conventions 2003), measured along the  meridians 0 and 90 deg west respectively.  For many  applications, xp and yp can be set to zero.\nInternally, the polar motion is stored in a form rotated onto  the local meridian.\nIf hm, the height above the ellipsoid of the observing station  in meters, is not known but phpa, the pressure in hPa (=mB), is  available, an adequate estimate of hm can be obtained from the  expression\n   hm = -29.3 * tsl * log ( phpa / 1013.25 );\nwhere tsl is the approximate sea-level air temperature in K  (See Astrophysical Quantities, C.W.Allen, 3rd edition, section  52).  Similarly, if the pressure phpa is not known, it can be  estimated from the height of the observing station, hm, as  follows:\n   phpa = 1013.25 * exp ( -hm / ( 29.3 * tsl ) );\nNote, however, that the refraction is nearly proportional to  the pressure and that an accurate phpa value is important for  precise work.\nThe argument wl specifies the observing wavelength in  micrometers.  The transition from optical to radio is assumed to  occur at 100 micrometers (about 3000 GHz).\nIt is advisable to take great care with units, as even unlikely  values of the input parameters are accepted and processed in  accordance with the models used.\nIn cases where the caller wishes to supply his own Earth  ephemeris, Earth rotation information and refraction constants,  the function eraApco can be used instead of the present function.\nThis is one of several functions that inserts into the astrom  structure star-independent parameters needed for the chain of  astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and  portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to  compute the various ephemerides.  The others accept ephemerides  supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion,  parallax, light deflection, and aberration.  From GCRS to CIRS  comprises frame bias and precession-nutation.  From CIRS to  observed takes account of Earth rotation, polar motion, diurnal  aberration and parallax (unless subsumed into the ICRS <-> GCRS  transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used  by eraAtioq, eraAtoiq, eraAtciq* and eraAticq*.\n\nCalled\n\neraUtctai: UTC to TAI\neraTaitt: TAI to TT\neraUtcut1: UTC to UT1\neraEpv00: Earth position and velocity\neraPnm06a: classical NPB matrix, IAU 2006/2000A\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS06: the CIO locator s, given X,Y, IAU 2006\neraEra00: Earth rotation angle, IAU 2000\neraSp00: the TIO locator s\', IERS 2000\neraRefco: refraction constants for given ambient conditions\neraApco: astrometry parameters, ICRS-observed\neraEors: equation of the origins, given NPB matrix and s\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apcs-NTuple{5,Any}",
    "page": "API",
    "title": "ERFA.apcs",
    "category": "method",
    "text": "apcs(date1, date2, pv, ebpv, ehp)\n\nFor an observer whose geocentric position and velocity are known, prepare star-independent astrometry parameters for transformations between ICRS and GCRS.  The Earth ephemeris is supplied by the caller.\n\nThe parameters produced by this function are required in the space motion, parallax, light deflection and aberration parts of the astrometric transformation chain.\n\nGiven\n\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 1)\npv: Observer\'s geocentric pos/vel (m, m/s)\nebpv: Earth barycentric PV (au, au/day)\nehp: Earth heliocentric P (au)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: unchanged\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: unchanged\nrefa: unchanged\nrefb: unchanged\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nAll the vectors are with respect to BCRS axes.\nProviding separate arguments for (i) the observer\'s geocentric position and velocity and (ii) the Earth ephemeris is done for convenience in the geocentric, terrestrial and Earth orbit cases. For deep space applications it maybe more convenient to specify zero geocentric position and velocity and to supply the observer\'s position and velocity information directly instead of with respect to the Earth.  However, note the different units: m and m/s for the geocentric vectors, au and au/day for the heliocentric and barycentric vectors.\nIn cases where the caller does not wish to provide the Earth ephemeris, the function eraApcs13 can be used instead of the present function.  This computes the Earth ephemeris using the ERFA function eraEpv00.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used by eraAtciq* and eraAticq*.\n\nCalled\n\neraCp: copy p-vector\neraPm: modulus of p-vector\neraPn: decompose p-vector into modulus and direction\neraIr: initialize r-matrix to identity\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apcs13-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.apcs13",
    "category": "method",
    "text": "apcs13(date1, date2, pv)\n\nFor an observer whose geocentric position and velocity are known, prepare star-independent astrometry parameters for transformations between ICRS and GCRS.  The Earth ephemeris is from ERFA models.\n\nThe parameters produced by this function are required in the space motion, parallax, light deflection and aberration parts of the astrometric transformation chain.\n\nGiven\n\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 1)\npv: Observer\'s geocentric pos/vel (Note 3)\n\nReturned\n\nEraASTROM*   star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: unchanged\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: unchanged\nrefa: unchanged\nrefb: unchanged\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nAll the vectors are with respect to BCRS axes.\nThe observer\'s position and velocity pv are geocentric but with respect to BCRS axes, and in units of m and m/s.  No assumptions are made about proximity to the Earth, and the function can be used for deep space applications as well as Earth orbit and terrestrial.\nIn cases where the caller wishes to supply his own Earth ephemeris, the function eraApcs can be used instead of the present function.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used by eraAtciq* and eraAticq*.\n\nCalled\n\neraEpv00: Earth position and velocity\neraApcs: astrometry parameters, ICRS-GCRS, space observer\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.aper-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.aper",
    "category": "method",
    "text": "aper(theta, astrom)\n\nIn the star-independent astrometry parameters, update only the Earth rotation angle, supplied by the caller explicitly.\n\nGiven\n\ntheta: Earth rotation angle (radians, Note 2)\nastrom: Star-independent astrometry parameters:\npmt: unchanged\neb: unchanged\neh: unchanged\nem: unchanged\nv: unchanged\nbm1: unchanged\nbpn: unchanged\nalong: Longitude + s\' (radians)\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: unchanged\nrefa: unchanged\nrefb: unchanged\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: unchanged\neb: unchanged\neh: unchanged\nem: unchanged\nv: unchanged\nbm1: unchanged\nbpn: unchanged\nalong: unchanged\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: \"Local\" Earth rotation angle (radians)\nrefa: unchanged\nrefb: unchanged\n\nNotes\n\nThis function exists to enable sidereal-tracking applications to avoid wasteful recomputation of the bulk of the astrometry parameters:  only the Earth rotation is updated.\nFor targets expressed as equinox based positions, such as classical geocentric apparent (RA,Dec), the supplied theta can be Greenwich apparent sidereal time rather than Earth rotation angle.\nThe function eraAper13 can be used instead of the present function, and starts from UT1 rather than ERA itself.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.aper13-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.aper13",
    "category": "method",
    "text": "aper13(ut11, ut12, astrom)\n\nIn the star-independent astrometry parameters, update only the Earth rotation angle.  The caller provides UT1, (n.b. not UTC).\n\nGiven\n\nut11: UT1 as a 2-part...\nut12: ...Julian Date (Note 1)\nastrom: Star-independent astrometry parameters:\npmt: unchanged\neb: unchanged\neh: unchanged\nem: unchanged\nv: unchanged\nbm1: unchanged\nbpn: unchanged\nalong: Longitude + s\' (radians)\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: unchanged\nrefa: unchanged\nrefb: unchanged\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: unchanged\neb: unchanged\neh: unchanged\nem: unchanged\nv: unchanged\nbm1: unchanged\nbpn: unchanged\nalong: unchanged\nxpl: unchanged\nypl: unchanged\nsphi: unchanged\ncphi: unchanged\ndiurab: unchanged\neral: \"Local\" Earth rotation angle (radians)\nrefa: unchanged\nrefb: unchanged\n\nNotes\n\nThe UT1 date (n.b. not UTC) ut11+ut12 is a Julian Date, apportioned in any convenient way between the arguments ut11 and ut12.  For example, JD(UT1)=2450123.7 could be expressed in any of these ways, among others:\n   ut11           ut12\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  The date & time method is best matched to the algorithm used:  maximum precision is delivered when the ut11 argument is for 0hrs UT1 on the day in question and the ut12 argument lies in the range 0 to 1, or vice versa.\nIf the caller wishes to provide the Earth rotation angle itself, the function eraAper can be used instead.  One use of this technique is to substitute Greenwich apparent sidereal time and thereby to support equinox based transformations directly.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\n\nCalled\n\neraAper: astrometry parameters: update ERA\neraEra00: Earth rotation angle, IAU 2000\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apio-NTuple{9,Any}",
    "page": "API",
    "title": "ERFA.apio",
    "category": "method",
    "text": "apio(sp, theta, elong, phi, hm, xp, yp, refa, refb)\n\nFor a terrestrial observer, prepare star-independent astrometry parameters for transformations between CIRS and observed coordinates.  The caller supplies the Earth orientation information and the refraction constants as well as the site coordinates.\n\nGiven\n\nsp: The TIO locator s\' (radians, Note 1)\ntheta: Earth rotation angle (radians)\nelong: Longitude (radians, east +ve, Note 2)\nphi: Geodetic latitude (radians, Note 2)\nhm: Height above ellipsoid (m, geodetic Note 2)\nxp, yp: Polar motion coordinates (radians, Note 3)\nrefa: Refraction constant A (radians, Note 4)\nrefb: Refraction constant B (radians, Note 4)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: unchanged\neb: unchanged\neh: unchanged\nem: unchanged\nv: unchanged\nbm1: unchanged\nbpn: unchanged\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\n\nNotes\n\nsp, the TIO locator s\', is a tiny quantity needed only by the most precise applications.  It can either be set to zero or predicted using the ERFA function eraSp00.\nThe geographical coordinates are with respect to the ERFA_WGS84 reference ellipsoid.  TAKE CARE WITH THE LONGITUDE SIGN:  the longitude required by the present function is east-positive (i.e. right-handed), in accordance with geographical convention.\nThe polar motion xp,yp can be obtained from IERS bulletins.  The values are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions 2003), measured along the meridians 0 and 90 deg west respectively.  For many applications, xp and yp can be set to zero.\nInternally, the polar motion is stored in a form rotated onto the local meridian.\nThe refraction constants refa and refb are for use in a dZ = Atan(Z)+Btan^3(Z) model, where Z is the observed (i.e. refracted) zenith distance and dZ is the amount of refraction.\nIt is advisable to take great care with units, as even unlikely values of the input parameters are accepted and processed in accordance with the models used.\nIn cases where the caller does not wish to provide the Earth rotation information and refraction constants, the function eraApio13 can be used instead of the present function.  This starts from UTC and weather readings etc. and computes suitable values using other ERFA functions.\nThis is one of several functions that inserts into the astrom structure star-independent parameters needed for the chain of astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to compute the various ephemerides.  The others accept ephemerides supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion, parallax, light deflection, and aberration.  From GCRS to CIRS comprises frame bias and precession-nutation.  From CIRS to observed takes account of Earth rotation, polar motion, diurnal aberration and parallax (unless subsumed into the ICRS <-> GCRS transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used by eraAtioq and eraAtoiq.\n\nCalled\n\neraPvtob: position/velocity of terrestrial station\neraAper: astrometry parameters: update ERA\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.apio13-NTuple{12,Any}",
    "page": "API",
    "title": "ERFA.apio13",
    "category": "method",
    "text": "apio13(utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tk, rh, wl)\n\nFor a terrestrial observer, prepare star-independent astrometry parameters for transformations between CIRS and observed coordinates.  The caller supplies UTC, site coordinates, ambient air conditions and observing wavelength.\n\nGiven\n\nutc1: UTC as a 2-part...\nutc2: ...quasi Julian Date (Notes 1,2)\ndut1: UT1-UTC (seconds)\nelong: Longitude (radians, east +ve, Note 3)\nphi: Geodetic latitude (radians, Note 3)\nhm: Height above ellipsoid (m, geodetic Notes 4,6)\nxp, yp: Polar motion coordinates (radians, Note 5)\nphpa: Pressure at the observer (hPa = mB, Note 6)\ntc: Ambient temperature at the observer (deg C)\nrh: Relative humidity at the observer (range 0-1)\nwl: Wavelength (micrometers, Note 7)\n\nReturned\n\nastrom: Star-independent astrometry parameters:\npmt: unchanged\neb: unchanged\neh: unchanged\nem: unchanged\nv: unchanged\nbm1: unchanged\nbpn: unchanged\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\n\nNotes\n\nutc1+utc2 is quasi Julian Date (see Note 2), apportioned in any  convenient way between the two arguments, for example where utc1  is the Julian Day Number and utc2 is the fraction of a day.\nHowever, JD cannot unambiguously represent UTC during a leap  second unless special measures are taken.  The convention in the  present function is that the JD day represents UTC days whether  the length is 86399, 86400 or 86401 SI seconds.\nApplications should use the function eraDtf2d to convert from  calendar date and time of day into 2-part quasi Julian Date, as  it implements the leap-second-ambiguity convention just  described.\nThe warning status \"dubious year\" flags UTCs that predate the  introduction of the time scale or that are too far in the future  to be trusted.  See eraDat for further details.\nUT1-UTC is tabulated in IERS bulletins.  It increases by exactly  one second at the end of each positive UTC leap second,  introduced in order to keep UT1-UTC within +/- 0.9s.  n.b. This  practice is under review, and in the future UT1-UTC may grow  essentially without limit.\nThe geographical coordinates are with respect to the ERFA_WGS84  reference ellipsoid.  TAKE CARE WITH THE LONGITUDE SIGN:  the  longitude required by the present function is east-positive  (i.e. right-handed), in accordance with geographical convention.\nThe polar motion xp,yp can be obtained from IERS bulletins.  The  values are the coordinates (in radians) of the Celestial  Intermediate Pole with respect to the International Terrestrial  Reference System (see IERS Conventions 2003), measured along the  meridians 0 and 90 deg west respectively.  For many applications,  xp and yp can be set to zero.\nInternally, the polar motion is stored in a form rotated onto  the local meridian.\nIf hm, the height above the ellipsoid of the observing station  in meters, is not known but phpa, the pressure in hPa (=mB), is  available, an adequate estimate of hm can be obtained from the  expression\n   hm = -29.3 * tsl * log ( phpa / 1013.25 );\nwhere tsl is the approximate sea-level air temperature in K  (See Astrophysical Quantities, C.W.Allen, 3rd edition, section  52).  Similarly, if the pressure phpa is not known, it can be  estimated from the height of the observing station, hm, as  follows:\n   phpa = 1013.25 * exp ( -hm / ( 29.3 * tsl ) );\nNote, however, that the refraction is nearly proportional to the  pressure and that an accurate phpa value is important for  precise work.\nThe argument wl specifies the observing wavelength in  micrometers.  The transition from optical to radio is assumed to  occur at 100 micrometers (about 3000 GHz).\nIt is advisable to take great care with units, as even unlikely  values of the input parameters are accepted and processed in  accordance with the models used.\nIn cases where the caller wishes to supply his own Earth  rotation information and refraction constants, the function  eraApc can be used instead of the present function.\nThis is one of several functions that inserts into the astrom  structure star-independent parameters needed for the chain of  astrometric transformations ICRS <-> GCRS <-> CIRS <-> observed.\nThe various functions support different classes of observer and  portions of the transformation chain:\nFunctions Observer Transformation\neraApcg eraApcg13 geocentric ICRS <-> GCRS\neraApci eraApci13 terrestrial ICRS <-> CIRS\neraApco eraApco13 terrestrial ICRS <-> observed\neraApcs eraApcs13 space ICRS <-> GCRS\neraAper eraAper13 terrestrial update Earth rotation\neraApio eraApio13 terrestrial CIRS <-> observed\nThose with names ending in \"13\" use contemporary ERFA models to  compute the various ephemerides.  The others accept ephemerides  supplied by the caller.\nThe transformation from ICRS to GCRS covers space motion,  parallax, light deflection, and aberration.  From GCRS to CIRS  comprises frame bias and precession-nutation.  From CIRS to  observed takes account of Earth rotation, polar motion, diurnal  aberration and parallax (unless subsumed into the ICRS <-> GCRS  transformation), and atmospheric refraction.\nThe context structure astrom produced by this function is used  by eraAtioq and eraAtoiq.\n\nCalled\n\neraUtctai: UTC to TAI\neraTaitt: TAI to TT\neraUtcut1: UTC to UT1\neraSp00: the TIO locator s\', IERS 2000\neraEra00: Earth rotation angle, IAU 2000\neraRefco: refraction constants for given ambient conditions\neraApio: astrometry parameters, CIRS-observed\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atci13-NTuple{8,Any}",
    "page": "API",
    "title": "ERFA.atci13",
    "category": "method",
    "text": "atci13(rc, dc, pr, pd, px, rv, date1, date2)\n\nTransform ICRS star data, epoch J2000.0, to CIRS.\n\nGiven\n\nrc: ICRS right ascension at J2000.0 (radians, Note 1)\ndc: ICRS declination at J2000.0 (radians, Note 1)\npr: RA proper motion (radians/year; Note 2)\npd: Dec proper motion (radians/year)\npx: Parallax (arcsec)\nrv: Radial velocity (km/s, +ve if receding)\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 3)\n\nReturned\n\nri, di: CIRS geocentric RA,Dec (radians)\neo: Equation of the origins (ERA-GST, Note 5)\n\nNotes\n\nStar data for an epoch other than J2000.0 (for example from the Hipparcos catalog, which has an epoch of J1991.25) will require a preliminary call to eraPmsafe before use.\nThe proper motion in RA is dRA/dt rather than cos(Dec)*dRA/dt.\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nThe available accuracy is better than 1 milliarcsecond, limited mainly by the precession-nutation model that is used, namely IAU 2000A/2006.  Very close to solar system bodies, additional errors of up to several milliarcseconds can occur because of unmodeled light deflection;  however, the Sun\'s contribution is taken into account, to first order.  The accuracy limitations of the ERFA function eraEpv00 (used to compute Earth position and velocity) can contribute aberration errors of up to 5 microarcseconds.  Light deflection at the Sun\'s limb is uncertain at the 0.4 mas level.\nShould the transformation to (equinox based) apparent place be required rather than (CIO based) intermediate place, subtract the equation of the origins from the returned right ascension: RA = RI - EO. (The eraAnp function can then be applied, as required, to keep the result in the conventional 0-2pi range.)\n\nCalled\n\neraApci13: astrometry parameters, ICRS-CIRS, 2013\neraAtciq: quick ICRS to CIRS\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atciq-NTuple{7,Any}",
    "page": "API",
    "title": "ERFA.atciq",
    "category": "method",
    "text": "atciq(rc, dc, pr, pd, px, rv, astrom)\n\nQuick ICRS, epoch J2000.0, to CIRS transformation, given precomputed star-independent astrometry parameters.\n\nUse of this function is appropriate when efficiency is important and where many star positions are to be transformed for one date.  The star-independent parameters can be obtained by calling one of the functions eraApci[13], eraApcg[13], eraApco[13] or eraApcs[13].\n\nIf the parallax and proper motions are zero the eraAtciqz function can be used instead.\n\nGiven\n\nrc, dc: ICRS RA,Dec at J2000.0 (radians)\npr: RA proper motion (radians/year; Note 3)\npd: Dec proper motion (radians/year)\npx: Parallax (arcsec)\nrv: Radial velocity (km/s, +ve if receding)\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\n\nReturned\n\nri, di: CIRS RA,Dec (radians)\n\nNotes\n\nAll the vectors are with respect to BCRS axes.\nStar data for an epoch other than J2000.0 (for example from the Hipparcos catalog, which has an epoch of J1991.25) will require a preliminary call to eraPmsafe before use.\nThe proper motion in RA is dRA/dt rather than cos(Dec)*dRA/dt.\n\nCalled\n\neraPmpx: proper motion and parallax\neraLdsun: light deflection by the Sun\neraAb: stellar aberration\neraRxp: product of r-matrix and pv-vector\neraC2s: p-vector to spherical\neraAnp: normalize angle into range 0 to 2pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atciqn-Tuple{Any,Any,Any,Any,Any,Any,Any,Array{LDBODY,1}}",
    "page": "API",
    "title": "ERFA.atciqn",
    "category": "method",
    "text": "atciqn(rc, dc, pr, pd, px, rv, astrom, b::Vector{LDBODY})\n\nQuick ICRS, epoch J2000.0, to CIRS transformation, given precomputed star-independent astrometry parameters plus a list of light- deflecting bodies.\n\nUse of this function is appropriate when efficiency is important and where many star positions are to be transformed for one date.  The star-independent parameters can be obtained by calling one of the functions eraApci[13], eraApcg[13], eraApco[13] or eraApcs[13].\n\nIf the only light-deflecting body to be taken into account is the Sun, the eraAtciq function can be used instead.  If in addition the parallax and proper motions are zero, the eraAtciqz function can be used.\n\nGiven\n\nrc, dc: ICRS RA,Dec at J2000.0 (radians)\npr: RA proper motion (radians/year; Note 3)\npd: Dec proper motion (radians/year)\npx: Parallax (arcsec)\nrv: Radial velocity (km/s, +ve if receding)\nEraASTROM*   star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\nn: Number of bodies (Note 3)\nb::Vector{LDBODY}: Data for each of the n bodies (Notes 3,4):\nbm: Mass of the body (solar masses, Note 5)\ndl: Deflection limiter (Note 6)\npv: Barycentric PV of the body (au, au/day)\n\nReturned\n\nri, di: CIRS RA,Dec (radians)\n\nNotes\n\nStar data for an epoch other than J2000.0 (for example from the Hipparcos catalog, which has an epoch of J1991.25) will require a preliminary call to eraPmsafe before use.\nThe proper motion in RA is dRA/dt rather than cos(Dec)*dRA/dt.\nThe struct b contains n entries, one for each body to be considered.  If n = 0, no gravitational light deflection will be applied, not even for the Sun.\nThe struct b should include an entry for the Sun as well as for any planet or other body to be taken into account.  The entries should be in the order in which the light passes the body.\nIn the entry in the b struct for body i, the mass parameter b[i].bm can, as required, be adjusted in order to allow for such effects as quadrupole field.\nThe deflection limiter parameter b[i].dl is phi^2/2, where phi is the angular separation (in radians) between star and body at which limiting is applied.  As phi shrinks below the chosen threshold, the deflection is artificially reduced, reaching zero for phi = 0.   Example values suitable for a terrestrial observer, together with masses, are as follows:\nbody i     b[i].bm        b[i].dl\nSun        1.0            6e-6    Jupiter    0.00095435     3e-9    Saturn     0.00028574     3e-10\nFor efficiency, validation of the contents of the b array is omitted.  The supplied masses must be greater than zero, the position and velocity vectors must be right, and the deflection limiter greater than zero.\n\nCalled\n\neraPmpx: proper motion and parallax\neraLdn: light deflection by n bodies\neraAb: stellar aberration\neraRxp: product of r-matrix and pv-vector\neraC2s: p-vector to spherical\neraAnp: normalize angle into range 0 to 2pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atciqz-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.atciqz",
    "category": "method",
    "text": "atciqz(rc, dc, astrom)\n\nQuick ICRS to CIRS transformation, given precomputed star- independent astrometry parameters, and assuming zero parallax and proper motion.\n\nUse of this function is appropriate when efficiency is important and where many star positions are to be transformed for one date.  The star-independent parameters can be obtained by calling one of the functions eraApci[13], eraApcg[13], eraApco[13] or eraApcs[13].\n\nThe corresponding function for the case of non-zero parallax and proper motion is eraAtciq.\n\nGiven\n\nrc, dc: ICRS astrometric RA,Dec (radians)\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\n\nReturned\n\nri, di: CIRS RA,Dec (radians)\n\nNote\n\nAll the vectors are with respect to BCRS axes.\n\nReferences\n\nUrban, S. & Seidelmann, P. K. (eds), Explanatory Supplement to   the Astronomical Almanac, 3rd ed., University Science Books   (2013).\nKlioner, Sergei A., \"A practical relativistic model for micro-   arcsecond astrometry in space\", Astr. J. 125, 1580-1597 (2003).\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraLdsun: light deflection due to Sun\neraAb: stellar aberration\neraRxp: product of r-matrix and p-vector\neraC2s: p-vector to spherical\neraAnp: normalize angle into range +/- pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atco13-NTuple{18,Any}",
    "page": "API",
    "title": "ERFA.atco13",
    "category": "method",
    "text": "atco13(rc, dc, pr, pd, px, rv, utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tk, rh, wl)\n\nICRS RA,Dec to observed place.  The caller supplies UTC, site coordinates, ambient air conditions and observing wavelength.\n\nERFA models are used for the Earth ephemeris, bias-precession- nutation, Earth orientation and refraction.\n\nGiven\n\nrc, dc: ICRS right ascension at J2000.0 (radians, Note 1)\npr: RA proper motion (radians/year; Note 2)\npd: Dec proper motion (radians/year)\npx: Parallax (arcsec)\nrv: Radial velocity (km/s, +ve if receding)\nutc1: UTC as a 2-part...\nutc2: ...quasi Julian Date (Notes 3-4)\ndut1: UT1-UTC (seconds, Note 5)\nelong: Longitude (radians, east +ve, Note 6)\nphi: Latitude (geodetic, radians, Note 6)\nhm: Height above ellipsoid (m, geodetic, Notes 6,8)\nxp, yp: Polar motion coordinates (radians, Note 7)\nphpa: Pressure at the observer (hPa = mB, Note 8)\ntc: Ambient temperature at the observer (deg C)\nrh: Relative humidity at the observer (range 0-1)\nwl: Wavelength (micrometers, Note 9)\n\nReturned\n\naob: Observed azimuth (radians: N=0,E=90)\nzob: Observed zenith distance (radians)\nhob: Observed hour angle (radians)\ndob: Observed declination (radians)\nrob: Observed right ascension (CIO-based, radians)\neo: Equation of the origins (ERA-GST)\n\nNotes\n\nStar data for an epoch other than J2000.0 (for example from the  Hipparcos catalog, which has an epoch of J1991.25) will require  a preliminary call to eraPmsafe before use.\nThe proper motion in RA is dRA/dt rather than cos(Dec)*dRA/dt.\nutc1+utc2 is quasi Julian Date (see Note 2), apportioned in any  convenient way between the two arguments, for example where utc1  is the Julian Day Number and utc2 is the fraction of a day.\nHowever, JD cannot unambiguously represent UTC during a leap  second unless special measures are taken.  The convention in the  present function is that the JD day represents UTC days whether  the length is 86399, 86400 or 86401 SI seconds.\nApplications should use the function eraDtf2d to convert from  calendar date and time of day into 2-part quasi Julian Date, as  it implements the leap-second-ambiguity convention just  described.\nThe warning status \"dubious year\" flags UTCs that predate the  introduction of the time scale or that are too far in the  future to be trusted.  See eraDat for further details.\nUT1-UTC is tabulated in IERS bulletins.  It increases by exactly  one second at the end of each positive UTC leap second,  introduced in order to keep UT1-UTC within +/- 0.9s.  n.b. This  practice is under review, and in the future UT1-UTC may grow  essentially without limit.\nThe geographical coordinates are with respect to the ERFA_WGS84  reference ellipsoid.  TAKE CARE WITH THE LONGITUDE SIGN:  the  longitude required by the present function is east-positive  (i.e. right-handed), in accordance with geographical convention.\nThe polar motion xp,yp can be obtained from IERS bulletins.  The  values are the coordinates (in radians) of the Celestial  Intermediate Pole with respect to the International Terrestrial  Reference System (see IERS Conventions 2003), measured along the  meridians 0 and 90 deg west respectively.  For many  applications, xp and yp can be set to zero.\nIf hm, the height above the ellipsoid of the observing station  in meters, is not known but phpa, the pressure in hPa (=mB),  is available, an adequate estimate of hm can be obtained from  the expression\n   hm = -29.3 * tsl * log ( phpa / 1013.25 );\nwhere tsl is the approximate sea-level air temperature in K  (See Astrophysical Quantities, C.W.Allen, 3rd edition, section  52).  Similarly, if the pressure phpa is not known, it can be  estimated from the height of the observing station, hm, as  follows:\n   phpa = 1013.25 * exp ( -hm / ( 29.3 * tsl ) );\nNote, however, that the refraction is nearly proportional to  the pressure and that an accurate phpa value is important for  precise work.\nThe argument wl specifies the observing wavelength in  micrometers.  The transition from optical to radio is assumed to  occur at 100 micrometers (about 3000 GHz).\nThe accuracy of the result is limited by the corrections for  refraction, which use a simple Atan(z) + Btan^3(z) model.  Providing the meteorological parameters are known accurately and  there are no gross local effects, the predicted observed  coordinates should be within 0.05 arcsec (optical) or 1 arcsec  (radio) for a zenith distance of less than 70 degrees, better  than 30 arcsec (optical or radio) at 85 degrees and better  than 20 arcmin (optical) or 30 arcmin (radio) at the horizon.\nWithout refraction, the complementary functions eraAtco13 and  eraAtoc13 are self-consistent to better than 1 microarcsecond  all over the celestial sphere.  With refraction included,  consistency falls off at high zenith distances, but is still  better than 0.05 arcsec at 85 degrees.\n\"Observed\" Az,ZD means the position that would be seen by a  perfect geodetically aligned theodolite.  (Zenith distance is  used rather than altitude in order to reflect the fact that no  allowance is made for depression of the horizon.)  This is  related to the observed HA,Dec via the standard rotation, using  the geodetic latitude (corrected for polar motion), while the  observed HA and RA are related simply through the Earth rotation  angle and the site longitude.  \"Observed\" RA,Dec or HA,Dec thus  means the position that would be seen by a perfect equatorial  with its polar axis aligned to the Earth\'s axis of rotation.\nIt is advisable to take great care with units, as even unlikely  values of the input parameters are accepted and processed in  accordance with the models used.\n\nCalled\n\neraApco13: astrometry parameters, ICRS-observed, 2013\neraAtciq: quick ICRS to CIRS\neraAtioq: quick CIRS to observed\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atic13-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.atic13",
    "category": "method",
    "text": "atic13(ri, di, date1, date2)\n\nTransform star RA,Dec from geocentric CIRS to ICRS astrometric.\n\nGiven\n\nri, di: CIRS geocentric RA,Dec (radians)\ndate1: TDB as a 2-part...\ndate2: ...Julian Date (Note 1)\n\nReturned\n\nrc, dc: ICRS astrometric RA,Dec (radians)\neo: Equation of the origins (ERA-GST, Note 4)\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  For most applications of this function the choice will not be at all critical.\nTT can be used instead of TDB without any significant impact on accuracy.\nIterative techniques are used for the aberration and light deflection corrections so that the functions eraAtic13 (or eraAticq) and eraAtci13 (or eraAtciq) are accurate inverses; even at the edge of the Sun\'s disk the discrepancy is only about 1 nanoarcsecond.\nThe available accuracy is better than 1 milliarcsecond, limited mainly by the precession-nutation model that is used, namely IAU 2000A/2006.  Very close to solar system bodies, additional errors of up to several milliarcseconds can occur because of unmodeled light deflection;  however, the Sun\'s contribution is taken into account, to first order.  The accuracy limitations of the ERFA function eraEpv00 (used to compute Earth position and velocity) can contribute aberration errors of up to 5 microarcseconds.  Light deflection at the Sun\'s limb is uncertain at the 0.4 mas level.\nShould the transformation to (equinox based) J2000.0 mean place be required rather than (CIO based) ICRS coordinates, subtract the equation of the origins from the returned right ascension: RA = RI - EO.  (The eraAnp function can then be applied, as required, to keep the result in the conventional 0-2pi range.)\n\nCalled\n\neraApci13: astrometry parameters, ICRS-CIRS, 2013\neraAticq: quick CIRS to ICRS astrometric\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.aticq-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.aticq",
    "category": "method",
    "text": "aticq(ri, di, astrom)\n\nQuick CIRS RA,Dec to ICRS astrometric place, given the star- independent astrometry parameters.\n\nUse of this function is appropriate when efficiency is important and where many star positions are all to be transformed for one date. The star-independent astrometry parameters can be obtained by calling one of the functions eraApci[13], eraApcg[13], eraApco[13] or eraApcs[13].\n\nGiven\n\nri, di: CIRS RA,Dec (radians)\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\n\nReturned\n\nrc, dc: ICRS astrometric RA,Dec (radians)\n\nNotes\n\nOnly the Sun is taken into account in the light deflection correction.\nIterative techniques are used for the aberration and light deflection corrections so that the functions eraAtic13 (or eraAticq) and eraAtci13 (or eraAtciq) are accurate inverses; even at the edge of the Sun\'s disk the discrepancy is only about 1 nanoarcsecond.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraTrxp: product of transpose of r-matrix and p-vector\neraZp: zero p-vector\neraAb: stellar aberration\neraLdsun: light deflection by the Sun\neraC2s: p-vector to spherical\neraAnp: normalize angle into range +/- pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.aticqn-Tuple{Any,Any,Any,Array{LDBODY,N} where N}",
    "page": "API",
    "title": "ERFA.aticqn",
    "category": "method",
    "text": "aticqn(ri, di, astrom, b::Array{LDBODY})\n\nQuick CIRS to ICRS astrometric place transformation, given the star- independent astrometry parameters plus a list of light-deflecting bodies.\n\nUse of this function is appropriate when efficiency is important and where many star positions are all to be transformed for one date. The star-independent astrometry parameters can be obtained by calling one of the functions eraApci[13], eraApcg[13], eraApco[13] or eraApcs[13].\n\nGiven\n\nri, di: CIRS RA,Dec (radians)\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\nn: Number of bodies (Note 3)\nb::Vector{LDBODY}: Data for each of the n bodies (Notes 3,4):\nbm: Mass of the body (solar masses, Note 5)\ndl: Deflection limiter (Note 6)\npv: Barycentric PV of the body (au, au/day)\n\nReturned\n\nrc, dc: ICRS astrometric RA,Dec (radians)\n\nNotes\n\nIterative techniques are used for the aberration and light deflection corrections so that the functions eraAticqn and eraAtciqn are accurate inverses; even at the edge of the Sun\'s disk the discrepancy is only about 1 nanoarcsecond.\nIf the only light-deflecting body to be taken into account is the Sun, the eraAticq function can be used instead.\nThe struct b contains n entries, one for each body to be considered.  If n = 0, no gravitational light deflection will be applied, not even for the Sun.\nThe struct b should include an entry for the Sun as well as for any planet or other body to be taken into account.  The entries should be in the order in which the light passes the body.\nIn the entry in the b struct for body i, the mass parameter b[i].bm can, as required, be adjusted in order to allow for such effects as quadrupole field.\nThe deflection limiter parameter b[i].dl is phi^2/2, where phi is the angular separation (in radians) between star and body at which limiting is applied.  As phi shrinks below the chosen threshold, the deflection is artificially reduced, reaching zero for phi = 0.   Example values suitable for a terrestrial observer, together with masses, are as follows:\nbody i     b[i].bm        b[i].dl\nSun        1.0            6e-6    Jupiter    0.00095435     3e-9    Saturn     0.00028574     3e-10\nFor efficiency, validation of the contents of the b array is omitted.  The supplied masses must be greater than zero, the position and velocity vectors must be right, and the deflection limiter greater than zero.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraTrxp: product of transpose of r-matrix and p-vector\neraZp: zero p-vector\neraAb: stellar aberration\neraLdn: light deflection by n bodies\neraC2s: p-vector to spherical\neraAnp: normalize angle into range +/- pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atio13-NTuple{14,Any}",
    "page": "API",
    "title": "ERFA.atio13",
    "category": "method",
    "text": "atio13(ri, di, utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tk, rh, wl)\n\nCIRS RA,Dec to observed place.  The caller supplies UTC, site coordinates, ambient air conditions and observing wavelength.\n\nGiven\n\nri: CIRS right ascension (CIO-based, radians)\ndi: CIRS declination (radians)\nutc1: UTC as a 2-part...\nutc2: ...quasi Julian Date (Notes 1,2)\ndut1: UT1-UTC (seconds, Note 3)\nelong: Longitude (radians, east +ve, Note 4)\nphi: Geodetic latitude (radians, Note 4)\nhm: Height above ellipsoid (m, geodetic Notes 4,6)\nxp, yp: Polar motion coordinates (radians, Note 5)\nphpa: Pressure at the observer (hPa = mB, Note 6)\ntc: Ambient temperature at the observer (deg C)\nrh: Relative humidity at the observer (range 0-1)\nwl: Wavelength (micrometers, Note 7)\n\nReturned\n\naob: Observed azimuth (radians: N=0,E=90)\nzob: Observed zenith distance (radians)\nhob: Observed hour angle (radians)\ndob: Observed declination (radians)\nrob: Observed right ascension (CIO-based, radians)\n\nNotes\n\nutc1+utc2 is quasi Julian Date (see Note 2), apportioned in any  convenient way between the two arguments, for example where utc1  is the Julian Day Number and utc2 is the fraction of a day.\nHowever, JD cannot unambiguously represent UTC during a leap  second unless special measures are taken.  The convention in the  present function is that the JD day represents UTC days whether  the length is 86399, 86400 or 86401 SI seconds.\nApplications should use the function eraDtf2d to convert from  calendar date and time of day into 2-part quasi Julian Date, as  it implements the leap-second-ambiguity convention just  described.\nThe warning status \"dubious year\" flags UTCs that predate the  introduction of the time scale or that are too far in the  future to be trusted.  See eraDat for further details.\nUT1-UTC is tabulated in IERS bulletins.  It increases by exactly  one second at the end of each positive UTC leap second,  introduced in order to keep UT1-UTC within +/- 0.9s.  n.b. This  practice is under review, and in the future UT1-UTC may grow  essentially without limit.\nThe geographical coordinates are with respect to the ERFA_WGS84  reference ellipsoid.  TAKE CARE WITH THE LONGITUDE SIGN:  the  longitude required by the present function is east-positive  (i.e. right-handed), in accordance with geographical convention.\nThe polar motion xp,yp can be obtained from IERS bulletins.  The  values are the coordinates (in radians) of the Celestial  Intermediate Pole with respect to the International Terrestrial  Reference System (see IERS Conventions 2003), measured along the  meridians 0 and 90 deg west respectively.  For many  applications, xp and yp can be set to zero.\nIf hm, the height above the ellipsoid of the observing station  in meters, is not known but phpa, the pressure in hPa (=mB), is  available, an adequate estimate of hm can be obtained from the  expression\n   hm = -29.3 * tsl * log ( phpa / 1013.25 );\nwhere tsl is the approximate sea-level air temperature in K  (See Astrophysical Quantities, C.W.Allen, 3rd edition, section  52).  Similarly, if the pressure phpa is not known, it can be  estimated from the height of the observing station, hm, as  follows:\n   phpa = 1013.25 * exp ( -hm / ( 29.3 * tsl ) );\nNote, however, that the refraction is nearly proportional to  the pressure and that an accurate phpa value is important for  precise work.\nThe argument wl specifies the observing wavelength in  micrometers.  The transition from optical to radio is assumed to  occur at 100 micrometers (about 3000 GHz).\n\"Observed\" Az,ZD means the position that would be seen by a  perfect geodetically aligned theodolite.  (Zenith distance is  used rather than altitude in order to reflect the fact that no  allowance is made for depression of the horizon.)  This is  related to the observed HA,Dec via the standard rotation, using  the geodetic latitude (corrected for polar motion), while the  observed HA and RA are related simply through the Earth rotation  angle and the site longitude.  \"Observed\" RA,Dec or HA,Dec thus  means the position that would be seen by a perfect equatorial  with its polar axis aligned to the Earth\'s axis of rotation.\nThe accuracy of the result is limited by the corrections for  refraction, which use a simple Atan(z) + Btan^3(z) model.  Providing the meteorological parameters are known accurately and  there are no gross local effects, the predicted astrometric  coordinates should be within 0.05 arcsec (optical) or 1 arcsec  (radio) for a zenith distance of less than 70 degrees, better  than 30 arcsec (optical or radio) at 85 degrees and better  than 20 arcmin (optical) or 30 arcmin (radio) at the horizon.\nThe complementary functions eraAtio13 and eraAtoi13 are self-  consistent to better than 1 microarcsecond all over the  celestial sphere.\nIt is advisable to take great care with units, as even unlikely  values of the input parameters are accepted and processed in  accordance with the models used.\n\nCalled\n\neraApio13: astrometry parameters, CIRS-observed, 2013\neraAtioq: quick CIRS to observed\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atioq-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.atioq",
    "category": "method",
    "text": "atioq(ri, di, astrom)\n\nQuick CIRS to observed place transformation.\n\nUse of this function is appropriate when efficiency is important and where many star positions are all to be transformed for one date. The star-independent astrometry parameters can be obtained by calling eraApio[13] or eraApco[13].\n\nGiven\n\nri: CIRS right ascension\ndi: CIRS declination\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\n\nReturned\n\naob: Observed azimuth (radians: N=0,E=90)\nzob: Observed zenith distance (radians)\nhob: Observed hour angle (radians)\ndob: Observed declination (radians)\nrob: Observed right ascension (CIO-based, radians)\n\nNotes\n\nThis function returns zenith distance rather than altitude in order to reflect the fact that no allowance is made for depression of the horizon.\nThe accuracy of the result is limited by the corrections for refraction, which use a simple Atan(z) + Btan^3(z) model. Providing the meteorological parameters are known accurately and there are no gross local effects, the predicted observed coordinates should be within 0.05 arcsec (optical) or 1 arcsec (radio) for a zenith distance of less than 70 degrees, better than 30 arcsec (optical or radio) at 85 degrees and better than 20 arcmin (optical) or 30 arcmin (radio) at the horizon.\nWithout refraction, the complementary functions eraAtioq and eraAtoiq are self-consistent to better than 1 microarcsecond all over the celestial sphere.  With refraction included, consistency falls off at high zenith distances, but is still better than 0.05 arcsec at 85 degrees.\nIt is advisable to take great care with units, as even unlikely values of the input parameters are accepted and processed in accordance with the models used.\nThe CIRS RA,Dec is obtained from a star catalog mean place by allowing for space motion, parallax, the Sun\'s gravitational lens effect, annual aberration and precession-nutation.  For star positions in the ICRS, these effects can be applied by means of the eraAtci13 (etc.) functions.  Starting from classical \"mean place\" systems, additional transformations will be needed first.\n\"Observed\" Az,El means the position that would be seen by a perfect geodetically aligned theodolite.  This is obtained from the CIRS RA,Dec by allowing for Earth orientation and diurnal aberration, rotating from equator to horizon coordinates, and then adjusting for refraction.  The HA,Dec is obtained by rotating back into equatorial coordinates, and is the position that would be seen by a perfect equatorial with its polar axis aligned to the Earth\'s axis of rotation.  Finally, the RA is obtained by subtracting the HA from the local ERA.\nThe star-independent CIRS-to-observed-place parameters in ASTROM may be computed with eraApio[13] or eraApco[13].  If nothing has changed significantly except the time, eraAper[13] may be used to perform the requisite adjustment to the astrom structure.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraC2s: p-vector to spherical\neraAnp: normalize angle into range 0 to 2pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atoc13-NTuple{15,Any}",
    "page": "API",
    "title": "ERFA.atoc13",
    "category": "method",
    "text": "atoc13(typeofcoordinates, ob1, ob2, utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tk, rh, wl)\n\nObserved place at a groundbased site to to ICRS astrometric RA,Dec. The caller supplies UTC, site coordinates, ambient air conditions and observing wavelength.\n\nGiven\n\ntype: Type of coordinates - \"R\", \"H\" or \"A\" (Notes 1,2)\nob1: Observed Az, HA or RA (radians; Az is N=0,E=90)\nob2: Observed ZD or Dec (radians)\nutc1: UTC as a 2-part...\nutc2: ...quasi Julian Date (Notes 3,4)\ndut1: UT1-UTC (seconds, Note 5)\nelong: Longitude (radians, east +ve, Note 6)\nphi: Geodetic latitude (radians, Note 6)\nhm: Height above ellipsoid (m, geodetic Notes 6,8)\nxp, yp: Polar motion coordinates (radians, Note 7)\nphpa: Pressure at the observer (hPa = mB, Note 8)\ntc: Ambient temperature at the observer (deg C)\nrh: Relative humidity at the observer (range 0-1)\nwl: Wavelength (micrometers, Note 9)\n\nReturned\n\nrc, dc: ICRS astrometric RA,Dec (radians)\n\nNotes\n\n\"Observed\" Az,ZD means the position that would be seen by a  perfect geodetically aligned theodolite.  (Zenith distance is  used rather than altitude in order to reflect the fact that no  allowance is made for depression of the horizon.)  This is  related to the observed HA,Dec via the standard rotation, using  the geodetic latitude (corrected for polar motion), while the  observed HA and RA are related simply through the Earth rotation  angle and the site longitude.  \"Observed\" RA,Dec or HA,Dec thus  means the position that would be seen by a perfect equatorial  with its polar axis aligned to the Earth\'s axis of rotation.\nOnly the first character of the type argument is significant.  \"R\" or \"r\" indicates that ob1 and ob2 are the observed right  ascension and declination;  \"H\" or \"h\" indicates that they are  hour angle (west +ve) and declination;  anything else (\"A\" or  \"a\" is recommended) indicates that ob1 and ob2 are azimuth  (north zero, east 90 deg) and zenith distance.\nutc1+utc2 is quasi Julian Date (see Note 2), apportioned in any  convenient way between the two arguments, for example where utc1  is the Julian Day Number and utc2 is the fraction of a day.\nHowever, JD cannot unambiguously represent UTC during a leap  second unless special measures are taken.  The convention in the  present function is that the JD day represents UTC days whether  the length is 86399, 86400 or 86401 SI seconds.\nApplications should use the function eraDtf2d to convert from  calendar date and time of day into 2-part quasi Julian Date, as  it implements the leap-second-ambiguity convention just  described.\nThe warning status \"dubious year\" flags UTCs that predate the  introduction of the time scale or that are too far in the  future to be trusted.  See eraDat for further details.\nUT1-UTC is tabulated in IERS bulletins.  It increases by exactly  one second at the end of each positive UTC leap second,  introduced in order to keep UT1-UTC within +/- 0.9s.  n.b. This  practice is under review, and in the future UT1-UTC may grow  essentially without limit.\nThe geographical coordinates are with respect to the ERFA_WGS84  reference ellipsoid.  TAKE CARE WITH THE LONGITUDE SIGN:  the  longitude required by the present function is east-positive  (i.e. right-handed), in accordance with geographical convention.\nThe polar motion xp,yp can be obtained from IERS bulletins.  The  values are the coordinates (in radians) of the Celestial  Intermediate Pole with respect to the International Terrestrial  Reference System (see IERS Conventions 2003), measured along the  meridians 0 and 90 deg west respectively.  For many  applications, xp and yp can be set to zero.\nIf hm, the height above the ellipsoid of the observing station  in meters, is not known but phpa, the pressure in hPa (=mB), is  available, an adequate estimate of hm can be obtained from the  expression\n   hm = -29.3 * tsl * log ( phpa / 1013.25 );\nwhere tsl is the approximate sea-level air temperature in K  (See Astrophysical Quantities, C.W.Allen, 3rd edition, section  52).  Similarly, if the pressure phpa is not known, it can be  estimated from the height of the observing station, hm, as  follows:\n   phpa = 1013.25 * exp ( -hm / ( 29.3 * tsl ) );\nNote, however, that the refraction is nearly proportional to  the pressure and that an accurate phpa value is important for  precise work.\nThe argument wl specifies the observing wavelength in  micrometers.  The transition from optical to radio is assumed to  occur at 100 micrometers (about 3000 GHz).\nThe accuracy of the result is limited by the corrections for  refraction, which use a simple Atan(z) + Btan^3(z) model.  Providing the meteorological parameters are known accurately and  there are no gross local effects, the predicted astrometric  coordinates should be within 0.05 arcsec (optical) or 1 arcsec  (radio) for a zenith distance of less than 70 degrees, better  than 30 arcsec (optical or radio) at 85 degrees and better  than 20 arcmin (optical) or 30 arcmin (radio) at the horizon.\nWithout refraction, the complementary functions eraAtco13 and  eraAtoc13 are self-consistent to better than 1 microarcsecond  all over the celestial sphere.  With refraction included,  consistency falls off at high zenith distances, but is still  better than 0.05 arcsec at 85 degrees.\nIt is advisable to take great care with units, as even unlikely  values of the input parameters are accepted and processed in  accordance with the models used.\n\nCalled\n\neraApco13: astrometry parameters, ICRS-observed\neraAtoiq: quick observed to CIRS\neraAticq: quick CIRS to ICRS\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atoi13-NTuple{15,Any}",
    "page": "API",
    "title": "ERFA.atoi13",
    "category": "method",
    "text": "atoi13(typeofcoordinates, ob1, ob2, utc1, utc2, dut1, elong, phi, hm, xp, yp, phpa, tk, rh, wl)\n\nObserved place to CIRS.  The caller supplies UTC, site coordinates, ambient air conditions and observing wavelength.\n\nGiven\n\ntype: Type of coordinates - \"R\", \"H\" or \"A\" (Notes 1,2)\nob1: Observed Az, HA or RA (radians; Az is N=0,E=90)\nob2: Observed ZD or Dec (radians)\nutc1: UTC as a 2-part...\nutc2: ...quasi Julian Date (Notes 3,4)\ndut1: UT1-UTC (seconds, Note 5)\nelong: Longitude (radians, east +ve, Note 6)\nphi: Geodetic latitude (radians, Note 6)\nhm: Height above the ellipsoid (meters, Notes 6,8)\nxp, yp: Polar motion coordinates (radians, Note 7)\nphpa: Pressure at the observer (hPa = mB, Note 8)\ntc: Ambient temperature at the observer (deg C)\nrh: Relative humidity at the observer (range 0-1)\nwl: Wavelength (micrometers, Note 9)\n\nReturned\n\nri: CIRS right ascension (CIO-based, radians)\ndi: CIRS declination (radians)\n\nNotes\n\n\"Observed\" Az,ZD means the position that would be seen by a  perfect geodetically aligned theodolite.  (Zenith distance is  used rather than altitude in order to reflect the fact that no  allowance is made for depression of the horizon.)  This is  related to the observed HA,Dec via the standard rotation, using  the geodetic latitude (corrected for polar motion), while the  observed HA and RA are related simply through the Earth rotation  angle and the site longitude.  \"Observed\" RA,Dec or HA,Dec thus  means the position that would be seen by a perfect equatorial  with its polar axis aligned to the Earth\'s axis of rotation.\nOnly the first character of the type argument is significant.  \"R\" or \"r\" indicates that ob1 and ob2 are the observed right  ascension and declination;  \"H\" or \"h\" indicates that they are  hour angle (west +ve) and declination;  anything else (\"A\" or  \"a\" is recommended) indicates that ob1 and ob2 are azimuth  (north zero, east 90 deg) and zenith distance.\nutc1+utc2 is quasi Julian Date (see Note 2), apportioned in any  convenient way between the two arguments, for example where utc1  is the Julian Day Number and utc2 is the fraction of a day.\nHowever, JD cannot unambiguously represent UTC during a leap  second unless special measures are taken.  The convention in the  present function is that the JD day represents UTC days whether  the length is 86399, 86400 or 86401 SI seconds.\nApplications should use the function eraDtf2d to convert from  calendar date and time of day into 2-part quasi Julian Date, as  it implements the leap-second-ambiguity convention just  described.\nThe warning status \"dubious year\" flags UTCs that predate the  introduction of the time scale or that are too far in the  future to be trusted.  See eraDat for further details.\nUT1-UTC is tabulated in IERS bulletins.  It increases by exactly  one second at the end of each positive UTC leap second,  introduced in order to keep UT1-UTC within +/- 0.9s.  n.b. This  practice is under review, and in the future UT1-UTC may grow  essentially without limit.\nThe geographical coordinates are with respect to the ERFA_WGS84  reference ellipsoid.  TAKE CARE WITH THE LONGITUDE SIGN:  the  longitude required by the present function is east-positive  (i.e. right-handed), in accordance with geographical convention.\nThe polar motion xp,yp can be obtained from IERS bulletins.  The  values are the coordinates (in radians) of the Celestial  Intermediate Pole with respect to the International Terrestrial  Reference System (see IERS Conventions 2003), measured along the  meridians 0 and 90 deg west respectively.  For many  applications, xp and yp can be set to zero.\nIf hm, the height above the ellipsoid of the observing station  in meters, is not known but phpa, the pressure in hPa (=mB), is  available, an adequate estimate of hm can be obtained from the  expression\n   hm = -29.3 * tsl * log ( phpa / 1013.25 );\nwhere tsl is the approximate sea-level air temperature in K  (See Astrophysical Quantities, C.W.Allen, 3rd edition, section  52).  Similarly, if the pressure phpa is not known, it can be  estimated from the height of the observing station, hm, as  follows:\n   phpa = 1013.25 * exp ( -hm / ( 29.3 * tsl ) );\nNote, however, that the refraction is nearly proportional to  the pressure and that an accurate phpa value is important for  precise work.\nThe argument wl specifies the observing wavelength in  micrometers.  The transition from optical to radio is assumed to  occur at 100 micrometers (about 3000 GHz).\nThe accuracy of the result is limited by the corrections for  refraction, which use a simple Atan(z) + Btan^3(z) model.  Providing the meteorological parameters are known accurately and  there are no gross local effects, the predicted astrometric  coordinates should be within 0.05 arcsec (optical) or 1 arcsec  (radio) for a zenith distance of less than 70 degrees, better  than 30 arcsec (optical or radio) at 85 degrees and better  than 20 arcmin (optical) or 30 arcmin (radio) at the horizon.\nWithout refraction, the complementary functions eraAtio13 and  eraAtoi13 are self-consistent to better than 1 microarcsecond  all over the celestial sphere.  With refraction included,  consistency falls off at high zenith distances, but is still  better than 0.05 arcsec at 85 degrees.\nIt is advisable to take great care with units, as even unlikely  values of the input parameters are accepted and processed in  accordance with the models used.\n\nCalled\n\neraApio13: astrometry parameters, CIRS-observed, 2013\neraAtoiq: quick observed to CIRS\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.atoiq-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.atoiq",
    "category": "method",
    "text": "atoiq(typeofcoordinates, ob1, ob2, astrom)\n\nQuick observed place to CIRS, given the star-independent astrometry parameters.\n\nUse of this function is appropriate when efficiency is important and where many star positions are all to be transformed for one date. The star-independent astrometry parameters can be obtained by calling eraApio[13] or eraApco[13].\n\nGiven\n\ntype: Type of coordinates: \"R\", \"H\" or \"A\" (Note 1)\nob1: Observed Az, HA or RA (radians; Az is N=0,E=90)\nob2: Observed ZD or Dec (radians)\nastrom: Star-independent astrometry parameters:\npmt: PM time interval (SSB, Julian years)\neb: SSB to observer (vector, au)\neh: Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\nv: Barycentric observer velocity (vector, c)\nbm1: sqrt1-v^2 Reciprocal of Lorenz factor\nbpn: Bias-precession-nutation matrix\nalong: Longitude + s\' (radians)\nxp1: Polar motion xp wrt local meridian (radians)\nyp1: Polar motion yp wrt local meridian (radians)\nsphi: Sine of geodetic latitude\ncphi: Cosine of geodetic latitude\ndiurab: Magnitude of diurnal aberration vector\neral: \"Local\" Earth rotation angle (radians)\nrefa: Refraction constant A (radians)\nrefb: Refraction constant B (radians)\n\nReturned\n\nri: CIRS right ascension (CIO-based, radians)\ndi: CIRS declination (radians)\n\nNotes\n\n\"Observed\" Az,El means the position that would be seen by a perfect geodetically aligned theodolite.  This is related to the observed HA,Dec via the standard rotation, using the geodetic latitude (corrected for polar motion), while the observed HA and RA are related simply through the Earth rotation angle and the site longitude.  \"Observed\" RA,Dec or HA,Dec thus means the position that would be seen by a perfect equatorial with its polar axis aligned to the Earth\'s axis of rotation.  By removing from the observed place the effects of atmospheric refraction and diurnal aberration, the CIRS RA,Dec is obtained.\nOnly the first character of the type argument is significant. \"R\" or \"r\" indicates that ob1 and ob2 are the observed right ascension and declination;  \"H\" or \"h\" indicates that they are hour angle (west +ve) and declination;  anything else (\"A\" or \"a\" is recommended) indicates that ob1 and ob2 are azimuth (north zero, east 90 deg) and zenith distance.  (Zenith distance is used rather than altitude in order to reflect the fact that no allowance is made for depression of the horizon.)\nThe accuracy of the result is limited by the corrections for refraction, which use a simple Atan(z) + Btan^3(z) model. Providing the meteorological parameters are known accurately and there are no gross local effects, the predicted observed coordinates should be within 0.05 arcsec (optical) or 1 arcsec (radio) for a zenith distance of less than 70 degrees, better than 30 arcsec (optical or radio) at 85 degrees and better than 20 arcmin (optical) or 30 arcmin (radio) at the horizon.\nWithout refraction, the complementary functions eraAtioq and eraAtoiq are self-consistent to better than 1 microarcsecond all over the celestial sphere.  With refraction included, consistency falls off at high zenith distances, but is still better than 0.05 arcsec at 85 degrees.\nIt is advisable to take great care with units, as even unlikely values of the input parameters are accepted and processed in accordance with the models used.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraC2s: p-vector to spherical\neraAnp: normalize angle into range 0 to 2pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.bi00-Tuple{}",
    "page": "API",
    "title": "ERFA.bi00",
    "category": "method",
    "text": "bi00()\n\nFrame bias components of IAU 2000 precession-nutation models (part of MHB2000 with additions).\n\nReturned\n\ndpsibi, depsbi: Longitude and obliquity corrections\ndra: The ICRS RA of the J2000.0 mean equinox\n\nNotes\n\nThe frame bias corrections in longitude and obliquity (radians) are required in order to correct for the offset between the GCRS pole and the mean J2000.0 pole.  They define, with respect to the GCRS frame, a J2000.0 mean pole that is consistent with the rest of the IAU 2000A precession-nutation model.\nIn addition to the displacement of the pole, the complete description of the frame bias requires also an offset in right ascension.  This is not part of the IAU 2000A model, and is from Chapront et al. (2002).  It is returned in radians.\nThis is a supplemented implementation of one aspect of the IAU 2000A nutation model, formally adopted by the IAU General Assembly in 2000, namely MHB2000 (Mathews et al. 2002).\n\nReferences\n\nChapront, J., Chapront-Touze, M. & Francou, G., Astron.   Astrophys., 387, 700, 2002.\nMathews, P.M., Herring, T.A., Buffet, B.A., \"Modeling of nutation   and precession   New nutation series for nonrigid Earth and   insights into the Earth\'s interior\", J.Geophys.Res., 107, B4,\nThe MHB2000 code itself was obtained on 9th September 2002\nfrom ftp://maia.usno.navy.mil/conv2000/chapter5/IAU2000A.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.bp00",
    "page": "API",
    "title": "ERFA.bp00",
    "category": "function",
    "text": "bp00(date1, date2)\n\nFrame bias and precession, IAU 2000.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrb: Frame bias matrix (Note 2)\nrp: Precession matrix (Note 3)\nrbp: Bias-precession matrix (Note 4)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\n    date1         date2\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix rb transforms vectors from GCRS to mean J2000.0 by applying frame bias.\nThe matrix rp transforms vectors from J2000.0 mean equator and equinox to mean equator and equinox of date by applying precession.\nThe matrix rbp transforms vectors from GCRS to mean equator and equinox of date by applying frame bias then precession.  It is the product rp x rb.\nIt is permissible to re-use the same array in the returned arguments.  The arrays are filled in the order given.\n\nCalled\n\neraBi00: frame bias components, IAU 2000\neraPr00: IAU 2000 precession adjustments\neraIr: initialize r-matrix to identity\neraRx: rotate around X-axis\neraRy: rotate around Y-axis\neraRz: rotate around Z-axis\neraCr: copy r-matrix\neraRxr: product of two r-matrices\n\nReference\n\n\"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.bp06",
    "page": "API",
    "title": "ERFA.bp06",
    "category": "function",
    "text": "bp06(date1, date2)\n\nFrame bias and precession, IAU 2006.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrb: Frame bias matrix (Note 2)\nrp: Precession matrix (Note 3)\nrbp: Bias-precession matrix (Note 4)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\n    date1         date2\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix rb transforms vectors from GCRS to mean J2000.0 by applying frame bias.\nThe matrix rp transforms vectors from mean J2000.0 to mean of date by applying precession.\nThe matrix rbp transforms vectors from GCRS to mean of date by applying frame bias then precession.  It is the product rp x rb.\nIt is permissible to re-use the same array in the returned arguments.  The arrays are filled in the order given.\n\nCalled\n\neraPfw06: bias-precession F-W angles, IAU 2006\neraFw2m: F-W angles to r-matrix\neraPmat06: PB matrix, IAU 2006\neraTr: transpose r-matrix\neraRxr: product of two r-matrices\neraCr: copy r-matrix\n\nReferences\n\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.bpn2xy-Tuple{Any}",
    "page": "API",
    "title": "ERFA.bpn2xy",
    "category": "method",
    "text": "bpn2xy(rbpn)\n\nExtract from the bias-precession-nutation matrix the X,Y coordinates of the Celestial Intermediate Pole.\n\nGiven\n\nrbpn: Celestial-to-true matrix (Note 1)\n\nReturned\n\nx, y: Celestial Intermediate Pole (Note 2)\n\nNotes\n\nThe matrix rbpn transforms vectors from GCRS to true equator (and CIO or equinox) of date, and therefore the Celestial Intermediate Pole unit vector is the bottom row of the matrix.\nThe arguments x,y are components of the Celestial Intermediate Pole unit vector in the Geocentric Celestial Reference System.\n\nReference\n\n\"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154   (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2i00a",
    "page": "API",
    "title": "ERFA.c2i00a",
    "category": "function",
    "text": "c2i00a(a, b)\n\nForm the celestial-to-intermediate matrix for a given date using the IAU 2000A precession-nutation model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrc2i: Celestial-to-intermediate matrix (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix rc2i is the first stage in the transformation from celestial to terrestrial coordinates:\n[TRS]  =  RPOM * R_3(ERA) * rc2i * [CRS]\n      =  rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), ERA is the Earth Rotation Angle and RPOM is the polar motion matrix.\nA faster, but slightly less accurate result (about 1 mas), can be obtained by using instead the eraC2i00b function.\n\nCalled\n\neraPnm00a: classical NPB matrix, IAU 2000A\neraC2ibpn: celestial-to-intermediate matrix, given NPB matrix\n\nReferences\n\n\"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154   (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2i00b",
    "page": "API",
    "title": "ERFA.c2i00b",
    "category": "function",
    "text": "c2i00b(a, b)\n\nForm the celestial-to-intermediate matrix for a given date using the IAU 2000B precession-nutation model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrc2i: Celestial-to-intermediate matrix (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix rc2i is the first stage in the transformation from celestial to terrestrial coordinates:\n[TRS]  =  RPOM * R_3(ERA) * rc2i * [CRS]\n      =  rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), ERA is the Earth Rotation Angle and RPOM is the polar motion matrix.\nThe present function is faster, but slightly less accurate (about 1 mas), than the eraC2i00a function.\n\nCalled\n\neraPnm00b: classical NPB matrix, IAU 2000B\neraC2ibpn: celestial-to-intermediate matrix, given NPB matrix\n\nReferences\n\n\"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154   (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2i06a",
    "page": "API",
    "title": "ERFA.c2i06a",
    "category": "function",
    "text": "c2i06a(a, b)\n\nForm the celestial-to-intermediate matrix for a given date using the IAU 2006 precession and IAU 2000A nutation models.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrc2i: Celestial-to-intermediate matrix (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix rc2i is the first stage in the transformation from celestial to terrestrial coordinates:\n[TRS]  =  RPOM * R_3(ERA) * rc2i * [CRS]\n      =  RC2T * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), ERA is the Earth Rotation Angle and RPOM is the polar motion matrix.\n\nCalled\n\neraPnm06a: classical NPB matrix, IAU 2006/2000A\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS06: the CIO locator s, given X,Y, IAU 2006\neraC2ixys: celestial-to-intermediate matrix, given X,Y and s\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), 2004, IERS Conventions (2003),   IERS Technical Note No. 32, BKG\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2ibpn-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.c2ibpn",
    "category": "method",
    "text": "c2ibpn(date1, date2, rbpn)\n\nForm the celestial-to-intermediate matrix for a given date given the bias-precession-nutation matrix.  IAU 2000.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\nrbpn: Celestial-to-true matrix (Note 2)\n\nReturned\n\nrc2i: Celestial-to-intermediate matrix (Note 3)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix rbpn transforms vectors from GCRS to true equator (and CIO or equinox) of date.  Only the CIP (bottom row) is used.\nThe matrix rc2i is the first stage in the transformation from celestial to terrestrial coordinates:\n[TRS] = RPOM * R_3(ERA) * rc2i * [CRS]\n     = RC2T * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), ERA is the Earth Rotation Angle and RPOM is the polar motion matrix.\nAlthough its name does not include \"00\", This function is in fact specific to the IAU 2000 models.\n\nCalled\n\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraC2ixy: celestial-to-intermediate matrix, given X,Y\n\nReferences\n\n\"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2ixy-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.c2ixy",
    "category": "method",
    "text": "c2ixy(x, y, s, t)\n\nForm the celestial to intermediate-frame-of-date matrix for a given date when the CIP X,Y coordinates are known.  IAU 2000.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\nx, y: Celestial Intermediate Pole (Note 2)\n\nReturned\n\nrc2i: Celestial-to-intermediate matrix (Note 3)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe Celestial Intermediate Pole coordinates are the x,y components of the unit vector in the Geocentric Celestial Reference System.\nThe matrix rc2i is the first stage in the transformation from celestial to terrestrial coordinates:\n[TRS] = RPOM * R_3(ERA) * rc2i * [CRS]\n     = RC2T * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), ERA is the Earth Rotation Angle and RPOM is the polar motion matrix.\nAlthough its name does not include \"00\", This function is in fact specific to the IAU 2000 models.\n\nCalled\n\neraC2ixys: celestial-to-intermediate matrix, given X,Y and s\neraS00: the CIO locator s, given X,Y, IAU 2000A\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2ixys-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.c2ixys",
    "category": "method",
    "text": "c2ixys(x, y, s)\n\nForm the celestial to intermediate-frame-of-date matrix given the CIP X,Y and the CIO locator s.\n\nGiven\n\nx, y: Celestial Intermediate Pole (Note 1)\ns: The CIO locator s (Note 2)\n\nReturned\n\nrc2i: Celestial-to-intermediate matrix (Note 3)\n\nNotes\n\nThe Celestial Intermediate Pole coordinates are the x,y components of the unit vector in the Geocentric Celestial Reference System.\nThe CIO locator s (in radians) positions the Celestial Intermediate Origin on the equator of the CIP.\nThe matrix rc2i is the first stage in the transformation from celestial to terrestrial coordinates:\n[TRS] = RPOM * R_3(ERA) * rc2i * [CRS]\n     = RC2T * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), ERA is the Earth Rotation Angle and RPOM is the polar motion matrix.\n\nCalled\n\neraIr: initialize r-matrix to identity\neraRz: rotate around Z-axis\neraRy: rotate around Y-axis\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2s-Tuple{Any}",
    "page": "API",
    "title": "ERFA.c2s",
    "category": "method",
    "text": "c2s(p)\n\nP-vector to spherical coordinates.\n\nGiven\n\np: P-vector\n\nReturned\n\ntheta: Longitude angle (radians)\nphi: Latitude angle (radians)\n\nNotes\n\nThe vector p can have any magnitude; only its direction is used.\nIf p is null, zero theta and phi are returned.\nAt either pole, zero theta is returned.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2t00a",
    "page": "API",
    "title": "ERFA.c2t00a",
    "category": "function",
    "text": "c2t00a(tta, ttb, uta, utb, xp, yp)\n\nForm the celestial to terrestrial matrix given the date, the UT1 and the polar motion, using the IAU 2000A nutation model.\n\nGiven\n\ntta, ttb: TT as a 2-part Julian Date (Note 1)\nuta, utb: UT1 as a 2-part Julian Date (Note 1)\nxp, yp: Coordinates of the pole (radians, Note 2)\n\nReturned\n\nrc2t: Celestial-to-terrestrial matrix (Note 3)\n\nNotes\n\nThe TT and UT1 dates tta+ttb and uta+utb are Julian Dates, apportioned in any convenient way between the arguments uta and utb.  For example, JD(UT1)=2450123.7 could be expressed in any of these ways, among others:\n    uta            utb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  In the case of uta,utb, the date & time method is best matched to the Earth rotation angle algorithm used:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nThe arguments xp and yp are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions 2003), measured along the meridians to 0 and 90 deg west respectively.\nThe matrix rc2t transforms from celestial to terrestrial coordinates:\n[TRS] = RPOM * R_3(ERA) * RC2I * [CRS]\n     = rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), RC2I is the celestial-to-intermediate matrix, ERA is the Earth rotation angle and RPOM is the polar motion matrix.\nA faster, but slightly less accurate result (about 1 mas), can be obtained by using instead the eraC2t00b function.\n\nCalled\n\neraC2i00a: celestial-to-intermediate matrix, IAU 2000A\neraEra00: Earth rotation angle, IAU 2000\neraSp00: the TIO locator s\', IERS 2000\neraPom00: polar motion matrix\neraC2tcio: form CIO-based celestial-to-terrestrial matrix\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2t00b",
    "page": "API",
    "title": "ERFA.c2t00b",
    "category": "function",
    "text": "c2t00b(tta, ttb, uta, utb, xp, yp)\n\nForm the celestial to terrestrial matrix given the date, the UT1 and the polar motion, using the IAU 2000B nutation model.\n\nGiven\n\ntta, ttb: TT as a 2-part Julian Date (Note 1)\nuta, utb: UT1 as a 2-part Julian Date (Note 1)\nxp, yp: Coordinates of the pole (radians, Note 2)\n\nReturned\n\nrc2t: Celestial-to-terrestrial matrix (Note 3)\n\nNotes\n\nThe TT and UT1 dates tta+ttb and uta+utb are Julian Dates, apportioned in any convenient way between the arguments uta and utb.  For example, JD(UT1)=2450123.7 could be expressed in any of these ways, among others:\n    uta            utb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  In the case of uta,utb, the date & time method is best matched to the Earth rotation angle algorithm used:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nThe arguments xp and yp are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions 2003), measured along the meridians to 0 and 90 deg west respectively.\nThe matrix rc2t transforms from celestial to terrestrial coordinates:\n[TRS] = RPOM * R_3(ERA) * RC2I * [CRS]\n     = rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), RC2I is the celestial-to-intermediate matrix, ERA is the Earth rotation angle and RPOM is the polar motion matrix.\nThe present function is faster, but slightly less accurate (about 1 mas), than the eraC2t00a function.\n\nCalled\n\neraC2i00b: celestial-to-intermediate matrix, IAU 2000B\neraEra00: Earth rotation angle, IAU 2000\neraPom00: polar motion matrix\neraC2tcio: form CIO-based celestial-to-terrestrial matrix\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2t06a",
    "page": "API",
    "title": "ERFA.c2t06a",
    "category": "function",
    "text": "c2t06a(tta, ttb, uta, utb, xp, yp)\n\nForm the celestial to terrestrial matrix given the date, the UT1 and the polar motion, using the IAU 2006 precession and IAU 2000A nutation models.\n\nGiven\n\ntta, ttb: TT as a 2-part Julian Date (Note 1)\nuta, utb: UT1 as a 2-part Julian Date (Note 1)\nxp, yp: Coordinates of the pole (radians, Note 2)\n\nReturned\n\nrc2t: Celestial-to-terrestrial matrix (Note 3)\n\nNotes\n\nThe TT and UT1 dates tta+ttb and uta+utb are Julian Dates, apportioned in any convenient way between the arguments uta and utb.  For example, JD(UT1)=2450123.7 could be expressed in any of these ways, among others:\n    uta            utb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  In the case of uta,utb, the date & time method is best matched to the Earth rotation angle algorithm used:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nThe arguments xp and yp are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions 2003), measured along the meridians to 0 and 90 deg west respectively.\nThe matrix rc2t transforms from celestial to terrestrial coordinates:\n[TRS] = RPOM * R_3(ERA) * RC2I * [CRS]\n     = rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), RC2I is the celestial-to-intermediate matrix, ERA is the Earth rotation angle and RPOM is the polar motion matrix.\n\nCalled\n\neraC2i06a: celestial-to-intermediate matrix, IAU 2006/2000A\neraEra00: Earth rotation angle, IAU 2000\neraSp00: the TIO locator s\', IERS 2000\neraPom00: polar motion matrix\neraC2tcio: form CIO-based celestial-to-terrestrial matrix\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), 2004, IERS Conventions (2003),   IERS Technical Note No. 32, BKG\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2tcio",
    "page": "API",
    "title": "ERFA.c2tcio",
    "category": "function",
    "text": "c2tcio(rc2i, era, rpom)\n\nAssemble the celestial to terrestrial matrix from CIO-based components (the celestial-to-intermediate matrix, the Earth Rotation Angle and the polar motion matrix).\n\nGiven\n\nrc2i: Celestial-to-intermediate matrix\nera: Earth rotation angle (radians)\nrpom: Polar-motion matrix\n\nReturned\n\nrc2t: Celestial-to-terrestrial matrix\n\nNotes\n\nThis function constructs the rotation matrix that transforms vectors in the celestial system into vectors in the terrestrial system.  It does so starting from precomputed components, namely the matrix which rotates from celestial coordinates to the intermediate frame, the Earth rotation angle and the polar motion matrix.  One use of the present function is when generating a series of celestial-to-terrestrial matrices where only the Earth Rotation Angle changes, avoiding the considerable overhead of recomputing the precession-nutation more often than necessary to achieve given accuracy objectives.\nThe relationship between the arguments is as follows:\n[TRS] = RPOM * R_3(ERA) * rc2i * [CRS]\n     = rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003).\n\nCalled\n\neraCr: copy r-matrix\neraRz: rotate around Z-axis\neraRxr: product of two r-matrices\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), 2004, IERS Conventions (2003),   IERS Technical Note No. 32, BKG\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2teqx",
    "page": "API",
    "title": "ERFA.c2teqx",
    "category": "function",
    "text": "c2teqx(rc2i, era, rpom)\n\nAssemble the celestial to terrestrial matrix from equinox-based components (the celestial-to-true matrix, the Greenwich Apparent Sidereal Time and the polar motion matrix).\n\nGiven\n\nrbpn: Celestial-to-true matrix\ngst: Greenwich (apparent) Sidereal Time (radians)\nrpom: Polar-motion matrix\n\nReturned\n\nrc2t: Celestial-to-terrestrial matrix (Note 2)\n\nNotes\n\nThis function constructs the rotation matrix that transforms vectors in the celestial system into vectors in the terrestrial system.  It does so starting from precomputed components, namely the matrix which rotates from celestial coordinates to the true equator and equinox of date, the Greenwich Apparent Sidereal Time and the polar motion matrix.  One use of the present function is when generating a series of celestial-to-terrestrial matrices where only the Sidereal Time changes, avoiding the considerable overhead of recomputing the precession-nutation more often than necessary to achieve given accuracy objectives.\nThe relationship between the arguments is as follows:\n[TRS] = rpom * R_3(gst) * rbpn * [CRS]\n     = rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003).\n\nCalled\n\neraCr: copy r-matrix\neraRz: rotate around Z-axis\neraRxr: product of two r-matrices\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2tpe",
    "page": "API",
    "title": "ERFA.c2tpe",
    "category": "function",
    "text": "c2tpe(tta, ttb, uta, utb, x, y, xp, yp)\n\nForm the celestial to terrestrial matrix given the date, the UT1, the nutation and the polar motion.  IAU 2000.\n\nGiven\n\ntta, ttb: TT as a 2-part Julian Date (Note 1)\nuta, utb: UT1 as a 2-part Julian Date (Note 1)\ndpsi, deps: Nutation (Note 2)\nxp, yp: Coordinates of the pole (radians, Note 3)\n\nReturned\n\nrc2t: Celestial-to-terrestrial matrix (Note 4)\n\nNotes\n\nThe TT and UT1 dates tta+ttb and uta+utb are Julian Dates, apportioned in any convenient way between the arguments uta and utb.  For example, JD(UT1)=2450123.7 could be expressed in any of these ways, among others:\n    uta            utb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  In the case of uta,utb, the date & time method is best matched to the Earth rotation angle algorithm used:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nThe caller is responsible for providing the nutation components; they are in longitude and obliquity, in radians and are with respect to the equinox and ecliptic of date.  For high-accuracy applications, free core nutation should be included as well as any other relevant corrections to the position of the CIP.\nThe arguments xp and yp are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions 2003), measured along the meridians to 0 and 90 deg west respectively.\nThe matrix rc2t transforms from celestial to terrestrial coordinates:\n[TRS] = RPOM * R_3(GST) * RBPN * [CRS]\n     = rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), RBPN is the bias-precession-nutation matrix, GST is the Greenwich (apparent) Sidereal Time and RPOM is the polar motion matrix.\nAlthough its name does not include \"00\", This function is in fact specific to the IAU 2000 models.\n\nCalled\n\neraPn00: bias/precession/nutation results, IAU 2000\neraGmst00: Greenwich mean sidereal time, IAU 2000\neraSp00: the TIO locator s\', IERS 2000\neraEe00: equation of the equinoxes, IAU 2000\neraPom00: polar motion matrix\neraC2teqx: form equinox-based celestial-to-terrestrial matrix\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.c2txy",
    "page": "API",
    "title": "ERFA.c2txy",
    "category": "function",
    "text": "c2txy(tta, ttb, uta, utb, x, y, xp, yp)\n\nForm the celestial to terrestrial matrix given the date, the UT1, the CIP coordinates and the polar motion.  IAU 2000.\n\nGiven\n\ntta, ttb: TT as a 2-part Julian Date (Note 1)\nuta, utb: UT1 as a 2-part Julian Date (Note 1)\nx, y: Celestial Intermediate Pole (Note 2)\nxp, yp: Coordinates of the pole (radians, Note 3)\n\nReturned\n\nrc2t: Celestial-to-terrestrial matrix (Note 4)\n\nNotes\n\nThe TT and UT1 dates tta+ttb and uta+utb are Julian Dates, apportioned in any convenient way between the arguments uta and utb.  For example, JD(UT1)=2450123.7 could be expressed in any o these ways, among others:\n    uta            utb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  In the case of uta,utb, the date & time method is best matched to the Earth rotation angle algorithm used:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nThe Celestial Intermediate Pole coordinates are the x,y components of the unit vector in the Geocentric Celestial Reference System.\nThe arguments xp and yp are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions 2003), measured along the meridians to 0 and 90 deg west respectively.\nThe matrix rc2t transforms from celestial to terrestrial coordinates:\n[TRS] = RPOM * R_3(ERA) * RC2I * [CRS]\n     = rc2t * [CRS]\nwhere [CRS] is a vector in the Geocentric Celestial Reference System and [TRS] is a vector in the International Terrestrial Reference System (see IERS Conventions 2003), ERA is the Earth Rotation Angle and RPOM is the polar motion matrix.\nAlthough its name does not include \"00\", This function is in fact specific to the IAU 2000 models.\n\nCalled\n\neraC2ixy: celestial-to-intermediate matrix, given X,Y\neraEra00: Earth rotation angle, IAU 2000\neraSp00: the TIO locator s\', IERS 2000\neraPom00: polar motion matrix\neraC2tcio: form CIO-based celestial-to-terrestrial matrix\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.cal2jd-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.cal2jd",
    "category": "method",
    "text": "cal2jd(iy, imo, id)\n\nGregorian Calendar to Julian Date.\n\nGiven\n\niy, im, id: Year, month, day in Gregorian calendar (Note 1)\n\nReturned\n\ndjm0: MJD zero-point: always 2400000.5\ndjm: Modified Julian Date for 0 hrs\n\nNotes\n\nThe algorithm used is valid from -4800 March 1, but this implementation rejects dates before -4799 January 1.\nThe Julian Date is returned in two pieces, in the usual ERFA manner, which is designed to preserve time resolution.  The Julian Date is available as a single number by adding djm0 and djm.\nIn early eras the conversion is from the \"Proleptic Gregorian Calendar\";  no account is taken of the date(s) of adoption of the Gregorian Calendar, nor is the AD/BC numbering convention observed.\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 12.92 (p604).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.d2dtf-Tuple{AbstractString,Any,Any,Any}",
    "page": "API",
    "title": "ERFA.d2dtf",
    "category": "method",
    "text": "d2dtf(scale, ndp, d1, d2)\n\nFormat for output a 2-part Julian Date (or in the case of UTC a quasi-JD form that includes special provision for leap seconds).\n\nGiven\n\nscale: Time scale ID (Note 1)\nndp: Resolution (Note 2)\nd1, d2: Time as a 2-part Julian Date (Notes 3,4)\n\nReturned\n\niy, im, id: Year, month, day in Gregorian calendar (Note 5)\nihmsf: Hours, minutes, seconds, fraction (Note 1)\n\nNotes\n\nscale identifies the time scale.  Only the value \"UTC\" (in upper case) is significant, and enables handling of leap seconds (see Note 4).\nndp is the number of decimal places in the seconds field, and can have negative as well as positive values, such as:\nndp         resolution -4            1 00 00 -3            0 10 00 -2            0 01 00 -1            0 00 10  0            0 00 01  1            0 00 00.1  2            0 00 00.01  3            0 00 00.001\nThe limits are platform dependent, but a safe range is -5 to +9.\nd1+d2 is Julian Date, apportioned in any convenient way between the two arguments, for example where d1 is the Julian Day Number and d2 is the fraction of a day.  In the case of UTC, where the use of JD is problematical, special conventions apply:  see the next note.\nJD cannot unambiguously represent UTC during a leap second unless special measures are taken.  The ERFA internal convention is that the quasi-JD day represents UTC days whether the length is 86399, 86400 or 86401 SI seconds.  In the 1960-1972 era there were smaller jumps (in either direction) each time the linear UTC(TAI) expression was changed, and these \"mini-leaps\" are also included in the ERFA convention.\nThe warning status \"dubious year\" flags UTCs that predate the introduction of the time scale or that are too far in the future to be trusted.  See eraDat for further details.\nFor calendar conventions and limitations, see eraCal2jd.\n\nCalled\n\neraJd2cal: JD to Gregorian calendar\neraD2tf: decompose days to hms\neraDat: delta(AT) = TAI-UTC\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.d2tf-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.d2tf",
    "category": "method",
    "text": "d2tf(ndp, a)\n\nDecompose days to hours, minutes, seconds, fraction.\n\nGiven\n\nndp: Resolution (Note 1)\ndays: Interval in days\n\nReturned\n\nsign: \'+\' or \'-\'\nihmsf: Hours, minutes, seconds, fraction\n\nNotes\n\nThe argument ndp is interpreted as follows:\nndp         resolution  :      ...0000 00 00 -7         1000 00 00 -6          100 00 00 -5           10 00 00 -4            1 00 00 -3            0 10 00 -2            0 01 00 -1            0 00 10  0            0 00 01  1            0 00 00.1  2            0 00 00.01  3            0 00 00.001  :            0 00 00.000...\nThe largest positive useful value for ndp is determined by the size of days, the format of double on the target platform, and the risk of overflowing ihmsf[3].  On a typical platform, for days up to 1.0, the available floating-point precision might correspond to ndp=12.  However, the practical limit is typically ndp=9, set by the capacity of a 32-bit int, or ndp=4 if int is only 16 bits.\nThe absolute value of days may exceed 1.0.  In cases where it does not, it is up to the caller to test for and handle the case where days is very nearly 1.0 and rounds up to 24 hours, by testing for ihmsf[0]=24 and setting ihmsf[0-3] to zero.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.dat-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.dat",
    "category": "method",
    "text": "dat(iy, im, id, fd)\n\nFor a given UTC date, calculate delta(AT) = TAI-UTC.\n\nwarning: IMPORTANT\nA new version of this function must be produced whenever a new leap second is announced.  There are four items to    change on each such occasion:         A new line must be added to the set  of statements that initialize the    array \"changes\".                   \nThe constant IYV must be set to the  current year.                      \nThe \"Latest leap second\" comment     below must be set to the new leap    second date.                       \nThe \"This revision\" comment, later,  must be set to the current date.   Change (2) must also be carried out    whenever the function is re-issued,    even if no leap seconds have been      added.                                Latest leap second:  2016 December 31 \n\nGiven\n\niy: UTC:  year (Notes 1 and 2)\nim: Month (Note 2)\nid: Day (Notes 2 and 3)\nfd: Fraction of day (Note 4)\n\nReturned\n\ndeltat: TAI minus UTC, seconds\n\nNotes\n\nUTC began at 1960 January 1.0 (JD 2436934.5) and it is improper to call the function with an earlier date.  If this is attempted, zero is returned together with a warning status.\nBecause leap seconds cannot, in principle, be predicted in advance, a reliable check for dates beyond the valid range is impossible.  To guard against gross errors, a year five or more after the release year of the present function (see the constant IYV) is considered dubious.  In this case a warning status is returned but the result is computed in the normal way.\nFor both too-early and too-late years, the warning status is +1. This is distinct from the error status -1, which signifies a year so early that JD could not be computed.\nIf the specified date is for a day which ends with a leap second, the TAI-UTC value returned is for the period leading up to the leap second.  If the date is for a day which begins as a leap second ends, the TAI-UTC returned is for the period following the leap second.\nThe day number must be in the normal calendar range, for example 1 through 30 for April.  The \"almanac\" convention of allowing such dates as January 0 and December 32 is not supported in this function, in order to avoid confusion near leap seconds.\nThe fraction of day is used only for dates before the introduction of leap seconds, the first of which occurred at the end of 1971.  It is tested for validity (0 to 1 is the valid range) even if not used;  if invalid, zero is used and status -4 is returned.  For many applications, setting fd to zero is acceptable;  the resulting error is always less than 3 ms (and occurs only pre-1972).\nThe status value returned in the case where there are multiple errors refers to the first error detected.  For example, if the month and day are 13 and 32 respectively, status -2 (bad month) will be returned.  The \"internal error\" status refers to a case that is impossible but causes some compilers to issue a warning.\nIn cases where a valid result is not available, zero is returned.\n\nReferences\n\nFor dates from 1961 January 1 onwards, the expressions from the\nfile ftp://maia.usno.navy.mil/ser7/tai-utc.dat are used.\nThe 5ms timestep at 1961 January 1 is taken from 2.58.1 (p87) of\nthe 1992 Explanatory Supplement.\n\nCalled\n\neraCal2jd: Gregorian calendar to JD\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.dtdb-NTuple{6,Any}",
    "page": "API",
    "title": "ERFA.dtdb",
    "category": "method",
    "text": "dtdb(date1, date2, ut, elong, u, v)\n\nAn approximation to TDB-TT, the difference between barycentric dynamical time and terrestrial time, for an observer on the Earth.\n\nThe different time scales - proper, coordinate and realized - are related to each other:\n\n      TAI             <-  physically realized\n       :\n    offset            <-  observed (nominally +32.184s)\n       :\n      TT              <-  terrestrial time\n       :\n\nrate adjustment (LG)   <-  definition of TT            :           TCG             <-  time scale for GCRS            :     \"periodic\" terms      <-  eraDtdb  is an implementation            :   rate adjustment (LC)   <-  function of solar-system ephemeris            :           TCB             <-  time scale for BCRS            :   rate adjustment (-L_B)  <-  definition of TDB            :           TDB             <-  TCB scaled to track TT            :     \"periodic\" terms      <-  -eraDtdb is an approximation            :           TT              <-  terrestrial time\n\nAdopted values for the various constants can be found in the IERS Conventions (McCarthy & Petit 2003).\n\nGiven\n\ndate1, date2: Date, TDB (Notes 1-3)\nut: Universal time (UT1, fraction of one day)\nelong: Longitude (east positive, radians)\nu: Distance from Earth spin axis (km)\nv: Distance north of equatorial plane (km)\n\nReturned\n\nTDB-TT (seconds)\n\nNotes\n\nThe date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nAlthough the date is, formally, barycentric dynamical time (TDB), the terrestrial dynamical time (TT) can be used with no practical effect on the accuracy of the prediction.\nTT can be regarded as a coordinate time that is realized as an offset of 32.184s from International Atomic Time, TAI.  TT is a specific linear transformation of geocentric coordinate time TCG, which is the time scale for the Geocentric Celestial Reference System, GCRS.\nTDB is a coordinate time, and is a specific linear transformation of barycentric coordinate time TCB, which is the time scale for the Barycentric Celestial Reference System, BCRS.\nThe difference TCG-TCB depends on the masses and positions of the bodies of the solar system and the velocity of the Earth.  It is dominated by a rate difference, the residual being of a periodic character.  The latter, which is modeled by the present function, comprises a main (annual) sinusoidal term of amplitude approximately 0.00166 seconds, plus planetary terms up to about 20 microseconds, and lunar and diurnal terms up to 2 microseconds. These effects come from the changing transverse Doppler effect and gravitational red-shift as the observer (on the Earth\'s surface) experiences variations in speed (with respect to the BCRS) and gravitational potential.\nTDB can be regarded as the same as TCB but with a rate adjustment to keep it close to TT, which is convenient for many applications. The history of successive attempts to define TDB is set out in Resolution 3 adopted by the IAU General Assembly in 2006, which defines a fixed TDB(TCB) transformation that is consistent with contemporary solar-system ephemerides.  Future ephemerides will imply slightly changed transformations between TCG and TCB, which could introduce a linear drift between TDB and TT;  however, any such drift is unlikely to exceed 1 nanosecond per century.\nThe geocentric TDB-TT model used in the present function is that of Fairhead & Bretagnon (1990), in its full form.  It was originally supplied by Fairhead (private communications with P.T.Wallace,\nas a Fortran subroutine.  The present C function contains an\nadaptation of the Fairhead code.  The numerical results are essentially unaffected by the changes, the differences with respect to the Fairhead & Bretagnon original being at the 1e-20 s level.\nThe topocentric part of the model is from Moyer (1981) and Murray (1983), with fundamental arguments adapted from Simon et al. 1994.  It is an approximation to the expression ( v / c ) . ( r / c ), where v is the barycentric velocity of the Earth, r is the geocentric position of the observer and c is the speed of light.\nBy supplying zeroes for u and v, the topocentric part of the model can be nullified, and the function will return the Fairhead & Bretagnon result alone.\nDuring the interval 1950-2050, the absolute accuracy is better than +/- 3 nanoseconds relative to time ephemerides obtained by direct numerical integrations based on the JPL DE405 solar system ephemeris.\nIt must be stressed that the present function is merely a model, and that numerical integration of solar-system ephemerides is the definitive method for predicting the relationship between TCG and TCB and hence between TT and TDB.\n\nReferences\n\nFairhead, L., & Bretagnon, P., Astron.Astrophys., 229, 240-247   (1990).\nIAU 2006 Resolution 3.\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nMoyer, T.D., Cel.Mech., 23, 33 (1981).\nMurray, C.A., Vectorial Astrometry, Adam Hilger (1983).\nSeidelmann, P.K. et al., Explanatory Supplement to the   Astronomical Almanac, Chapter 2, University Science Books (1992).\nSimon, J.L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G. & Laskar, J., Astron.Astrophys., 282, 663-683 (1994).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.dtf2d-Tuple{AbstractString,Any,Any,Any,Any,Any,Any}",
    "page": "API",
    "title": "ERFA.dtf2d",
    "category": "method",
    "text": "dtf2d(scale, iy, imo, id, ih, imi, sec)\n\nEncode date and time fields into 2-part Julian Date (or in the case of UTC a quasi-JD form that includes special provision for leap seconds).\n\nGiven\n\nscale: Time scale ID (Note 1)\niy, im, id: Year, month, day in Gregorian calendar (Note 2)\nihr, imn: Hour, minute\nsec: Seconds\n\nReturned\n\nd1, d2: 2-part Julian Date (Notes 3,4)\n\nNotes\n\nscale identifies the time scale.  Only the value \"UTC\" (in upper case) is significant, and enables handling of leap seconds (see Note 4).\nFor calendar conventions and limitations, see eraCal2jd.\nThe sum of the results, d1+d2, is Julian Date, where normally d1 is the Julian Day Number and d2 is the fraction of a day.  In the case of UTC, where the use of JD is problematical, special conventions apply:  see the next note.\nJD cannot unambiguously represent UTC during a leap second unless special measures are taken.  The ERFA internal convention is that the quasi-JD day represents UTC days whether the length is 86399, 86400 or 86401 SI seconds.  In the 1960-1972 era there were smaller jumps (in either direction) each time the linear UTC(TAI) expression was changed, and these \"mini-leaps\" are also included in the ERFA convention.\nThe warning status \"time is after end of day\" usually means that the sec argument is greater than 60.0.  However, in a day ending in a leap second the limit changes to 61.0 (or 59.0 in the case of a negative leap second).\nThe warning status \"dubious year\" flags UTCs that predate the introduction of the time scale or that are too far in the future to be trusted.  See eraDat for further details.\nOnly in the case of continuous and regular time scales (TAI, TT, TCG, TCB and TDB) is the result d1+d2 a Julian Date, strictly speaking.  In the other cases (UT1 and UTC) the result must be used with circumspection;  in particular the difference between two such results cannot be interpreted as a precise time interval.\n\nCalled\n\neraCal2jd: Gregorian calendar to JD\neraDat: delta(AT) = TAI-UTC\neraJd2cal: JD to Gregorian calendar\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.eceq06",
    "page": "API",
    "title": "ERFA.eceq06",
    "category": "function",
    "text": "eceq06(date1, date2, dl, db)\n\nTransformation from ecliptic coordinates (mean equinox and ecliptic of date) to ICRS RA,Dec, using the IAU 2006 precession model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian date (Note 1)\ndl, db: Ecliptic longitude and latitude (radians)\n\nReturned\n\ndr, dd: ICRS right ascension and declination (radians)\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nNo assumptions are made about whether the coordinates represent starlight and embody astrometric effects such as parallax or aberration.\nThe transformation is approximately that from ecliptic longitude and latitude (mean equinox and ecliptic of date) to mean J2000.0 right ascension and declination, with only frame bias (always less than 25 mas) to disturb this classical picture.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraEcm06: J2000.0 to ecliptic rotation matrix, IAU 2006\neraTrxp: product of transpose of r-matrix and p-vector\neraC2s: unit vector to spherical coordinates\neraAnp: normalize angle into range 0 to 2pi\neraAnpm: normalize angle into range +/- pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ecm06-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.ecm06",
    "category": "method",
    "text": "ecm06(date1, date2)\n\nICRS equatorial to ecliptic rotation matrix, IAU 2006.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian date (Note 1)\n\nReturned\n\nrm: ICRS to ecliptic rotation matrix\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix is in the sense\nEep = rm x PICRS,\nwhere PICRS is a vector with respect to ICRS right ascension and declination axes and Eep is the same vector with respect to the (inertial) ecliptic and equinox of date.\nP_ICRS is a free vector, merely a direction, typically of unit magnitude, and not bound to any particular spatial origin, such as the Earth, Sun or SSB.  No assumptions are made about whether it represents starlight and embodies astrometric effects such as parallax or aberration.  The transformation is approximately that between mean J2000.0 right ascension and declination and ecliptic longitude and latitude, with only frame bias (always less than 25 mas) to disturb this classical picture.\n\nCalled\n\neraObl06: mean obliquity, IAU 2006\neraPmat06: PB matrix, IAU 2006\neraIr: initialize r-matrix to identity\neraRx: rotate around X-axis\neraRxr: product of two r-matrices\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ee00-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.ee00",
    "category": "method",
    "text": "ee00(date1, date2, epsa, dpsi)\n\nThe equation of the equinoxes, compatible with IAU 2000 resolutions, given the nutation in longitude and the mean obliquity.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\nepsa: Mean obliquity (Note 2)\ndpsi: Nutation in longitude (Note 3)\n\nReturned\n\nEquation of the equinoxes (Note 4)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe obliquity, in radians, is mean of date.\nThe result, which is in radians, operates in the following sense:\nGreenwich apparent ST = GMST + equation of the equinoxes\nThe result is compatible with the IAU 2000 resolutions.  For further details, see IERS Conventions 2003 and Capitaine et al. (2002).\n\nCalled\n\neraEect00: equation of the equinoxes complementary terms\n\nReferences\n\nCapitaine, N., Wallace, P.T. and McCarthy, D.D., \"Expressions to   implement the IAU 2000 definition of UT1\", Astronomy &   Astrophysics, 406, 1135-1149 (2003)\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ee00a",
    "page": "API",
    "title": "ERFA.ee00a",
    "category": "function",
    "text": "ee00a(dj1, dj2)\n\nEquation of the equinoxes, compatible with IAU 2000 resolutions.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nEquation of the equinoxes (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe result, which is in radians, operates in the following sense:\nGreenwich apparent ST = GMST + equation of the equinoxes\nThe result is compatible with the IAU 2000 resolutions.  For further details, see IERS Conventions 2003 and Capitaine et al. (2002).\n\nCalled\n\neraPr00: IAU 2000 precession adjustments\neraObl80: mean obliquity, IAU 1980\neraNut00a: nutation, IAU 2000A\neraEe00: equation of the equinoxes, IAU 2000\n\nReferences\n\nCapitaine, N., Wallace, P.T. and McCarthy, D.D., \"Expressions to   implement the IAU 2000 definition of UT1\", Astronomy &   Astrophysics, 406, 1135-1149 (2003).\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ee00b",
    "page": "API",
    "title": "ERFA.ee00b",
    "category": "function",
    "text": "ee00b(dj1, dj2)\n\nEquation of the equinoxes, compatible with IAU 2000 resolutions but using the truncated nutation model IAU 2000B.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nEquation of the equinoxes (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe result, which is in radians, operates in the following sense:\nGreenwich apparent ST = GMST + equation of the equinoxes\nThe result is compatible with the IAU 2000 resolutions except that accuracy has been compromised for the sake of speed.  For further details, see McCarthy & Luzum (2001), IERS Conventions 2003 and Capitaine et al. (2003).\n\nCalled\n\neraPr00: IAU 2000 precession adjustments\neraObl80: mean obliquity, IAU 1980\neraNut00b: nutation, IAU 2000B\neraEe00: equation of the equinoxes, IAU 2000\n\nReferences\n\nCapitaine, N., Wallace, P.T. and McCarthy, D.D., \"Expressions to   implement the IAU 2000 definition of UT1\", Astronomy &   Astrophysics, 406, 1135-1149 (2003)\nMcCarthy, D.D. & Luzum, B.J., \"An abridged model of the   precession-nutation of the celestial pole\", Celestial Mechanics &   Dynamical Astronomy, 85, 37-49 (2003)\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ee06a",
    "page": "API",
    "title": "ERFA.ee06a",
    "category": "function",
    "text": "ee06a(dj1, dj2)\n\nEquation of the equinoxes, compatible with IAU 2000 resolutions and IAU 2006/2000A precession-nutation.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nEquation of the equinoxes (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe result, which is in radians, operates in the following sense:\nGreenwich apparent ST = GMST + equation of the equinoxes\n\nCalled\n\neraAnpm: normalize angle into range +/- pi\neraGst06a: Greenwich apparent sidereal time, IAU 2006/2000A\neraGmst06: Greenwich mean sidereal time, IAU 2006\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), 2004, IERS Conventions (2003),   IERS Technical Note No. 32, BKG\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.eect00",
    "page": "API",
    "title": "ERFA.eect00",
    "category": "function",
    "text": "eect00(date1, date2)\n\nEquation of the equinoxes complementary terms, consistent with IAU 2000 resolutions.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nComplementary terms (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe \"complementary terms\" are part of the equation of the equinoxes (EE), classically the difference between apparent and mean Sidereal Time:\nGAST = GMST + EE\nwith:\nEE = dpsi * cos(eps)\nwhere dpsi is the nutation in longitude and eps is the obliquity of date.  However, if the rotation of the Earth were constant in an inertial frame the classical formulation would lead to apparent irregularities in the UT1 timescale traceable to side- effects of precession-nutation.  In order to eliminate these effects from UT1, \"complementary terms\" were introduced in 1994 (IAU, 1994) and took effect from 1997 (Capitaine and Gontier, 1993):\nGAST = GMST + CT + EE\nBy convention, the complementary terms are included as part of the equation of the equinoxes rather than as part of the mean Sidereal Time.  This slightly compromises the \"geometrical\" interpretation of mean sidereal time but is otherwise inconsequential.\nThe present function computes CT in the above expression, compatible with IAU 2000 resolutions (Capitaine et al., 2002, and IERS Conventions 2003).\n\nCalled\n\neraFal03: mean anomaly of the Moon\neraFalp03: mean anomaly of the Sun\neraFaf03: mean argument of the latitude of the Moon\neraFad03: mean elongation of the Moon from the Sun\neraFaom03: mean longitude of the Moon\'s ascending node\neraFave03: mean longitude of Venus\neraFae03: mean longitude of Earth\neraFapa03: general accumulated precession in longitude\n\nReferences\n\nCapitaine, N. & Gontier, A.-M., Astron. Astrophys., 275,   645-650 (1993)\nCapitaine, N., Wallace, P.T. and McCarthy, D.D., \"Expressions to   implement the IAU 2000 definition of UT1\", Astronomy &   Astrophysics, 406, 1135-1149 (2003)\nIAU Resolution C7, Recommendation 3 (1994)\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.eform-Tuple{ERFA.Ellipsoid}",
    "page": "API",
    "title": "ERFA.eform",
    "category": "method",
    "text": "eform(n::Ellipsoid)\n\nEarth reference ellipsoids.\n\nGiven\n\nn: Ellipsoid identifier (Note 1)\n\nReturned\n\na: Equatorial radius (meters, Note 2)\nf: Flattening (Note 2)\n\nNotes\n\nThe identifier n is a number that specifies the choice of reference ellipsoid.  The following are supported:\n - `WGS84`\n - `GRS80`\n - `WGS72`\nThe ellipsoid parameters are returned in the form of equatorial radius in meters (a) and flattening (f).  The latter is a number around 0.00335, i.e. around 1/298.\nFor the case where an unsupported n value is supplied, zero a and f are returned, as well as error status.\n\nReferences\n\nDepartment of Defense World Geodetic System 1984, National   Imagery and Mapping Agency Technical Report 8350.2, Third   Edition, p3-2.\nMoritz, H., Bull. Geodesique 66-2, 187 (1992).\nThe Department of Defense World Geodetic System 1972, World   Geodetic System Committee, May 1974.\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   p220.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.eo06a",
    "page": "API",
    "title": "ERFA.eo06a",
    "category": "function",
    "text": "eo06a(date1, date2)\n\nEquation of the origins, IAU 2006 precession and IAU 2000A nutation.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nEquation of the origins in radians\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe equation of the origins is the distance between the true equinox and the celestial intermediate origin and, equivalently, the difference between Earth rotation angle and Greenwich apparent sidereal time (ERA-GST).  It comprises the precession (since J2000.0) in right ascension plus the equation of the equinoxes (including the small correction terms).\n\nCalled\n\neraPnm06a: classical NPB matrix, IAU 2006/2000A\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS06: the CIO locator s, given X,Y, IAU 2006\neraEors: equation of the origins, given NPB matrix and s\n\nReferences\n\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.eors-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.eors",
    "category": "method",
    "text": "eors(rnpb, s)\n\nEquation of the origins, given the classical NPB matrix and the quantity s.\n\nGiven\n\nrnpb: Classical nutation x precession x bias matrix\ns: The quantity s (the CIO locator)\n\nReturned\n\nThe equation of the origins in radians.\n\nNotes\n\nThe equation of the origins is the distance between the true  equinox and the celestial intermediate origin and, equivalently,  the difference between Earth rotation angle and Greenwich  apparent sidereal time (ERA-GST).  It comprises the precession  (since J2000.0) in right ascension plus the equation of the  equinoxes (including the small correction terms).\nThe algorithm is from Wallace & Capitaine (2006).\n\nReferences\n\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\nWallace, P. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.epb",
    "page": "API",
    "title": "ERFA.epb",
    "category": "function",
    "text": "epb(dj1, dj2)\n\nJulian Date to Besselian Epoch.\n\nGiven\n\ndj1, dj2: Julian Date (see note)\n\nReturned\n\nBesselian Epoch.\n\nNote\n\nThe Julian Date is supplied in two pieces, in the usual ERFA    manner, which is designed to preserve time resolution.  The    Julian Date is available as a single number by adding dj1 and    dj2.  The maximum resolution is achieved if dj1 is 2451545.0    (J2000.0).\n\nReference\n\nLieske, J.H., 1979. Astron.Astrophys., 73, 282.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.epb2jd",
    "page": "API",
    "title": "ERFA.epb2jd",
    "category": "function",
    "text": "epb2jd(epj)\n\nBesselian Epoch to Julian Date.\n\nGiven\n\nepb: Besselian Epoch (e.g. 1957.3)\n\nReturned\n\ndjm0: MJD zero-point: always 2400000.5\ndjm: Modified Julian Date\n\nNote\n\nThe Julian Date is returned in two pieces, in the usual ERFA    manner, which is designed to preserve time resolution.  The    Julian Date is available as a single number by adding djm0 and    djm.\n\nReference\n\nLieske, J.H., 1979, Astron.Astrophys. 73, 282.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.epj",
    "page": "API",
    "title": "ERFA.epj",
    "category": "function",
    "text": "epj(dj1, dj2)\n\nJulian Date to Julian Epoch.\n\nGiven\n\ndj1, dj2: Julian Date (see note)\n\nReturned\n\nJulian Epoch\n\nNote\n\nThe Julian Date is supplied in two pieces, in the usual ERFA    manner, which is designed to preserve time resolution.  The    Julian Date is available as a single number by adding dj1 and    dj2.  The maximum resolution is achieved if dj1 is 2451545.0    (J2000.0).\n\nReference\n\nLieske, J.H., 1979, Astron.Astrophys. 73, 282.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.epj2jd",
    "page": "API",
    "title": "ERFA.epj2jd",
    "category": "function",
    "text": "epj2jd(epj)\n\nJulian Epoch to Julian Date.\n\nGiven\n\nepj: Julian Epoch (e.g. 1996.8)\n\nReturned\n\ndjm0: MJD zero-point: always 2400000.5\ndjm: Modified Julian Date\n\nNote\n\nThe Julian Date is returned in two pieces, in the usual ERFA    manner, which is designed to preserve time resolution.  The    Julian Date is available as a single number by adding djm0 and    djm.\n\nReference\n\nLieske, J.H., 1979, Astron.Astrophys. 73, 282.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.epv00-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.epv00",
    "category": "method",
    "text": "epv00(date1, date2)\n\nEarth position and velocity, heliocentric and barycentric, with respect to the Barycentric Celestial Reference System.\n\nGiven\n\ndate1, date2: TDB date (Note 1)\n\nReturned\n\npvh: Heliocentric Earth position/velocity\npvb: Barycentric Earth position/velocity\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  However, the accuracy of the result is more likely to be limited by the algorithm itself than the way the date has been expressed.\nn.b. TT can be used instead of TDB in most applications.\nOn return, the arrays pvh and pvb contain the following:\npvh[0][0]  x       }    pvh[0][1]  y       } heliocentric position, au    pvh[0][2]  z       }\npvh[1][0]  xdot    }    pvh[1][1]  ydot    } heliocentric velocity, au/d    pvh[1][2]  zdot    }\npvb[0][0]  x       }    pvb[0][1]  y       } barycentric position, au    pvb[0][2]  z       }\npvb[1][0]  xdot    }    pvb[1][1]  ydot    } barycentric velocity, au/d    pvb[1][2]  zdot    }\nThe vectors are with respect to the Barycentric Celestial Reference System.  The time unit is one day in TDB.\nThe function is a SIMPLIFIED SOLUTION from the planetary theory VSOP2000 (X. Moisson, P. Bretagnon, 2001, Celes. Mechanics & Dyn. Astron., 80, 3/4, 205-213) and is an adaptation of original Fortran code supplied by P. Bretagnon (private comm., 2000).\nComparisons over the time span 1900-2100 with this simplified solution and the JPL DE405 ephemeris give the following results:\n                       RMS    max\n  Heliocentric:\n     position error    3.7   11.2   km\n     velocity error    1.4    5.0   mm/s\n\n  Barycentric:\n     position error    4.6   13.4   km\n     velocity error    1.4    4.9   mm/s\nComparisons with the JPL DE406 ephemeris show that by 1800 and 2200 the position errors are approximately double their 1900-2100 size.  By 1500 and 2500 the deterioration is a factor of 10 and by 1000 and 3000 a factor of 60.  The velocity accuracy falls off at about half that rate.\nIt is permissible to use the same array for pvh and pvb, which will receive the barycentric values.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.eqec06",
    "page": "API",
    "title": "ERFA.eqec06",
    "category": "function",
    "text": "eqec06(date1, date2, dr, dd)\n\nTransformation from ICRS equatorial coordinates to ecliptic coordinates (mean equinox and ecliptic of date) using IAU 2006 precession model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian date (Note 1)\ndr, dd: ICRS right ascension and declination (radians)\n\nReturned\n\ndl, db: Ecliptic longitude and latitude (radians)\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nNo assumptions are made about whether the coordinates represent starlight and embody astrometric effects such as parallax or aberration.\nThe transformation is approximately that from mean J2000.0 right ascension and declination to ecliptic longitude and latitude (mean equinox and ecliptic of date), with only frame bias (always less than 25 mas) to disturb this classical picture.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraEcm06: J2000.0 to ecliptic rotation matrix, IAU 2006\neraRxp: product of r-matrix and p-vector\neraC2s: unit vector to spherical coordinates\neraAnp: normalize angle into range 0 to 2pi\neraAnpm: normalize angle into range +/- pi\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.eqeq94",
    "page": "API",
    "title": "ERFA.eqeq94",
    "category": "function",
    "text": "eqeq94(date1, date2)\n\nEquation of the equinoxes, IAU 1994 model.\n\nGiven\n\ndate1, date2: TDB date (Note 1)\n\nReturned\n\nEquation of the equinoxes (Note 2)\n\nNotes\n\nThe date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe result, which is in radians, operates in the following sense:\nGreenwich apparent ST = GMST + equation of the equinoxes\n\nCalled\n\neraAnpm: normalize angle into range +/- pi\neraNut80: nutation, IAU 1980\neraObl80: mean obliquity, IAU 1980\n\nReferences\n\nIAU Resolution C7, Recommendation 3 (1994).\nCapitaine, N. & Gontier, A.-M., 1993, Astron. Astrophys., 275,   645-650.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.era00",
    "page": "API",
    "title": "ERFA.era00",
    "category": "function",
    "text": "era00(dj1, dj2)\n\nEarth rotation angle (IAU 2000 model).\n\nGiven\n\ndj1, dj2: UT1 as a 2-part Julian Date (see note)\n\nReturned\n\nEarth rotation angle (radians), range 0-2pi\n\nNotes\n\nThe UT1 date dj1+dj2 is a Julian Date, apportioned in any convenient way between the arguments dj1 and dj2.  For example, JD(UT1)=2450123.7 could be expressed in any of these ways, among others:\n    dj1            dj2\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  The date & time method is best matched to the algorithm used:  maximum precision is delivered when the dj1 argument is for 0hrs UT1 on the day in question and the dj2 argument lies in the range 0 to 1, or vice versa.\nThe algorithm is adapted from Expression 22 of Capitaine et al.\nThe time argument has been expressed in days directly,\nand, to retain precision, integer contributions have been eliminated.  The same formulation is given in IERS Conventions (2003), Chap. 5, Eq. 14.\n\nCalled\n\neraAnp: normalize angle into range 0 to 2pi\n\nReferences\n\nCapitaine N., Guinot B. and McCarthy D.D, 2000, Astron.   Astrophys., 355, 398-405.\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fad03",
    "page": "API",
    "title": "ERFA.fad03",
    "category": "function",
    "text": "fad03(t)\n\nFundamental argument, IERS Conventions (2003):\n\nmean elongation of the Moon from the Sun.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nD, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and is from Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fae03",
    "page": "API",
    "title": "ERFA.fae03",
    "category": "function",
    "text": "fae03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of Earth.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nMean longitude of Earth, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and comes from Souchay et al. (1999) after Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M. 1999,   Astron.Astrophys.Supp.Ser. 135, 111\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.faf03",
    "page": "API",
    "title": "ERFA.faf03",
    "category": "function",
    "text": "faf03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of the Moon minus mean longitude of the ascending node.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nF, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and is from Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.faju03",
    "page": "API",
    "title": "ERFA.faju03",
    "category": "function",
    "text": "faju03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of Jupiter.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nMean longitude of Jupiter, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and comes from Souchay et al. (1999) after Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M. 1999,   Astron.Astrophys.Supp.Ser. 135, 111\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fal03",
    "page": "API",
    "title": "ERFA.fal03",
    "category": "function",
    "text": "fal03(t)\n\nFundamental argument, IERS Conventions (2003):\n\nmean anomaly of the Moon.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nl, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and is from Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.falp03",
    "page": "API",
    "title": "ERFA.falp03",
    "category": "function",
    "text": "falp03(t)\n\nFundamental argument, IERS Conventions (2003):\n\nmean anomaly of the Sun.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nl\', radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and is from Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fama03",
    "page": "API",
    "title": "ERFA.fama03",
    "category": "function",
    "text": "fama03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of Mars.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nMean longitude of Mars, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and comes from Souchay et al. (1999) after Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M. 1999,   Astron.Astrophys.Supp.Ser. 135, 111\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fame03",
    "page": "API",
    "title": "ERFA.fame03",
    "category": "function",
    "text": "fame03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of Mercury.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nMean longitude of Mercury, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and comes from Souchay et al. (1999) after Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M. 1999,   Astron.Astrophys.Supp.Ser. 135, 111\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fane03",
    "page": "API",
    "title": "ERFA.fane03",
    "category": "function",
    "text": "fane03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of Neptune.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nMean longitude of Neptune, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and is adapted from Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.faom03",
    "page": "API",
    "title": "ERFA.faom03",
    "category": "function",
    "text": "faom03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of the Moon\'s ascending node.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nOmega, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and is from Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fapa03",
    "page": "API",
    "title": "ERFA.fapa03",
    "category": "function",
    "text": "fapa03(t)\n\nFundamental argument, IERS Conventions (2003):\n\ngeneral accumulated precession in longitude.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nGeneral precession in longitude, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003).  It is taken from Kinoshita & Souchay (1990) and comes originally from Lieske et al. (1977).\n\nReferences\n\nKinoshita, H. and Souchay J. 1990, Celest.Mech. and Dyn.Astron.   48, 187\nLieske, J.H., Lederle, T., Fricke, W. & Morando, B. 1977,   Astron.Astrophys. 58, 1-16\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fasa03",
    "page": "API",
    "title": "ERFA.fasa03",
    "category": "function",
    "text": "fasa03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of Saturn.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nMean longitude of Saturn, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and comes from Souchay et al. (1999) after Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M. 1999,   Astron.Astrophys.Supp.Ser. 135, 111\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.faur03",
    "page": "API",
    "title": "ERFA.faur03",
    "category": "function",
    "text": "faur03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of Uranus.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nMean longitude of Uranus, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and is adapted from Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fave03",
    "page": "API",
    "title": "ERFA.fave03",
    "category": "function",
    "text": "fave03(t)\n\nFundamental argument, IERS Conventions (2003): Mean longitude of Venus.\n\nGiven\n\nt: TDB, Julian centuries since J2000.0 (Note 1)\n\nReturned\n\nMean longitude of Venus, radians (Note 2)\n\nNotes\n\nThough t is strictly TDB, it is usually more convenient to use TT, which makes no significant difference.\nThe expression used is as adopted in IERS Conventions (2003) and comes from Souchay et al. (1999) after Simon et al. (1994).\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M. 1999,   Astron.Astrophys.Supp.Ser. 135, 111\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fk52h-NTuple{6,Any}",
    "page": "API",
    "title": "ERFA.fk52h",
    "category": "method",
    "text": "fk52h(ra, dec, dra, ddec, px, rv)\n\nTransform FK5 (J2000.0) star data into the Hipparcos system.\n\nGiven (all FK5, equinox J2000.0, epoch J2000.0)\n\nr5: RA (radians)\nd5: Dec (radians)\ndr5: Proper motion in RA (dRA/dt, rad/Jyear)\ndd5: Proper motion in Dec (dDec/dt, rad/Jyear)\npx5: Parallax (arcsec)\nrv5: Radial velocity (km/s, positive = receding)\n\nReturned (all Hipparcos, epoch J2000.0)\n\nrh: RA (radians)\ndh: Dec (radians)\ndrh: proper motion in RA (dRA/dt, rad/Jyear)\nddh: proper motion in Dec (dDec/dt, rad/Jyear)\npxh: parallax (arcsec)\nrvh: radial velocity (km/s, positive = receding)\n\nNotes\n\nThis function transforms FK5 star positions and proper motions into the system of the Hipparcos catalog.\nThe proper motions in RA are dRA/dt rather than cos(Dec)*dRA/dt, and are per year rather than per century.\nThe FK5 to Hipparcos transformation is modeled as a pure rotation and spin;  zonal errors in the FK5 catalog are not taken into account.\nSee also eraH2fk5, eraFk5hz, eraHfk5z.\n\nCalled\n\neraStarpv: star catalog data to space motion pv-vector\neraFk5hip: FK5 to Hipparcos rotation and spin\neraRxp: product of r-matrix and p-vector\neraPxp: vector product of two p-vectors\neraPpp: p-vector plus p-vector\neraPvstar: space motion pv-vector to star catalog data\n\nReference\n\nF.Mignard & M.Froeschle, Astron. Astrophys. 354, 732-739 (2000).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fk5hip-Tuple{}",
    "page": "API",
    "title": "ERFA.fk5hip",
    "category": "method",
    "text": "fk5hip()\n\nFK5 to Hipparcos rotation and spin.\n\nReturned\n\nr5h: R-matrix: FK5 rotation wrt Hipparcos (Note 2)\ns5h: R-vector: FK5 spin wrt Hipparcos (Note 3)\n\nNotes\n\nThis function models the FK5 to Hipparcos transformation as a pure rotation and spin;  zonal errors in the FK5 catalogue are not taken into account.\nThe r-matrix r5h operates in the sense:\n  P_Hipparcos = r5h x P_FK5\nwhere PFK5 is a p-vector in the FK5 frame, and PHipparcos is the equivalent Hipparcos p-vector.\nThe r-vector s5h represents the time derivative of the FK5 to Hipparcos rotation.  The units are radians per year (Julian, TDB).\n\nCalled\n\neraRv2m: r-vector to r-matrix\n\nReference\n\nF.Mignard & M.Froeschle, Astron. Astrophys. 354, 732-739 (2000).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fk5hz-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.fk5hz",
    "category": "method",
    "text": "fk5hz(r5, d5, date1, date2)\n\nTransform an FK5 (J2000.0) star position into the system of the Hipparcos catalogue, assuming zero Hipparcos proper motion.\n\nGiven\n\nr5: FK5 RA (radians), equinox J2000.0, at date\nd5: FK5 Dec (radians), equinox J2000.0, at date\ndate1, date2: TDB date (Notes 1,2)\n\nReturned\n\nrh: Hipparcos RA (radians)\ndh: Hipparcos Dec (radians)\n\nNotes\n\nThis function converts a star position from the FK5 system to the Hipparcos system, in such a way that the Hipparcos proper motion is zero.  Because such a star has, in general, a non-zero proper motion in the FK5 system, the function requires the date at which the position in the FK5 system was determined.\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe FK5 to Hipparcos transformation is modeled as a pure rotation and spin;  zonal errors in the FK5 catalogue are not taken into account.\nThe position returned by this function is in the Hipparcos reference system but at date date1+date2.\nSee also eraFk52h, eraH2fk5, eraHfk5z.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraFk5hip: FK5 to Hipparcos rotation and spin\neraSxp: multiply p-vector by scalar\neraRv2m: r-vector to r-matrix\neraTrxp: product of transpose of r-matrix and p-vector\neraPxp: vector product of two p-vectors\neraC2s: p-vector to spherical\neraAnp: normalize angle into range 0 to 2pi\n\nReference\n\nF.Mignard & M.Froeschle, 2000, Astron.Astrophys. 354, 732-739.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fw2m-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.fw2m",
    "category": "method",
    "text": "fw2m(x, y, s, t)\n\nForm rotation matrix given the Fukushima-Williams angles.\n\nGiven\n\ngamb: F-W angle gamma_bar (radians)\nphib: F-W angle phi_bar (radians)\npsi: F-W angle psi (radians)\neps: F-W angle epsilon (radians)\n\nReturned\n\nr: Rotation matrix\n\nNotes\n\nNaming the following points:\n  e = J2000.0 ecliptic pole,\n  p = GCRS pole,\n  E = ecliptic pole of date,\nand   P = CIP,\nthe four Fukushima-Williams angles are as follows:\ngamb = gamma = epE    phib = phi = pE    psi = psi = pEP    eps = epsilon = EP\nThe matrix representing the combined effects of frame bias, precession and nutation is:\nNxPxB = R1(-eps).R3(-psi).R1(phib).R3(gamb)\nThree different matrices can be constructed, depending on the supplied angles:\no  To obtain the nutation x precession x frame bias matrix,    generate the four precession angles, generate the nutation    components and add them to the psibar and epsilonA angles,    and call the present function.\no  To obtain the precession x frame bias matrix, generate the    four precession angles and call the present function.\no  To obtain the frame bias matrix, generate the four precession    angles for date J2000.0 and call the present function.\nThe nutation-only and precession-only matrices can if necessary be obtained by combining these three appropriately.\n\nCalled\n\neraIr: initialize r-matrix to identity\neraRz: rotate around Z-axis\neraRx: rotate around X-axis\n\nReference\n\nHilton, J. et al., 2006, Celest.Mech.Dyn.Astron. 94, 351\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.fw2xy-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.fw2xy",
    "category": "method",
    "text": "fw2xy(gamb, phib, psi, eps)\n\nCIP X,Y given Fukushima-Williams bias-precession-nutation angles.\n\nGiven\n\ngamb: F-W angle gamma_bar (radians)\nphib: F-W angle phi_bar (radians)\npsi: F-W angle psi (radians)\neps: F-W angle epsilon (radians)\n\nReturned\n\nx, y: CIP unit vector X,Y\n\nNotes\n\nNaming the following points:\n  e = J2000.0 ecliptic pole,\n  p = GCRS pole\n  E = ecliptic pole of date,\nand   P = CIP,\nthe four Fukushima-Williams angles are as follows:\ngamb = gamma = epE    phib = phi = pE    psi = psi = pEP    eps = epsilon = EP\nThe matrix representing the combined effects of frame bias, precession and nutation is:\nNxPxB = R1(-epsA).R3(-psi).R1(phib).R3(gamb)\nThe returned values x,y are elements [2][0] and [2][1] of the matrix.  Near J2000.0, they are essentially angles in radians.\n\nCalled\n\neraFw2m: F-W angles to r-matrix\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\n\nReference\n\nHilton, J. et al., 2006, Celest.Mech.Dyn.Astron. 94, 351\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.g2icrs-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.g2icrs",
    "category": "method",
    "text": "g2icrs(dl, db)\n\nTransformation from Galactic Coordinates to ICRS.\n\nGiven\n\ndl: Galactic longitude (radians)\ndb: Galactic latitude (radians)\n\nReturned\n\ndr: ICRS right ascension (radians)\ndd: ICRS declination (radians)\n\nNotes\n\nThe IAU 1958 system of Galactic coordinates was defined with respect to the now obsolete reference system FK4 B1950.0.  When interpreting the system in a modern context, several factors have to be taken into account:\n. The inclusion in FK4 positions of the E-terms of aberration.\n. The distortion of the FK4 proper motion system by differential   Galactic rotation.\n. The use of the B1950.0 equinox rather than the now-standard   J2000.0.\n. The frame bias between ICRS and the J2000.0 mean place system.\nThe Hipparcos Catalogue (Perryman & ESA 1997) provides a rotation matrix that transforms directly between ICRS and Galactic coordinates with the above factors taken into account.  The matrix is derived from three angles, namely the ICRS coordinates of the Galactic pole and the longitude of the ascending node of the galactic equator on the ICRS equator.  They are given in degrees to five decimal places and for canonical purposes are regarded as exact.  In the Hipparcos Catalogue the matrix elements are given to 10 decimal places (about 20 microarcsec). In the present ERFA function the matrix elements have been recomputed from the canonical three angles and are given to 30 decimal places.\nThe inverse transformation is performed by the function eraIcrs2g.\n\nCalled\n\neraAnp: normalize angle into range 0 to 2pi\neraAnpm: normalize angle into range +/- pi\neraS2c: spherical coordinates to unit vector\neraTrxp: product of transpose of r-matrix and p-vector\neraC2s: p-vector to spherical\n\nReference\n\nPerryman M.A.C. & ESA, 1997, ESA SP-1200, The Hipparcos and Tycho   catalogues.  Astrometric and photometric star catalogues   derived from the ESA Hipparcos Space Astrometry Mission.  ESA   Publications Division, Noordwijk, Netherlands.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gc2gd-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.gc2gd",
    "category": "method",
    "text": "gc2gd(n, xyz)\n\nTransform geocentric coordinates to geodetic using the specified reference ellipsoid.\n\nGiven\n\nn: Ellipsoid identifier (Note 1)\nxyz: Geocentric vector (Note 2)\n\nReturned\n\nelong: Longitude (radians, east +ve, Note 3)\nphi: Latitude (geodetic, radians, Note 3)\nheight: Height above ellipsoid (geodetic, Notes 2,3)\n\nNotes\n\nThe identifier n is a number that specifies the choice of reference ellipsoid.  The following are supported:\n - `WGS84`\n - `GRS80`\n - `WGS72`\nThe geocentric vector (xyz, given) and height (height, returned) are in meters.\nAn error status -1 means that the identifier n is illegal.  An error status -2 is theoretically impossible.  In all error cases, all three results are set to -1e9.\nThe inverse transformation is performed in the function eraGd2gc.\n\nCalled\n\neraEform: Earth reference ellipsoids\neraGc2gde: geocentric to geodetic transformation, general\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gc2gde-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.gc2gde",
    "category": "method",
    "text": "gc2gde(a, f, xyz)\n\nTransform geocentric coordinates to geodetic for a reference ellipsoid of specified form.\n\nGiven\n\na: Equatorial radius (Notes 2,4)\nf: Flattening (Note 3)\nxyz: Geocentric vector (Note 4)\n\nReturned\n\nelong: Longitude (radians, east +ve)\nphi: Latitude (geodetic, radians)\nheight: Height above ellipsoid (geodetic, Note 4)\n\nNotes\n\nThis function is based on the GCONV2H Fortran subroutine by Toshio Fukushima (see reference).\nThe equatorial radius, a, can be in any units, but meters is the conventional choice.\nThe flattening, f, is (for the Earth) a value around 0.00335, i.e. around 1/298.\nThe equatorial radius, a, and the geocentric vector, xyz, must be given in the same units, and determine the units of the returned height, height.\nIf an error occurs (status < 0), elong, phi and height are unchanged.\nThe inverse transformation is performed in the function eraGd2gce.\nThe transformation for a standard ellipsoid (such as ERFA_WGS84) can more conveniently be performed by calling eraGc2gd, which uses a numerical code to identify the required A and F values.\n\nReference\n\nFukushima, T., \"Transformation from Cartesian to geodetic   coordinates accelerated by Halley\'s method\", J.Geodesy (2006)   79: 689-693\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gd2gc-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.gd2gc",
    "category": "method",
    "text": "gd2gc(n, elong, phi, height)\n\nTransform geodetic coordinates to geocentric using the specified reference ellipsoid.\n\nGiven\n\nn: Ellipsoid identifier (Note 1)\nelong: Longitude (radians, east +ve)\nphi: Latitude (geodetic, radians, Note 3)\nheight: Height above ellipsoid (geodetic, Notes 2,3)\n\nReturned\n\nxyz: Geocentric vector (Note 2)\n\nNotes\n\nThe identifier n is a number that specifies the choice of reference ellipsoid.  The following are supported:\nn    ellipsoid\n1     ERFAWGS84    2     ERFAGRS80    3     ERFA_WGS72\nThe n value has no significance outside the ERFA software.  For convenience, symbols ERFA_WGS84 etc. are defined in erfam.h.\nThe height (height, given) and the geocentric vector (xyz, returned) are in meters.\nNo validation is performed on the arguments elong, phi and height.  An error status -1 means that the identifier n is illegal.  An error status -2 protects against cases that would lead to arithmetic exceptions.  In all error cases, xyz is set to zeros.\nThe inverse transformation is performed in the function eraGc2gd.\n\nCalled\n\neraEform: Earth reference ellipsoids\neraGd2gce: geodetic to geocentric transformation, general\neraZp: zero p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gd2gce-NTuple{5,Any}",
    "page": "API",
    "title": "ERFA.gd2gce",
    "category": "method",
    "text": "gd2gce(a, f, elong, phi, height)\n\nTransform geodetic coordinates to geocentric for a reference ellipsoid of specified form.\n\nGiven\n\na: Equatorial radius (Notes 1,4)\nf: Flattening (Notes 2,4)\nelong: Longitude (radians, east +ve)\nphi: Latitude (geodetic, radians, Note 4)\nheight: Height above ellipsoid (geodetic, Notes 3,4)\n\nReturned\n\nxyz: Geocentric vector (Note 3)\n\nNotes\n\nThe equatorial radius, a, can be in any units, but meters is the conventional choice.\nThe flattening, f, is (for the Earth) a value around 0.00335, i.e. around 1/298.\nThe equatorial radius, a, and the height, height, must be given in the same units, and determine the units of the returned geocentric vector, xyz.\nNo validation is performed on individual arguments.  The error status -1 protects against (unrealistic) cases that would lead to arithmetic exceptions.  If an error occurs, xyz is unchanged.\nThe inverse transformation is performed in the function eraGc2gde.\nThe transformation for a standard ellipsoid (such as ERFA_WGS84) can more conveniently be performed by calling eraGd2gc,  which uses a numerical code to identify the required a and f values.\n\nReferences\n\nGreen, R.M., Spherical Astronomy, Cambridge University Press,   (1985) Section 4.5, p96.\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 4.22, p202.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gmst00",
    "page": "API",
    "title": "ERFA.gmst00",
    "category": "function",
    "text": "gmst00(uta, utb, tta, ttb)\n\nGreenwich mean sidereal time (model consistent with IAU 2000 resolutions).\n\nGiven\n\nuta, utb: UT1 as a 2-part Julian Date (Notes 1,2)\ntta, ttb: TT as a 2-part Julian Date (Notes 1,2)\n\nReturned\n\nGreenwich mean sidereal time (radians)\n\nNotes\n\nThe UT1 and TT dates uta+utb and tta+ttb respectively, are both Julian Dates, apportioned in any convenient way between the argument pairs.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n   Part A         Part B\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable (in the case of UT;  the TT is not at all critical in this respect).  The J2000 and MJD methods are good compromises between resolution and convenience.  For UT, the date & time method is best matched to the algorithm that is used by the Earth Rotation Angle function, called internally:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nBoth UT1 and TT are required, UT1 to predict the Earth rotation and TT to predict the effects of precession.  If UT1 is used for both purposes, errors of order 100 microarcseconds result.\nThis GMST is compatible with the IAU 2000 resolutions and must be used only in conjunction with other IAU 2000 compatible components such as precession-nutation and equation of the equinoxes.\nThe result is returned in the range 0 to 2pi.\nThe algorithm is from Capitaine et al. (2003) and IERS Conventions 2003.\n\nCalled\n\neraEra00: Earth rotation angle, IAU 2000\neraAnp: normalize angle into range 0 to 2pi\n\nReferences\n\nCapitaine, N., Wallace, P.T. and McCarthy, D.D., \"Expressions to   implement the IAU 2000 definition of UT1\", Astronomy &   Astrophysics, 406, 1135-1149 (2003)\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gmst06",
    "page": "API",
    "title": "ERFA.gmst06",
    "category": "function",
    "text": "gmst06(uta, utb, tta, ttb)\n\nGreenwich mean sidereal time (consistent with IAU 2006 precession).\n\nGiven\n\nuta, utb: UT1 as a 2-part Julian Date (Notes 1,2)\ntta, ttb: TT as a 2-part Julian Date (Notes 1,2)\n\nReturned\n\nGreenwich mean sidereal time (radians)\n\nNotes\n\nThe UT1 and TT dates uta+utb and tta+ttb respectively, are both Julian Dates, apportioned in any convenient way between the argument pairs.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n   Part A        Part B\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable (in the case of UT;  the TT is not at all critical in this respect).  The J2000 and MJD methods are good compromises between resolution and convenience.  For UT, the date & time method is best matched to the algorithm that is used by the Earth rotation angle function, called internally:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nBoth UT1 and TT are required, UT1 to predict the Earth rotation and TT to predict the effects of precession.  If UT1 is used for both purposes, errors of order 100 microarcseconds result.\nThis GMST is compatible with the IAU 2006 precession and must not be used with other precession models.\nThe result is returned in the range 0 to 2pi.\n\nCalled\n\neraEra00: Earth rotation angle, IAU 2000\neraAnp: normalize angle into range 0 to 2pi\n\nReference\n\nCapitaine, N., Wallace, P.T. & Chapront, J., 2005,   Astron.Astrophys. 432, 355\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gmst82",
    "page": "API",
    "title": "ERFA.gmst82",
    "category": "function",
    "text": "gmst82(dj1, dj2)\n\nUniversal Time to Greenwich mean sidereal time (IAU 1982 model).\n\nGiven\n\ndj1, dj2: UT1 Julian Date (see note)\n\nReturned\n\nGreenwich mean sidereal time (radians)\n\nNotes\n\nThe UT1 date dj1+dj2 is a Julian Date, apportioned in any convenient way between the arguments dj1 and dj2.  For example, JD(UT1)=2450123.7 could be expressed in any of these ways, among others:\n    dj1            dj2\n\n2450123.7          0          (JD method)\n 2451545        -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5         0.2         (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  The date & time method is best matched to the algorithm used:  maximum accuracy (or, at least, minimum noise) is delivered when the dj1 argument is for 0hrs UT1 on the day in question and the dj2 argument lies in the range 0 to 1, or vice versa.\nThe algorithm is based on the IAU 1982 expression.  This is always described as giving the GMST at 0 hours UT1.  In fact, it gives the difference between the GMST and the UT, the steady 4-minutes-per-day drawing-ahead of ST with respect to UT.  When whole days are ignored, the expression happens to equal the GMST at 0 hours UT1 each day.\nIn this function, the entire UT1 (the sum of the two arguments dj1 and dj2) is used directly as the argument for the standard formula, the constant term of which is adjusted by 12 hours to take account of the noon phasing of Julian Date.  The UT1 is then added, but omitting whole days to conserve accuracy.\n\nCalled\n\neraAnp: normalize angle into range 0 to 2pi\n\nReferences\n\nTransactions of the International Astronomical Union,   XVIII B, 67 (1983).\nAoki et al., Astron. Astrophys. 105, 359-361 (1982).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gst00a",
    "page": "API",
    "title": "ERFA.gst00a",
    "category": "function",
    "text": "gst00a(uta, utb, tta, ttb)\n\nGreenwich apparent sidereal time (consistent with IAU 2000 resolutions).\n\nGiven\n\nuta, utb: UT1 as a 2-part Julian Date (Notes 1,2)\ntta, ttb: TT as a 2-part Julian Date (Notes 1,2)\n\nReturned\n\nGreenwich apparent sidereal time (radians)\n\nNotes\n\nThe UT1 and TT dates uta+utb and tta+ttb respectively, are both Julian Dates, apportioned in any convenient way between the argument pairs.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n   Part A        Part B\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable (in the case of UT;  the TT is not at all critical in this respect).  The J2000 and MJD methods are good compromises between resolution and convenience.  For UT, the date & time method is best matched to the algorithm that is used by the Earth Rotation Angle function, called internally:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nBoth UT1 and TT are required, UT1 to predict the Earth rotation and TT to predict the effects of precession-nutation.  If UT1 is used for both purposes, errors of order 100 microarcseconds result.\nThis GAST is compatible with the IAU 2000 resolutions and must be used only in conjunction with other IAU 2000 compatible components such as precession-nutation.\nThe result is returned in the range 0 to 2pi.\nThe algorithm is from Capitaine et al. (2003) and IERS Conventions 2003.\n\nCalled\n\neraGmst00: Greenwich mean sidereal time, IAU 2000\neraEe00a: equation of the equinoxes, IAU 2000A\neraAnp: normalize angle into range 0 to 2pi\n\nReferences\n\nCapitaine, N., Wallace, P.T. and McCarthy, D.D., \"Expressions to   implement the IAU 2000 definition of UT1\", Astronomy &   Astrophysics, 406, 1135-1149 (2003)\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gst00b",
    "page": "API",
    "title": "ERFA.gst00b",
    "category": "function",
    "text": "gst00b(dr, dd)\n\nGreenwich apparent sidereal time (consistent with IAU 2000 resolutions but using the truncated nutation model IAU 2000B).\n\nGiven\n\nuta, utb: UT1 as a 2-part Julian Date (Notes 1,2)\n\nReturned\n\nGreenwich apparent sidereal time (radians)\n\nNotes\n\nThe UT1 date uta+utb is a Julian Date, apportioned in any convenient way between the argument pair.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n    uta            utb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  For UT, the date & time method is best matched to the algorithm that is used by the Earth Rotation Angle function, called internally:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nThe result is compatible with the IAU 2000 resolutions, except that accuracy has been compromised for the sake of speed and convenience in two respects:\n. UT is used instead of TDB (or TT) to compute the precession   component of GMST and the equation of the equinoxes.  This   results in errors of order 0.1 mas at present.\n. The IAU 2000B abridged nutation model (McCarthy & Luzum, 2001)   is used, introducing errors of up to 1 mas.\nThis GAST is compatible with the IAU 2000 resolutions and must be used only in conjunction with other IAU 2000 compatible components such as precession-nutation.\nThe result is returned in the range 0 to 2pi.\nThe algorithm is from Capitaine et al. (2003) and IERS Conventions 2003.\n\nCalled\n\neraGmst00: Greenwich mean sidereal time, IAU 2000\neraEe00b: equation of the equinoxes, IAU 2000B\neraAnp: normalize angle into range 0 to 2pi\n\nReferences\n\nCapitaine, N., Wallace, P.T. and McCarthy, D.D., \"Expressions to   implement the IAU 2000 definition of UT1\", Astronomy &   Astrophysics, 406, 1135-1149 (2003)\nMcCarthy, D.D. & Luzum, B.J., \"An abridged model of the   precession-nutation of the celestial pole\", Celestial Mechanics &   Dynamical Astronomy, 85, 37-49 (2003)\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gst06-NTuple{5,Any}",
    "page": "API",
    "title": "ERFA.gst06",
    "category": "method",
    "text": "gst06(uta, utb, tta, ttb, rnpb)\n\nGreenwich apparent sidereal time, IAU 2006, given the NPB matrix.\n\nGiven\n\nuta, utb: UT1 as a 2-part Julian Date (Notes 1,2)\ntta, ttb: TT as a 2-part Julian Date (Notes 1,2)\nrnpb: Nutation x precession x bias matrix\n\nReturned\n\nGreenwich apparent sidereal time (radians)\n\nNotes\n\nThe UT1 and TT dates uta+utb and tta+ttb respectively, are both Julian Dates, apportioned in any convenient way between the argument pairs.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n   Part A        Part B\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable (in the case of UT;  the TT is not at all critical in this respect).  The J2000 and MJD methods are good compromises between resolution and convenience.  For UT, the date & time method is best matched to the algorithm that is used by the Earth rotation angle function, called internally:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nBoth UT1 and TT are required, UT1 to predict the Earth rotation and TT to predict the effects of precession-nutation.  If UT1 is used for both purposes, errors of order 100 microarcseconds result.\nAlthough the function uses the IAU 2006 series for s+XY/2, it is otherwise independent of the precession-nutation model and can in practice be used with any equinox-based NPB matrix.\nThe result is returned in the range 0 to 2pi.\n\nCalled\n\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS06: the CIO locator s, given X,Y, IAU 2006\neraAnp: normalize angle into range 0 to 2pi\neraEra00: Earth rotation angle, IAU 2000\neraEors: equation of the origins, given NPB matrix and s\n\nReference\n\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gst06a",
    "page": "API",
    "title": "ERFA.gst06a",
    "category": "function",
    "text": "gst06a(uta, utb, tta, ttb)\n\nGreenwich apparent sidereal time (consistent with IAU 2000 and 2006 resolutions).\n\nGiven\n\nuta, utb: UT1 as a 2-part Julian Date (Notes 1,2)\ntta, ttb: TT as a 2-part Julian Date (Notes 1,2)\n\nReturned\n\nGreenwich apparent sidereal time (radians)\n\nNotes\n\nThe UT1 and TT dates uta+utb and tta+ttb respectively, are both Julian Dates, apportioned in any convenient way between the argument pairs.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n   Part A        Part B\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable (in the case of UT;  the TT is not at all critical in this respect).  The J2000 and MJD methods are good compromises between resolution and convenience.  For UT, the date & time method is best matched to the algorithm that is used by the Earth rotation angle function, called internally:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nBoth UT1 and TT are required, UT1 to predict the Earth rotation and TT to predict the effects of precession-nutation.  If UT1 is used for both purposes, errors of order 100 microarcseconds result.\nThis GAST is compatible with the IAU 2000/2006 resolutions and must be used only in conjunction with IAU 2006 precession and IAU 2000A nutation.\nThe result is returned in the range 0 to 2pi.\n\nCalled\n\neraPnm06a: classical NPB matrix, IAU 2006/2000A\neraGst06: Greenwich apparent ST, IAU 2006, given NPB matrix\n\nReference\n\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.gst94",
    "page": "API",
    "title": "ERFA.gst94",
    "category": "function",
    "text": "gst94(dr, dd)\n\nGreenwich apparent sidereal time (consistent with IAU 1982/94 resolutions).\n\nGiven\n\nuta, utb: UT1 as a 2-part Julian Date (Notes 1,2)\n\nReturned\n\nGreenwich apparent sidereal time (radians)\n\nNotes\n\nThe UT1 date uta+utb is a Julian Date, apportioned in any convenient way between the argument pair.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n    uta            utb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 and MJD methods are good compromises between resolution and convenience.  For UT, the date & time method is best matched to the algorithm that is used by the Earth Rotation Angle function, called internally:  maximum precision is delivered when the uta argument is for 0hrs UT1 on the day in question and the utb argument lies in the range 0 to 1, or vice versa.\nThe result is compatible with the IAU 1982 and 1994 resolutions, except that accuracy has been compromised for the sake of convenience in that UT is used instead of TDB (or TT) to compute the equation of the equinoxes.\nThis GAST must be used only in conjunction with contemporaneous IAU standards such as 1976 precession, 1980 obliquity and 1982 nutation.  It is not compatible with the IAU 2000 resolutions.\nThe result is returned in the range 0 to 2pi.\n\nCalled\n\neraGmst82: Greenwich mean sidereal time, IAU 1982\neraEqeq94: equation of the equinoxes, IAU 1994\neraAnp: normalize angle into range 0 to 2pi\n\nReferences\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\nIAU Resolution C7, Recommendation 3 (1994)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.h2fk5-NTuple{6,Any}",
    "page": "API",
    "title": "ERFA.h2fk5",
    "category": "method",
    "text": "h2fk5(ra, dec, dra, ddec, px, rv)\n\nTransform Hipparcos star data into the FK5 (J2000.0) system.\n\nGiven (all Hipparcos, epoch J2000.0)\n\nrh: RA (radians)\ndh: Dec (radians)\ndrh: Proper motion in RA (dRA/dt, rad/Jyear)\nddh: Proper motion in Dec (dDec/dt, rad/Jyear)\npxh: Parallax (arcsec)\nrvh: Radial velocity (km/s, positive = receding)\n\nReturned (all FK5, equinox J2000.0, epoch J2000.0)\n\nr5: RA (radians)\nd5: Dec (radians)\ndr5: Proper motion in RA (dRA/dt, rad/Jyear)\ndd5: Proper motion in Dec (dDec/dt, rad/Jyear)\npx5: Parallax (arcsec)\nrv5: Radial velocity (km/s, positive = receding)\n\nNotes\n\nThis function transforms Hipparcos star positions and proper motions into FK5 J2000.0.\nThe proper motions in RA are dRA/dt rather than cos(Dec)*dRA/dt, and are per year rather than per century.\nThe FK5 to Hipparcos transformation is modeled as a pure rotation and spin;  zonal errors in the FK5 catalog are not taken into account.\nSee also eraFk52h, eraFk5hz, eraHfk5z.\n\nCalled\n\neraStarpv: star catalog data to space motion pv-vector\neraFk5hip: FK5 to Hipparcos rotation and spin\neraRv2m: r-vector to r-matrix\neraRxp: product of r-matrix and p-vector\neraTrxp: product of transpose of r-matrix and p-vector\neraPxp: vector product of two p-vectors\neraPmp: p-vector minus p-vector\neraPvstar: space motion pv-vector to star catalog data\n\nReference\n\nF.Mignard & M.Froeschle, Astron. Astrophys. 354, 732-739 (2000).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.hfk5z-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.hfk5z",
    "category": "method",
    "text": "hfk5z(rh, dh, date1, date2)\n\nTransform a Hipparcos star position into FK5 J2000.0, assuming zero Hipparcos proper motion.\n\nGiven\n\nrh: Hipparcos RA (radians)\ndh: Hipparcos Dec (radians)\ndate1, date2: TDB date (Note 1)\n\nReturned (all FK5, equinox J2000.0, date date1+date2)\n\nr5: RA (radians)\nd5: Dec (radians)\ndr5: FK5 RA proper motion (rad/year, Note 4)\ndd5: Dec proper motion (rad/year, Note 4)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe proper motion in RA is dRA/dt rather than cos(Dec)*dRA/dt.\nThe FK5 to Hipparcos transformation is modeled as a pure rotation and spin;  zonal errors in the FK5 catalogue are not taken into account.\nIt was the intention that Hipparcos should be a close approximation to an inertial frame, so that distant objects have zero proper motion;  such objects have (in general) non-zero proper motion in FK5, and this function returns those fictitious proper motions.\nThe position returned by this function is in the FK5 J2000.0 reference system but at date date1+date2.\nSee also eraFk52h, eraH2fk5, eraFk5zhz.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraFk5hip: FK5 to Hipparcos rotation and spin\neraRxp: product of r-matrix and p-vector\neraSxp: multiply p-vector by scalar\neraRxr: product of two r-matrices\neraTrxp: product of transpose of r-matrix and p-vector\neraPxp: vector product of two p-vectors\neraPv2s: pv-vector to spherical\neraAnp: normalize angle into range 0 to 2pi\n\nReference\n\nF.Mignard & M.Froeschle, 2000, Astron.Astrophys. 354, 732-739.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.icrs2g-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.icrs2g",
    "category": "method",
    "text": "icrs2g(dr, dd)\n\nTransformation from ICRS to Galactic Coordinates.\n\nGiven\n\ndr: ICRS right ascension (radians)\ndd: ICRS declination (radians)\n\nReturned\n\ndl: Galactic longitude (radians)\ndb: Galactic latitude (radians)\n\nNotes\n\nThe IAU 1958 system of Galactic coordinates was defined with respect to the now obsolete reference system FK4 B1950.0.  When interpreting the system in a modern context, several factors have to be taken into account:\n. The inclusion in FK4 positions of the E-terms of aberration.\n. The distortion of the FK4 proper motion system by differential   Galactic rotation.\n. The use of the B1950.0 equinox rather than the now-standard   J2000.0.\n. The frame bias between ICRS and the J2000.0 mean place system.\nThe Hipparcos Catalogue (Perryman & ESA 1997) provides a rotation matrix that transforms directly between ICRS and Galactic coordinates with the above factors taken into account.  The matrix is derived from three angles, namely the ICRS coordinates of the Galactic pole and the longitude of the ascending node of the galactic equator on the ICRS equator.  They are given in degrees to five decimal places and for canonical purposes are regarded as exact.  In the Hipparcos Catalogue the matrix elements are given to 10 decimal places (about 20 microarcsec). In the present ERFA function the matrix elements have been recomputed from the canonical three angles and are given to 30 decimal places.\nThe inverse transformation is performed by the function eraG2icrs.\n\nCalled\n\neraAnp: normalize angle into range 0 to 2pi\neraAnpm: normalize angle into range +/- pi\neraS2c: spherical coordinates to unit vector\neraRxp: product of r-matrix and p-vector\neraC2s: p-vector to spherical\n\nReference\n\nPerryman M.A.C. & ESA, 1997, ESA SP-1200, The Hipparcos and Tycho   catalogues.  Astrometric and photometric star catalogues   derived from the ESA Hipparcos Space Astrometry Mission.  ESA   Publications Division, Noordwijk, Netherlands.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.jd2cal-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.jd2cal",
    "category": "method",
    "text": "jd2cal(dj1, dj2)\n\nJulian Date to Gregorian year, month, day, and fraction of a day.\n\nGiven\n\ndj1, dj2: Julian Date (Notes 1, 2)\n\nReturned\n\niy: Year\nim: Month\nid: Day\nfd: Fraction of day\n\nNotes\n\nThe earliest valid date is -68569.5 (-4900 March 1).  The largest value accepted is 1e9.\nThe Julian Date is apportioned in any convenient way between the arguments dj1 and dj2.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n   dj1             dj2\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nIn early eras the conversion is from the \"proleptic Gregorian calendar\";  no account is taken of the date(s) of adoption of the Gregorian calendar, nor is the AD/BC numbering convention observed.\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 12.92 (p604).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.jdcalf-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.jdcalf",
    "category": "method",
    "text": "jdcalf(ndp, dj1, dj2)\n\nJulian Date to Gregorian Calendar, expressed in a form convenient for formatting messages:  rounded to a specified precision.\n\nGiven\n\nndp: Number of decimal places of days in fraction\ndj1, dj2: Dj1+dj2 = Julian Date (Note 1)\n\nReturned\n\niymdf: Year, month, day, fraction in Gregorian calendar\n\nNotes\n\nThe Julian Date is apportioned in any convenient way between the arguments dj1 and dj2.  For example, JD=2450123.7 could be expressed in any of these ways, among others:\n    dj1            dj2\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nIn early eras the conversion is from the \"Proleptic Gregorian Calendar\";  no account is taken of the date(s) of adoption of the Gregorian Calendar, nor is the AD/BC numbering convention observed.\nRefer to the function eraJd2cal.\nNDP should be 4 or less if internal overflows are to be avoided on machines which use 16-bit integers.\n\nCalled\n\neraJd2cal: JD to Gregorian calendar\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 12.92 (p604).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ld-Tuple{Any,AbstractArray,AbstractArray,AbstractArray,Any,Any}",
    "page": "API",
    "title": "ERFA.ld",
    "category": "method",
    "text": "ld(bm, p, q, e, em, dlim)\n\nApply light deflection by a solar-system body, as part of transforming coordinate direction into natural direction.\n\nGiven\n\nbm: Mass of the gravitating body (solar masses)\np: Direction from observer to source (unit vector)\nq: Direction from body to source (unit vector)\ne: Direction from body to observer (unit vector)\nem: Distance from body to observer (au)\ndlim: Deflection limiter (Note 4)\n\nReturned\n\np1: Observer to deflected source (unit vector)\n\nNotes\n\nThe algorithm is based on Expr. (70) in Klioner (2003) and Expr. (7.63) in the Explanatory Supplement (Urban & Seidelmann 2013), with some rearrangement to minimize the effects of machine precision.\nThe mass parameter bm can, as required, be adjusted in order to allow for such effects as quadrupole field.\nThe barycentric position of the deflecting body should ideally correspond to the time of closest approach of the light ray to the body.\nThe deflection limiter parameter dlim is phi^2/2, where phi is the angular separation (in radians) between source and body at which limiting is applied.  As phi shrinks below the chosen threshold, the deflection is artificially reduced, reaching zero for phi = 0.\nThe returned vector p1 is not normalized, but the consequential departure from unit magnitude is always negligible.\nThe arguments p and p1 can be the same array.\nTo accumulate total light deflection taking into account the contributions from several bodies, call the present function for each body in succession, in decreasing order of distance from the observer.\nFor efficiency, validation is omitted.  The supplied vectors must be of unit magnitude, and the deflection limiter non-zero and positive.\n\nReferences\n\nUrban, S. & Seidelmann, P. K. (eds), Explanatory Supplement to   the Astronomical Almanac, 3rd ed., University Science Books   (2013).\nKlioner, Sergei A., \"A practical relativistic model for micro-   arcsecond astrometry in space\", Astr. J. 125, 1580-1597 (2003).\n\nCalled\n\neraPdp: scalar product of two p-vectors\neraPxp: vector product of two p-vectors\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ldn-Tuple{Array{LDBODY,1},AbstractArray,AbstractArray}",
    "page": "API",
    "title": "ERFA.ldn",
    "category": "method",
    "text": "ldn(l::Vector{LDBODY}, ob, sc)\n\nFor a star, apply light deflection by multiple solar-system bodies, as part of transforming coordinate direction into natural direction.\n\nGiven\n\nn: Number of bodies (note 1)\nb: Data for each of the n bodies (Notes 1,2):\nbm: Mass of the body (solar masses, Note 3)\ndl: Deflection limiter (Note 4)\npv: Barycentric PV of the body (au, au/day)\nob: Barycentric position of the observer (au)\nsc: Observer to star coord direction (unit vector)\n\nReturned\n\nsn: Observer to deflected star (unit vector)\n\nThe array b contains n entries, one for each body to be considered.  If n = 0, no gravitational light deflection will be applied, not even for the Sun.\nThe array b should include an entry for the Sun as well as for any planet or other body to be taken into account.  The entries should be in the order in which the light passes the body.\nIn the entry in the b array for body i, the mass parameter b[i].bm can, as required, be adjusted in order to allow for such effects as quadrupole field.\nThe deflection limiter parameter b[i].dl is phi^2/2, where phi is the angular separation (in radians) between star and body at which limiting is applied.  As phi shrinks below the chosen threshold, the deflection is artificially reduced, reaching zero for phi = 0.   Example values suitable for a terrestrial observer, together with masses, are as follows:\nbody i     b[i].bm        b[i].dl\nSun        1.0            6e-6    Jupiter    0.00095435     3e-9    Saturn     0.00028574     3e-10\nFor cases where the starlight passes the body before reaching the observer, the body is placed back along its barycentric track by the light time from that point to the observer.  For cases where the body is \"behind\" the observer no such shift is applied.  If a different treatment is preferred, the user has the option of instead using the eraLd function.  Similarly, eraLd can be used for cases where the source is nearby, not a star.\nThe returned vector sn is not normalized, but the consequential departure from unit magnitude is always negligible.\nThe arguments sc and sn can be the same array.\nFor efficiency, validation is omitted.  The supplied masses must be greater than zero, the position and velocity vectors must be right, and the deflection limiter greater than zero.\n\nReference\n\nUrban, S. & Seidelmann, P. K. (eds), Explanatory Supplement to   the Astronomical Almanac, 3rd ed., University Science Books   (2013), Section 7.2.4.\n\nCalled\n\neraCp: copy p-vector\neraPdp: scalar product of two p-vectors\neraPmp: p-vector minus p-vector\neraPpsp: p-vector plus scaled p-vector\neraPn: decompose p-vector into modulus and direction\neraLd: light deflection by a solar-system body\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ldsun-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.ldsun",
    "category": "method",
    "text": "ldsun(p, e, em)\n\nDeflection of starlight by the Sun.\n\nGiven\n\np: Direction from observer to star (unit vector)\ne: Direction from Sun to observer (unit vector)\nem: Distance from Sun to observer (au)\n\nReturned\n\np1: Observer to deflected star (unit vector)\n\nNotes\n\nThe source is presumed to be sufficiently distant that its directions seen from the Sun and the observer are essentially the same.\nThe deflection is restrained when the angle between the star and the center of the Sun is less than a threshold value, falling to zero deflection for zero separation.  The chosen threshold value is within the solar limb for all solar-system applications, and is about 5 arcminutes for the case of a terrestrial observer.\nThe arguments p and p1 can be the same array.\n\nCalled\n\neraLd: light deflection by a solar-system body\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.lteceq",
    "page": "API",
    "title": "ERFA.lteceq",
    "category": "function",
    "text": "lteceq(epj, dr, dd)\n\nTransformation from ecliptic coordinates (mean equinox and ecliptic of date) to ICRS RA,Dec, using a long-term precession model.\n\nGiven\n\nepj: Julian epoch (TT)\ndl, db: Ecliptic longitude and latitude (radians)\n\nReturned\n\ndr, dd: ICRS right ascension and declination (radians)\n\nNo assumptions are made about whether the coordinates represent starlight and embody astrometric effects such as parallax or aberration.\nThe transformation is approximately that from ecliptic longitude and latitude (mean equinox and ecliptic of date) to mean J2000.0 right ascension and declination, with only frame bias (always less than 25 mas) to disturb this classical picture.\nThe Vondrak et al. (2011, 2012) 400 millennia precession model agrees with the IAU 2006 precession at J2000.0 and stays within 100 microarcseconds during the 20th and 21st centuries.  It is accurate to a few arcseconds throughout the historical period, worsening to a few tenths of a degree at the end of the +/- 200,000 year time span.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraLtecm: J2000.0 to ecliptic rotation matrix, long term\neraTrxp: product of transpose of r-matrix and p-vector\neraC2s: unit vector to spherical coordinates\neraAnp: normalize angle into range 0 to 2pi\neraAnpm: normalize angle into range +/- pi\n\nReferences\n\nVondrak, J., Capitaine, N. and Wallace, P., 2011, New precession   expressions, valid for long time intervals, Astron.Astrophys. 534,   A22\nVondrak, J., Capitaine, N. and Wallace, P., 2012, New precession   expressions, valid for long time intervals (Corrigendum),   Astron.Astrophys. 541, C1\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ltecm",
    "page": "API",
    "title": "ERFA.ltecm",
    "category": "function",
    "text": "ltecm(dr, dd)\n\nICRS equatorial to ecliptic rotation matrix, long-term.\n\nGiven\n\nepj: Julian epoch (TT)\n\nReturned\n\nrm: ICRS to ecliptic rotation matrix\n\nNotes\n\nThe matrix is in the sense\nEep = rm x PICRS,\nwhere PICRS is a vector with respect to ICRS right ascension and declination axes and Eep is the same vector with respect to the (inertial) ecliptic and equinox of epoch epj.\nP_ICRS is a free vector, merely a direction, typically of unit magnitude, and not bound to any particular spatial origin, such as the Earth, Sun or SSB.  No assumptions are made about whether it represents starlight and embodies astrometric effects such as parallax or aberration.  The transformation is approximately that between mean J2000.0 right ascension and declination and ecliptic longitude and latitude, with only frame bias (always less than 25 mas) to disturb this classical picture.\nThe Vondrak et al. (2011, 2012) 400 millennia precession model agrees with the IAU 2006 precession at J2000.0 and stays within 100 microarcseconds during the 20th and 21st centuries.  It is accurate to a few arcseconds throughout the historical period, worsening to a few tenths of a degree at the end of the +/- 200,000 year time span.\n\nCalled\n\neraLtpequ: equator pole, long term\neraLtpecl: ecliptic pole, long term\neraPxp: vector product\neraPn: normalize vector\n\nReferences\n\nVondrak, J., Capitaine, N. and Wallace, P., 2011, New precession   expressions, valid for long time intervals, Astron.Astrophys. 534,   A22\nVondrak, J., Capitaine, N. and Wallace, P., 2012, New precession   expressions, valid for long time intervals (Corrigendum),   Astron.Astrophys. 541, C1\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.lteqec",
    "page": "API",
    "title": "ERFA.lteqec",
    "category": "function",
    "text": "lteqec(epj, dr, dd)\n\nTransformation from ICRS equatorial coordinates to ecliptic coordinates (mean equinox and ecliptic of date) using a long-term precession model.\n\nGiven\n\nepj: Julian epoch (TT)\ndr, dd: ICRS right ascension and declination (radians)\n\nReturned\n\ndl, db: Ecliptic longitude and latitude (radians)\n\nNo assumptions are made about whether the coordinates represent starlight and embody astrometric effects such as parallax or aberration.\nThe transformation is approximately that from mean J2000.0 right ascension and declination to ecliptic longitude and latitude (mean equinox and ecliptic of date), with only frame bias (always less than 25 mas) to disturb this classical picture.\nThe Vondrak et al. (2011, 2012) 400 millennia precession model agrees with the IAU 2006 precession at J2000.0 and stays within 100 microarcseconds during the 20th and 21st centuries.  It is accurate to a few arcseconds throughout the historical period, worsening to a few tenths of a degree at the end of the +/- 200,000 year time span.\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraLtecm: J2000.0 to ecliptic rotation matrix, long term\neraRxp: product of r-matrix and p-vector\neraC2s: unit vector to spherical coordinates\neraAnp: normalize angle into range 0 to 2pi\neraAnpm: normalize angle into range +/- pi\n\nReferences\n\nVondrak, J., Capitaine, N. and Wallace, P., 2011, New precession   expressions, valid for long time intervals, Astron.Astrophys. 534,   A22\nVondrak, J., Capitaine, N. and Wallace, P., 2012, New precession   expressions, valid for long time intervals (Corrigendum),   Astron.Astrophys. 541, C1\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ltp",
    "page": "API",
    "title": "ERFA.ltp",
    "category": "function",
    "text": "ltp(dr, dd)\n\nLong-term precession matrix.\n\nGiven\n\nepj: Julian epoch (TT)\n\nReturned\n\nrp: Precession matrix, J2000.0 to date\n\nNotes\n\nThe matrix is in the sense\nPdate = rp x PJ2000,\nwhere PJ2000 is a vector with respect to the J2000.0 mean equator and equinox and Pdate is the same vector with respect to the equator and equinox of epoch epj.\nThe Vondrak et al. (2011, 2012) 400 millennia precession model agrees with the IAU 2006 precession at J2000.0 and stays within 100 microarcseconds during the 20th and 21st centuries.  It is accurate to a few arcseconds throughout the historical period, worsening to a few tenths of a degree at the end of the +/- 200,000 year time span.\n\nCalled\n\neraLtpequ: equator pole, long term\neraLtpecl: ecliptic pole, long term\neraPxp: vector product\neraPn: normalize vector\n\nReferences\n\nVondrak, J., Capitaine, N. and Wallace, P., 2011, New precession   expressions, valid for long time intervals, Astron.Astrophys. 534,   A22\nVondrak, J., Capitaine, N. and Wallace, P., 2012, New precession   expressions, valid for long time intervals (Corrigendum),   Astron.Astrophys. 541, C1\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ltpb",
    "page": "API",
    "title": "ERFA.ltpb",
    "category": "function",
    "text": "ltpb(dr, dd)\n\nLong-term precession matrix, including ICRS frame bias.\n\nGiven\n\nepj: Julian epoch (TT)\n\nReturned\n\nrpb: Precession-bias matrix, J2000.0 to date\n\nNotes\n\nThe matrix is in the sense\nPdate = rpb x PICRS,\nwhere PICRS is a vector in the Geocentric Celestial Reference System, and Pdate is the vector with respect to the Celestial Intermediate Reference System at that date but with nutation neglected.\nA first order frame bias formulation is used, of sub- microarcsecond accuracy compared with a full 3D rotation.\nThe Vondrak et al. (2011, 2012) 400 millennia precession model agrees with the IAU 2006 precession at J2000.0 and stays within 100 microarcseconds during the 20th and 21st centuries.  It is accurate to a few arcseconds throughout the historical period, worsening to a few tenths of a degree at the end of the +/- 200,000 year time span.\n\nReferences\n\nVondrak, J., Capitaine, N. and Wallace, P., 2011, New precession   expressions, valid for long time intervals, Astron.Astrophys. 534,   A22\nVondrak, J., Capitaine, N. and Wallace, P., 2012, New precession   expressions, valid for long time intervals (Corrigendum),   Astron.Astrophys. 541, C1\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ltpecl",
    "page": "API",
    "title": "ERFA.ltpecl",
    "category": "function",
    "text": "ltpecl(epj)\n\nLong-term precession of the ecliptic.\n\nGiven\n\nepj: Julian epoch (TT)\n\nReturned\n\nvec: Ecliptic pole unit vector\n\nNotes\n\nThe returned vector is with respect to the J2000.0 mean equator and equinox.\nThe Vondrak et al. (2011, 2012) 400 millennia precession model agrees with the IAU 2006 precession at J2000.0 and stays within 100 microarcseconds during the 20th and 21st centuries.  It is accurate to a few arcseconds throughout the historical period, worsening to a few tenths of a degree at the end of the +/- 200,000 year time span.\n\nReferences\n\nVondrak, J., Capitaine, N. and Wallace, P., 2011, New precession   expressions, valid for long time intervals, Astron.Astrophys. 534,   A22\nVondrak, J., Capitaine, N. and Wallace, P., 2012, New precession   expressions, valid for long time intervals (Corrigendum),   Astron.Astrophys. 541, C1\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ltpequ",
    "page": "API",
    "title": "ERFA.ltpequ",
    "category": "function",
    "text": "ltpequ(epj)\n\nLong-term precession of the equator.\n\nGiven\n\nepj: Julian epoch (TT)\n\nReturned\n\nveq: Equator pole unit vector\n\nNotes\n\nThe returned vector is with respect to the J2000.0 mean equator and equinox.\nThe Vondrak et al. (2011, 2012) 400 millennia precession model agrees with the IAU 2006 precession at J2000.0 and stays within 100 microarcseconds during the 20th and 21st centuries.  It is accurate to a few arcseconds throughout the historical period, worsening to a few tenths of a degree at the end of the +/- 200,000 year time span.\n\nReferences\n\nVondrak, J., Capitaine, N. and Wallace, P., 2011, New precession   expressions, valid for long time intervals, Astron.Astrophys. 534,   A22\nVondrak, J., Capitaine, N. and Wallace, P., 2012, New precession   expressions, valid for long time intervals (Corrigendum),   Astron.Astrophys. 541, C1\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.num00a",
    "page": "API",
    "title": "ERFA.num00a",
    "category": "function",
    "text": "num00a(date1, date2)\n\nForm the matrix of nutation for a given date, IAU 2000A model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrmatn: Nutation matrix\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(true) = rmatn * V(mean), where the p-vector V(true) is with respect to the true equatorial triad of date and the p-vector V(mean) is with respect to the mean equatorial triad of date.\nA faster, but slightly less accurate result (about 1 mas), can be obtained by using instead the eraNum00b function.\n\nCalled\n\neraPn00a: bias/precession/nutation, IAU 2000A\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 3.222-3 (p114).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.num00b",
    "page": "API",
    "title": "ERFA.num00b",
    "category": "function",
    "text": "num00b(date1, date2)\n\nForm the matrix of nutation for a given date, IAU 2000B model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrmatn: Nutation matrix\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(true) = rmatn * V(mean), where the p-vector V(true) is with respect to the true equatorial triad of date and the p-vector V(mean) is with respect to the mean equatorial triad of date.\nThe present function is faster, but slightly less accurate (about 1 mas), than the eraNum00a function.\n\nCalled\n\neraPn00b: bias/precession/nutation, IAU 2000B\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 3.222-3 (p114).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.num06a",
    "page": "API",
    "title": "ERFA.num06a",
    "category": "function",
    "text": "num06a(date1, date2)\n\nForm the matrix of nutation for a given date, IAU 2006/2000A model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrmatn: Nutation matrix\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(true) = rmatn * V(mean), where the p-vector V(true) is with respect to the true equatorial triad of date and the p-vector V(mean) is with respect to the mean equatorial triad of date.\n\nCalled\n\neraObl06: mean obliquity, IAU 2006\neraNut06a: nutation, IAU 2006/2000A\neraNumat: form nutation matrix\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 3.222-3 (p114).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.numat-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.numat",
    "category": "method",
    "text": "numat(epsa, dpsi, deps)\n\nForm the matrix of nutation.\n\nGiven\n\nepsa: Mean obliquity of date (Note 1)\ndpsi, deps: Nutation (Note 2)\n\nReturned\n\nrmatn: Nutation matrix (Note 3)\n\nNotes\n\nThe supplied mean obliquity epsa, must be consistent with the precession-nutation models from which dpsi and deps were obtained.\nThe caller is responsible for providing the nutation components; they are in longitude and obliquity, in radians and are with respect to the equinox and ecliptic of date.\nThe matrix operates in the sense V(true) = rmatn * V(mean), where the p-vector V(true) is with respect to the true equatorial triad of date and the p-vector V(mean) is with respect to the mean equatorial triad of date.\n\nCalled\n\neraIr: initialize r-matrix to identity\neraRx: rotate around X-axis\neraRz: rotate around Z-axis\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 3.222-3 (p114).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.nut00a",
    "page": "API",
    "title": "ERFA.nut00a",
    "category": "function",
    "text": "nut00a(date1, date2)\n\nNutation, IAU 2000A model (MHB2000 luni-solar and planetary nutation with free core nutation omitted).\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ndpsi, deps: Nutation, luni-solar + planetary (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe nutation components in longitude and obliquity are in radians and with respect to the equinox and ecliptic of date.  The obliquity at J2000.0 is assumed to be the Lieske et al. (1977) value of 84381.448 arcsec.\nBoth the luni-solar and planetary nutations are included.  The latter are due to direct planetary nutations and the perturbations of the lunar and terrestrial orbits.\nThe function computes the MHB2000 nutation series with the associated corrections for planetary nutations.  It is an implementation of the nutation part of the IAU 2000A precession- nutation model, formally adopted by the IAU General Assembly in 2000, namely MHB2000 (Mathews et al. 2002), but with the free core nutation (FCN - see Note 4) omitted.\nThe full MHB2000 model also contains contributions to the nutations in longitude and obliquity due to the free-excitation of the free-core-nutation during the period 1979-2000.  These FCN terms, which are time-dependent and unpredictable, are NOT included in the present function and, if required, must be independently computed.  With the FCN corrections included, the present function delivers a pole which is at current epochs accurate to a few hundred microarcseconds.  The omission of FCN introduces further errors of about that size.\nThe present function provides classical nutation.  The MHB2000 algorithm, from which it is adapted, deals also with (i) the offsets between the GCRS and mean poles and (ii) the adjustments in longitude and obliquity due to the changed precession rates. These additional functions, namely frame bias and precession adjustments, are supported by the ERFA functions eraBi00  and eraPr00.\nThe MHB2000 algorithm also provides \"total\" nutations, comprising the arithmetic sum of the frame bias, precession adjustments, luni-solar nutation and planetary nutation.  These total nutations can be used in combination with an existing IAU 1976 precession implementation, such as eraPmat76,  to deliver GCRS- to-true predictions of sub-mas accuracy at current dates. However, there are three shortcomings in the MHB2000 model that must be taken into account if more accurate or definitive results are required (see Wallace 2002):\n(i) The MHB2000 total nutations are simply arithmetic sums,       yet in reality the various components are successive Euler       rotations.  This slight lack of rigor leads to cross terms       that exceed 1 mas after a century.  The rigorous procedure       is to form the GCRS-to-true rotation matrix by applying the       bias, precession and nutation in that order.\n(ii) Although the precession adjustments are stated to be with       respect to Lieske et al. (1977), the MHB2000 model does       not specify which set of Euler angles are to be used and       how the adjustments are to be applied.  The most literal       and straightforward procedure is to adopt the 4-rotation       epsilon0, psiA, omegaA, xiA option, and to add DPSIPR       to psiA and DEPSPR to both omegaA and eps_A.\n(iii) The MHB2000 model predates the determination by Chapront       et al. (2002) of a 14.6 mas displacement between the       J2000.0 mean equinox and the origin of the ICRS frame.  It       should, however, be noted that neglecting this displacement       when calculating star coordinates does not lead to a       14.6 mas change in right ascension, only a small second-       order distortion in the pattern of the precession-nutation       effect.\nFor these reasons, the ERFA functions do not generate the \"total nutations\" directly, though they can of course easily be generated by calling eraBi00, eraPr00 and the present function and adding the results.\nThe MHB2000 model contains 41 instances where the same frequency appears multiple times, of which 38 are duplicates and three are triplicates.  To keep the present code close to the original MHB algorithm, this small inefficiency has not been corrected.\n\nCalled\n\neraFal03: mean anomaly of the Moon\neraFaf03: mean argument of the latitude of the Moon\neraFaom03: mean longitude of the Moon\'s ascending node\neraFame03: mean longitude of Mercury\neraFave03: mean longitude of Venus\neraFae03: mean longitude of Earth\neraFama03: mean longitude of Mars\neraFaju03: mean longitude of Jupiter\neraFasa03: mean longitude of Saturn\neraFaur03: mean longitude of Uranus\neraFapa03: general accumulated precession in longitude\n\nReferences\n\nChapront, J., Chapront-Touze, M. & Francou, G. 2002,   Astron.Astrophys. 387, 700\nLieske, J.H., Lederle, T., Fricke, W. & Morando, B. 1977,   Astron.Astrophys. 58, 1-16\nMathews, P.M., Herring, T.A., Buffet, B.A. 2002, J.Geophys.Res.   107, B4.  The MHB_2000 code itself was obtained on 9th September   2002 from ftp//maia.usno.navy.mil/conv2000/chapter5/IAU2000A.\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M. 1999,   Astron.Astrophys.Supp.Ser. 135, 111\nWallace, P.T., \"Software for Implementing the IAU 2000   Resolutions\", in IERS Workshop 5.1 (2002)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.nut00b",
    "page": "API",
    "title": "ERFA.nut00b",
    "category": "function",
    "text": "nut00b(date1, date2)\n\nNutation, IAU 2000B model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ndpsi, deps: Nutation, luni-solar + planetary (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe nutation components in longitude and obliquity are in radians and with respect to the equinox and ecliptic of date.  The obliquity at J2000.0 is assumed to be the Lieske et al. (1977) value of 84381.448 arcsec.  (The errors that result from using this function with the IAU 2006 value of 84381.406 arcsec can be neglected.)\nThe nutation model consists only of luni-solar terms, but includes also a fixed offset which compensates for certain long- period planetary terms (Note 7).\nThis function is an implementation of the IAU 2000B abridged nutation model formally adopted by the IAU General Assembly in\nThe function computes the MHB2000SHORT luni-solar\nnutation series (Luzum 2001), but without the associated corrections for the precession rate adjustments and the offset between the GCRS and J2000.0 mean poles.\nThe full IAU 2000A (MHB2000) nutation model contains nearly 1400 terms.  The IAU 2000B model (McCarthy & Luzum 2003) contains only 77 terms, plus additional simplifications, yet still delivers results of 1 mas accuracy at present epochs.  This combination of accuracy and size makes the IAU 2000B abridged nutation model suitable for most practical applications.\nThe function delivers a pole accurate to 1 mas from 1900 to 2100 (usually better than 1 mas, very occasionally just outside 1 mas).  The full IAU 2000A model, which is implemented in the function eraNut00a (q.v.), delivers considerably greater accuracy at current dates;  however, to realize this improved accuracy, corrections for the essentially unpredictable free-core-nutation (FCN) must also be included.\nThe present function provides classical nutation.  The MHB2000SHORT algorithm, from which it is adapted, deals also with (i) the offsets between the GCRS and mean poles and (ii) the adjustments in longitude and obliquity due to the changed precession rates.  These additional functions, namely frame bias and precession adjustments, are supported by the ERFA functions eraBi00  and eraPr00.\nThe MHB2000SHORT algorithm also provides \"total\" nutations, comprising the arithmetic sum of the frame bias, precession adjustments, and nutation (luni-solar + planetary).  These total nutations can be used in combination with an existing IAU 1976 precession implementation, such as eraPmat76,  to deliver GCRS- to-true predictions of mas accuracy at current epochs.  However, for symmetry with the eraNut00a  function (q.v. for the reasons), the ERFA functions do not generate the \"total nutations\" directly.  Should they be required, they could of course easily be generated by calling eraBi00, eraPr00 and the present function and adding the results.\nThe IAU 2000B model includes \"planetary bias\" terms that are fixed in size but compensate for long-period nutations.  The amplitudes quoted in McCarthy & Luzum (2003), namely Dpsi = -1.5835 mas and Depsilon = +1.6339 mas, are optimized for the \"total nutations\" method described in Note 6.  The Luzum (2001) values used in this ERFA implementation, namely -0.135 mas and +0.388 mas, are optimized for the \"rigorous\" method, where frame bias, precession and nutation are applied separately and in that order.  During the interval 1995-2050, the ERFA implementation delivers a maximum error of 1.001 mas (not including FCN).\n\nReferences\n\nLieske, J.H., Lederle, T., Fricke, W., Morando, B., \"Expressions   for the precession quantities based upon the IAU /1976/ system of   astronomical constants\", Astron.Astrophys. 58, 1-2, 1-16. (1977)\nLuzum, B., private communication, 2001 (Fortran code   MHB2000SHORT)\nMcCarthy, D.D. & Luzum, B.J., \"An abridged model of the   precession-nutation of the celestial pole\", Cel.Mech.Dyn.Astron.   85, 37-49 (2003)\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J., Astron.Astrophys. 282, 663-683 (1994)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.nut06a",
    "page": "API",
    "title": "ERFA.nut06a",
    "category": "function",
    "text": "nut06a(date1, date2)\n\nIAU 2000A nutation with adjustments to match the IAU 2006 precession.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ndpsi, deps: Nutation, luni-solar + planetary (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe nutation components in longitude and obliquity are in radians and with respect to the mean equinox and ecliptic of date, IAU 2006 precession model (Hilton et al. 2006, Capitaine et al. 2005).\nThe function first computes the IAU 2000A nutation, then applies adjustments for (i) the consequences of the change in obliquity from the IAU 1980 ecliptic to the IAU 2006 ecliptic and (ii) the secular variation in the Earth\'s dynamical form factor J2.\nThe present function provides classical nutation, complementing the IAU 2000 frame bias and IAU 2006 precession.  It delivers a pole which is at current epochs accurate to a few tens of microarcseconds, apart from the free core nutation.\n\nCalled\n\neraNut00a: nutation, IAU 2000A\n\nReferences\n\nChapront, J., Chapront-Touze, M. & Francou, G. 2002,   Astron.Astrophys. 387, 700\nLieske, J.H., Lederle, T., Fricke, W. & Morando, B. 1977,   Astron.Astrophys. 58, 1-16\nMathews, P.M., Herring, T.A., Buffet, B.A. 2002, J.Geophys.Res.   107, B4.  The MHB_2000 code itself was obtained on 9th September   2002 from ftp//maia.usno.navy.mil/conv2000/chapter5/IAU2000A.\nSimon, J.-L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., Laskar, J. 1994, Astron.Astrophys. 282, 663-683\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M. 1999,   Astron.Astrophys.Supp.Ser. 135, 111\nWallace, P.T., \"Software for Implementing the IAU 2000   Resolutions\", in IERS Workshop 5.1 (2002)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.nut80",
    "page": "API",
    "title": "ERFA.nut80",
    "category": "function",
    "text": "nut80(date1, date2)\n\nNutation, IAU 1980 model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ndpsi: Nutation in longitude (radians)\ndeps: Nutation in obliquity (radians)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe nutation components are with respect to the ecliptic of date.\n\nCalled\n\neraAnpm: normalize angle into range +/- pi\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 3.222 (p111).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.nutm80",
    "page": "API",
    "title": "ERFA.nutm80",
    "category": "function",
    "text": "nutm80(date1, date2)\n\nForm the matrix of nutation for a given date, IAU 1980 model.\n\nGiven\n\ndate1, date2: TDB date (Note 1)\n\nReturned\n\nrmatn: Nutation matrix\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(true) = rmatn * V(mean), where the p-vector V(true) is with respect to the true equatorial triad of date and the p-vector V(mean) is with respect to the mean equatorial triad of date.\n\nCalled\n\neraNut80: nutation, IAU 1980\neraObl80: mean obliquity, IAU 1980\neraNumat: form nutation matrix\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.obl06",
    "page": "API",
    "title": "ERFA.obl06",
    "category": "function",
    "text": "obl06(date1, date2)\n\nMean obliquity of the ecliptic, IAU 2006 precession model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nObliquity of the ecliptic (radians, Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe result is the angle between the ecliptic and mean equator of date date1+date2.\n\nReference\n\nHilton, J. et al., 2006, Celest.Mech.Dyn.Astron. 94, 351\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.obl80",
    "page": "API",
    "title": "ERFA.obl80",
    "category": "function",
    "text": "obl80(date1, date2)\n\nMean obliquity of the ecliptic, IAU 1980 model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nObliquity of the ecliptic (radians, Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe result is the angle between the ecliptic and mean equator of date date1+date2.\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Expression 3.222-1 (p114).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.p06e-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.p06e",
    "category": "method",
    "text": "p06e(date1, date2)\n\nPrecession angles, IAU 2006, equinox based.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned (see Note 2)\n\neps0: epsilon_0\npsia: psi_A\noma: omega_A\nbpa: P_A\nbqa: Q_A\npia: pi_A\nbpia: Pi_A\nepsa: obliquity epsilon_A\nchia: chi_A\nza: z_A\nzetaa: zeta_A\nthetaa: theta_A\npa: p_A\ngam: F-W angle gamma_J2000\nphi: F-W angle phi_J2000\npsi: F-W angle psi_J2000\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThis function returns the set of equinox based angles for the Capitaine et al. \"P03\" precession theory, adopted by the IAU in\nThe angles are set out in Table 1 of Hilton et al. (2006):\neps0   epsilon0   obliquity at J2000.0 psia   psiA       luni-solar precession oma    omegaA     inclination of equator wrt J2000.0 ecliptic bpa    PA         ecliptic pole x, J2000.0 ecliptic triad bqa    QA         ecliptic pole -y, J2000.0 ecliptic triad pia    piA        angle between moving and J2000.0 ecliptics bpia   PiA        longitude of ascending node of the ecliptic epsa   epsilonA   obliquity of the ecliptic chia   chiA       planetary precession za     zA         equatorial precession: -3rd 323 Euler angle zetaa  zetaA      equatorial precession: -1st 323 Euler angle thetaa thetaA     equatorial precession: 2nd 323 Euler angle pa     pA         general precession gam    gammaJ2000 J2000.0 RA difference of ecliptic poles phi    phiJ2000   J2000.0 codeclination of ecliptic pole psi    psiJ2000   longitude difference of equator poles, J2000.0\nThe returned values are all radians.\nHilton et al. (2006) Table 1 also contains angles that depend on models distinct from the P03 precession theory itself, namely the IAU 2000A frame bias and nutation.  The quoted polynomials are used in other ERFA functions:\n. eraXy06  contains the polynomial parts of the X and Y series.\n. eraS06  contains the polynomial part of the s+XY/2 series.\n. eraPfw06  implements the series for the Fukushima-Williams   angles that are with respect to the GCRS pole (i.e. the variants   that include frame bias).\nThe IAU resolution stipulated that the choice of parameterization was left to the user, and so an IAU compliant precession implementation can be constructed using various combinations of the angles returned by the present function.\nThe parameterization used by ERFA is the version of the Fukushima- Williams angles that refers directly to the GCRS pole.  These angles may be calculated by calling the function eraPfw06.  ERFA also supports the direct computation of the CIP GCRS X,Y by series, available by calling eraXy06.\nThe agreement between the different parameterizations is at the 1 microarcsecond level in the present era.\nWhen constructing a precession formulation that refers to the GCRS pole rather than the dynamical pole, it may (depending on the choice of angles) be necessary to introduce the frame bias explicitly.\nIt is permissible to re-use the same variable in the returned arguments.  The quantities are stored in the stated order.\n\nReference\n\nHilton, J. et al., 2006, Celest.Mech.Dyn.Astron. 94, 351\n\nCalled\n\neraObl06: mean obliquity, IAU 2006\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.p2pv-Tuple{Any}",
    "page": "API",
    "title": "ERFA.p2pv",
    "category": "method",
    "text": "p2pv(p)\n\nExtend a p-vector to a pv-vector by appending a zero velocity.\n\nGiven\n\np: P-vector\n\nReturned\n\npv: Pv-vector\n\nCalled\n\neraCp: copy p-vector\neraZp: zero p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.p2s-Tuple{Any}",
    "page": "API",
    "title": "ERFA.p2s",
    "category": "method",
    "text": "p2s(p)\n\nP-vector to spherical polar coordinates.\n\nGiven\n\np: P-vector\n\nReturned\n\ntheta: Longitude angle (radians)\nphi: Latitude angle (radians)\nr: Radial distance\n\nNotes\n\nIf P is null, zero theta, phi and r are returned.\nAt either pole, zero theta is returned.\n\nCalled\n\neraC2s: p-vector to spherical\neraPm: modulus of p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pap",
    "page": "API",
    "title": "ERFA.pap",
    "category": "function",
    "text": "pap(a, b)\n\nPosition-angle from two p-vectors.\n\nGiven\n\na: Direction of reference point\nb: Direction of point whose PA is required\n\nReturned\n\nPosition angle of b with respect to a (radians)\n\nNotes\n\nThe result is the position angle, in radians, of direction b with respect to direction a.  It is in the range -pi to +pi.  The sense is such that if b is a small distance \"north\" of a the position angle is approximately zero, and if b is a small distance \"east\" of a the position angle is approximately +pi/2.\nThe vectors a and b need not be of unit length.\nZero is returned if the two directions are the same or if either vector is null.\nIf vector a is at a pole, the result is ill-defined.\n\nCalled\n\neraPn: decompose p-vector into modulus and direction\neraPm: modulus of p-vector\neraPxp: vector product of two p-vectors\neraPmp: p-vector minus p-vector\neraPdp: scalar product of two p-vectors\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pas-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.pas",
    "category": "method",
    "text": "pas(al, ap, bl, bp)\n\nPosition-angle from spherical coordinates.\n\nGiven\n\nal: Longitude of point A (e.g. RA) in radians\nap: Latitude of point A (e.g. Dec) in radians\nbl: Longitude of point B\nbp: Latitude of point B\n\nReturned\n\nPosition angle of B with respect to A\n\nNotes\n\nThe result is the bearing (position angle), in radians, of point B with respect to point A.  It is in the range -pi to +pi.  The sense is such that if B is a small distance \"east\" of point A, the bearing is approximately +pi/2.\nZero is returned if the two points are coincident.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pb06-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.pb06",
    "category": "method",
    "text": "pb06(date1, date2)\n\nThis function forms three Euler angles which implement general precession from epoch J2000.0, using the IAU 2006 model.  Frame bias (the offset between ICRS and mean J2000.0) is included.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nbzeta: 1st rotation: radians cw around z\nbz: 3rd rotation: radians cw around z\nbtheta: 2nd rotation: radians ccw around y\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe traditional accumulated precession angles zetaA, zA, theta_A cannot be obtained in the usual way, namely through polynomial expressions, because of the frame bias.  The latter means that two of the angles undergo rapid changes near this date.  They are instead the results of decomposing the precession-bias matrix obtained by using the Fukushima-Williams method, which does not suffer from the problem.  The decomposition returns values which can be used in the conventional formulation and which include frame bias.\nThe three angles are returned in the conventional order, which is not the same as the order of the corresponding Euler rotations.  The precession-bias matrix is R3(-z) x R2(+theta) x R_3(-zeta).\nShould zetaA, zA, theta_A angles be required that do not contain frame bias, they are available by calling the ERFA function eraP06e.\n\nCalled\n\neraPmat06: PB matrix, IAU 2006\neraRz: rotate around Z-axis\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pdp",
    "page": "API",
    "title": "ERFA.pdp",
    "category": "function",
    "text": "pdp(a, b)\n\np-vector inner (=scalar=dot) product.\n\nGiven\n\na: First p-vector\nb: Second p-vector\n\nReturned\n\na cdot b\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pfw06-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.pfw06",
    "category": "method",
    "text": "pfw06(date1, date2)\n\nPrecession angles, IAU 2006 (Fukushima-Williams 4-angle formulation).\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ngamb: F-W angle gamma_bar (radians)\nphib: F-W angle phi_bar (radians)\npsib: F-W angle psi_bar (radians)\nepsa: F-W angle epsilon_A (radians)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nNaming the following points:\n  e = J2000.0 ecliptic pole,\n  p = GCRS pole,\n  E = mean ecliptic pole of date,\nand   P = mean pole of date,\nthe four Fukushima-Williams angles are as follows:\ngamb = gammabar = epE    phib = phibar = pE    psib = psibar = pEP    epsa = epsilonA = EP\nThe matrix representing the combined effects of frame bias and precession is:\nPxB = R1(-epsa).R3(-psib).R1(phib).R3(gamb)\nThe matrix representing the combined effects of frame bias, precession and nutation is simply:\nNxPxB = R1(-epsa-dE).R3(-psib-dP).R1(phib).R3(gamb)\nwhere dP and dE are the nutation components with respect to the ecliptic of date.\n\nReference\n\nHilton, J. et al., 2006, Celest.Mech.Dyn.Astron. 94, 351\n\nCalled\n\neraObl06: mean obliquity, IAU 2006\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.plan94-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.plan94",
    "category": "method",
    "text": "plan94(date1, date2, np)\n\nApproximate heliocentric position and velocity of a nominated major planet:  Mercury, Venus, EMB, Mars, Jupiter, Saturn, Uranus or Neptune (but not the Earth itself).\n\nGiven\n\ndate1: TDB date part A (Note 1)\ndate2: TDB date part B (Note 1)\nnp: Planet (1=Mercury, 2=Venus, 3=EMB, 4=Mars,                          5=Jupiter, 6=Saturn, 7=Uranus, 8=Neptune)\n\nReturned (argument)\n\nPlanet p,v (heliocentric, J2000.0, au,au/d)\n\nNotes\n\nThe date date1+date2 is in the TDB time scale (in practice TT can be used) and is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.  The limited accuracy of the present algorithm is such that any of the methods is satisfactory.\nIf an np value outside the range 1-8 is supplied, an error status (function value -1) is returned and the pv vector set to zeroes.\nFor np=3 the result is for the Earth-Moon Barycenter.  To obtain the heliocentric position and velocity of the Earth, use instead the ERFA function eraEpv00.\nOn successful return, the arrays p and v contain the following:\np: heliocentric position, au\nv: heliocentric velocity, au/d\nThe reference frame is equatorial and is with respect to the mean equator and equinox of epoch J2000.0.\nThe algorithm is due to J.L. Simon, P. Bretagnon, J. Chapront, M. Chapront-Touze, G. Francou and J. Laskar (Bureau des Longitudes, Paris, France).  From comparisons with JPL ephemeris DE102, they quote the following maximum errors over the interval 1800-2050:\nBody L (arcsec) B (arcsec) R (km)\nMercury 4 1 300\nVenus 5 1 800\nEMB 6 1 1000\nMars 17 1 7700\nJupiter 71 5 76000\nSaturn 81 13 267000\nUranus 86 7 712000\nNeptune 11 1 253000\nOver the interval 1000-3000, they report that the accuracy is no worse than 1.5 times that over 1800-2050.  Outside 1000-3000 the accuracy declines.\nComparisons of the present function with the JPL DE200 ephemeris give the following RMS errors over the interval 1960-2025:\nBody position (km) velocity (m/s)\nMercury 334 0.437\nVenus 1060 0.855\nEMB 2010 0.815\nMars 7690 1.98\nJupiter 71700 7.70\nSaturn 199000 19.4\nUranus 564000 16.4\nNeptune 158000 14.4\nComparisons against DE200 over the interval 1800-2100 gave the following maximum absolute differences.  (The results using DE406 were essentially the same.)\nBody L (arcsec) B (arcsec) R (km) Rdot (m/s)\nMercury 7 1 500 0.7\nVenus 7 1 1100 0.9\nEMB 9 1 1300 1.0\nMars 26 1 9000 2.5\nJupiter 78 6 82000 8.2\nSaturn 87 14 263000 24.6\nUranus 86 7 661000 27.4\nNeptune 11 2 248000 21.4\nThe present ERFA re-implementation of the original Simon et al. Fortran code differs from the original in the following respects:\nC instead of Fortran.\nThe date is supplied in two parts.\nThe result is returned only in equatorial Cartesian form;  the ecliptic longitude, latitude and radius vector are not  returned.\nThe result is in the J2000.0 equatorial frame, not ecliptic.\nMore is done in-line: there are fewer calls to subroutines.\nDifferent error/warning status values are used.\nA different Kepler\'s-equation-solver is used (avoiding  use of double precision complex).\nPolynomials in t are nested to minimize rounding errors.\nExplicit double constants are used to avoid mixed-mode  expressions.\nNone of the above changes affects the result significantly.\nThe returned status indicates the most serious condition encountered during execution of the function.  Illegal np is considered the most serious, overriding failure to converge, which in turn takes precedence over the remote date warning.\n\nCalled\n\neraAnp: normalize angle into range 0 to 2pi\n\nReference\n\nSimon, J.L, Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G., and Laskar, J., Astron. Astrophys. 282, 663 (1994).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pm-Tuple{Any}",
    "page": "API",
    "title": "ERFA.pm",
    "category": "method",
    "text": "pm(p)\n\nModulus of p-vector.\n\nGiven\n\np: P-vector\n\nReturned\n\nModulus\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pmat00",
    "page": "API",
    "title": "ERFA.pmat00",
    "category": "function",
    "text": "pmat00(date1, date2)\n\nPrecession matrix (including frame bias) from GCRS to a specified date, IAU 2000 model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrbp: Bias-precession matrix (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(date) = rbp * V(GCRS), where the p-vector V(GCRS) is with respect to the Geocentric Celestial Reference System (IAU, 2000) and the p-vector V(date) is with respect to the mean equatorial triad of the given date.\n\nCalled\n\neraBp00: frame bias and precession matrices, IAU 2000\n\nReference\n\nIAU: Trans. International Astronomical Union, Vol. XXIVB;  Proc.   24th General Assembly, Manchester, UK.  Resolutions B1.3, B1.6.   (2000)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pmat06",
    "page": "API",
    "title": "ERFA.pmat06",
    "category": "function",
    "text": "pmat06(date1, date2)\n\nPrecession matrix (including frame bias) from GCRS to a specified date, IAU 2006 model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrbp: Bias-precession matrix (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(date) = rbp * V(GCRS), where the p-vector V(GCRS) is with respect to the Geocentric Celestial Reference System (IAU, 2000) and the p-vector V(date) is with respect to the mean equatorial triad of the given date.\n\nCalled\n\neraPfw06: bias-precession F-W angles, IAU 2006\neraFw2m: F-W angles to r-matrix\n\nReferences\n\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pmat76",
    "page": "API",
    "title": "ERFA.pmat76",
    "category": "function",
    "text": "pmat76(date1, date2)\n\nPrecession matrix from J2000.0 to a specified date, IAU 1976 model.\n\nGiven\n\ndate1, date2: Ending date, TT (Note 1)\n\nReturned\n\nrmatp: Precession matrix, J2000.0 -> date1+date2\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(date) = RMATP * V(J2000), where the p-vector V(J2000) is with respect to the mean equatorial triad of epoch J2000.0 and the p-vector V(date) is with respect to the mean equatorial triad of the given date.\nThough the matrix method itself is rigorous, the precession angles are expressed through canonical polynomials which are valid only for a limited time span.  In addition, the IAU 1976 precession rate is known to be imperfect.  The absolute accuracy of the present formulation is better than 0.1 arcsec from 1960AD to 2040AD, better than 1 arcsec from 1640AD to 2360AD, and remains below 3 arcsec for the whole of the period 500BC to 3000AD.  The errors exceed 10 arcsec outside the range 1200BC to 3900AD, exceed 100 arcsec outside 4200BC to 5600AD and exceed 1000 arcsec outside 6800BC to 8200AD.\n\nCalled\n\neraPrec76: accumulated precession angles, IAU 1976\neraIr: initialize r-matrix to identity\neraRz: rotate around Z-axis\neraRy: rotate around Y-axis\neraCr: copy r-matrix\n\nReferences\n\nLieske, J.H., 1979, Astron.Astrophys. 73, 282.   equations (6) & (7), p283.\nKaplan,G.H., 1981. USNO circular no. 163, pA2.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pmp",
    "page": "API",
    "title": "ERFA.pmp",
    "category": "function",
    "text": "pmp(a, b)\n\nP-vector subtraction.\n\nGiven\n\na: First p-vector\nb: Second p-vector\n\nReturned\n\namb: A - b\n\nNote\n\nIt is permissible to re-use the same array for any of the    arguments.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pmpx-NTuple{8,Any}",
    "page": "API",
    "title": "ERFA.pmpx",
    "category": "method",
    "text": "pmpx(rc, dc, pr, pd, px, rv, pmt, vob)\n\nProper motion and parallax.\n\nGiven\n\nrc, dc: ICRS RA,Dec at catalog epoch (radians)\npr: RA proper motion (radians/year; Note 1)\npd: Dec proper motion (radians/year)\npx: Parallax (arcsec)\nrv: Radial velocity (km/s, +ve if receding)\npmt: Proper motion time interval (SSB, Julian years)\npob: SSB to observer vector (au)\n\nReturned\n\npco: Coordinate direction (BCRS unit vector)\n\nNotes\n\nThe proper motion in RA is dRA/dt rather than cos(Dec)*dRA/dt.\nThe proper motion time interval is for when the starlight reaches the solar system barycenter.\nTo avoid the need for iteration, the Roemer effect (i.e. the small annual modulation of the proper motion coming from the changing light time) is applied approximately, using the direction of the star at the catalog epoch.\n\nReferences\n\n1984 Astronomical Almanac, pp B39-B41.\nUrban, S. & Seidelmann, P. K. (eds), Explanatory Supplement to   the Astronomical Almanac, 3rd ed., University Science Books   (2013), Section 7.2.\n\nCalled\n\neraPdp: scalar product of two p-vectors\neraPn: decompose p-vector into modulus and direction\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pmsafe-NTuple{10,Any}",
    "page": "API",
    "title": "ERFA.pmsafe",
    "category": "method",
    "text": "pmsafe(ra1, dec1, pmr1, pmd1, px1, rv1, ep1a, ep1b, ep2a, ep2b)\n\nStar proper motion:  update star catalog data for space motion, with special handling to handle the zero parallax case.\n\nGiven\n\nra1: Right ascension (radians), before\ndec1: Declination (radians), before\npmr1: RA proper motion (radians/year), before\npmd1: Dec proper motion (radians/year), before\npx1: Parallax (arcseconds), before\nrv1: Radial velocity (km/s, +ve = receding), before\nep1a: \"before\" epoch, part A (Note 1)\nep1b: \"before\" epoch, part B (Note 1)\nep2a: \"after\" epoch, part A (Note 1)\nep2b: \"after\" epoch, part B (Note 1)\n\nReturned\n\nra2: Right ascension (radians), after\ndec2: Declination (radians), after\npmr2: RA proper motion (radians/year), after\npmd2: Dec proper motion (radians/year), after\npx2: Parallax (arcseconds), after\nrv2: Radial velocity (km/s, +ve = receding), after\n\nNotes\n\nThe starting and ending TDB epochs ep1a+ep1b and ep2a+ep2b are Julian Dates, apportioned in any convenient way between the two parts (A and B).  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\n   epNa            epNb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nIn accordance with normal star-catalog conventions, the object\'s right ascension and declination are freed from the effects of secular aberration.  The frame, which is aligned to the catalog equator and equinox, is Lorentzian and centered on the SSB.\nThe proper motions are the rate of change of the right ascension and declination at the catalog epoch and are in radians per TDB Julian year.\nThe parallax and radial velocity are in the same frame.\nCare is needed with units.  The star coordinates are in radians and the proper motions in radians per Julian year, but the parallax is in arcseconds.\nThe RA proper motion is in terms of coordinate angle, not true angle.  If the catalog uses arcseconds for both RA and Dec proper motions, the RA proper motion will need to be divided by cos(Dec) before use.\nStraight-line motion at constant speed, in the inertial frame, is assumed.\nAn extremely small (or zero or negative) parallax is overridden to ensure that the object is at a finite but very large distance, but not so large that the proper motion is equivalent to a large but safe speed (about 0.1c using the chosen constant).  A warning status of 1 is added to the status if this action has been taken.\nIf the space velocity is a significant fraction of c (see the constant VMAX in the function eraStarpv), it is arbitrarily set to zero.  When this action occurs, 2 is added to the status.\nThe relativistic adjustment carried out in the eraStarpv function involves an iterative calculation.  If the process fails to converge within a set number of iterations, 4 is added to the status.\n\nCalled\n\neraSeps: angle between two points\neraStarpm: update star catalog data for space motion\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pn-Tuple{AbstractArray}",
    "page": "API",
    "title": "ERFA.pn",
    "category": "method",
    "text": "pn(p)\n\nConvert a p-vector into modulus and unit vector.\n\nGiven\n\np: P-vector\n\nReturned\n\nr: Modulus\nu: Unit vector\n\nNotes\n\nIf p is null, the result is null.  Otherwise the result is a unit vector.\nIt is permissible to re-use the same array for any of the arguments.\n\nCalled\n\neraPm: modulus of p-vector\neraZp: zero p-vector\neraSxp: multiply p-vector by scalar\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pn00",
    "page": "API",
    "title": "ERFA.pn00",
    "category": "function",
    "text": "pn00(date1, date2, dpsi, deps)\n\nPrecession-nutation, IAU 2000 model:  a multi-purpose function, supporting classical (equinox-based) use directly and CIO-based use indirectly.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\ndpsi, deps: Nutation (Note 2)\n\nReturned\n\nepsa: Mean obliquity (Note 3)\nrb: Frame bias matrix (Note 4)\nrp: Precession matrix (Note 5)\nrbp: Bias-precession matrix (Note 6)\nrn: Nutation matrix (Note 7)\nrbpn: GCRS-to-true matrix (Note 8)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe caller is responsible for providing the nutation components; they are in longitude and obliquity, in radians and are with respect to the equinox and ecliptic of date.  For high-accuracy applications, free core nutation should be included as well as any other relevant corrections to the position of the CIP.\nThe returned mean obliquity is consistent with the IAU 2000 precession-nutation models.\nThe matrix rb transforms vectors from GCRS to J2000.0 mean equator and equinox by applying frame bias.\nThe matrix rp transforms vectors from J2000.0 mean equator and equinox to mean equator and equinox of date by applying precession.\nThe matrix rbp transforms vectors from GCRS to mean equator and equinox of date by applying frame bias then precession.  It is the product rp x rb.\nThe matrix rn transforms vectors from mean equator and equinox of date to true equator and equinox of date by applying the nutation (luni-solar + planetary).\nThe matrix rbpn transforms vectors from GCRS to true equator and equinox of date.  It is the product rn x rbp, applying frame bias, precession and nutation in that order.\nIt is permissible to re-use the same array in the returned arguments.  The arrays are filled in the order given.\n\nCalled\n\neraPr00: IAU 2000 precession adjustments\neraObl80: mean obliquity, IAU 1980\neraBp00: frame bias and precession matrices, IAU 2000\neraCr: copy r-matrix\neraNumat: form nutation matrix\neraRxr: product of two r-matrices\n\nReference\n\nCapitaine, N., Chapront, J., Lambert, S. and Wallace, P.,   \"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pn00a",
    "page": "API",
    "title": "ERFA.pn00a",
    "category": "function",
    "text": "pn00a(date1, date2)\n\nPrecession-nutation, IAU 2000A model:  a multi-purpose function, supporting classical (equinox-based) use directly and CIO-based use indirectly.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ndpsi, deps: Nutation (Note 2)\nepsa: Mean obliquity (Note 3)\nrb: Frame bias matrix (Note 4)\nrp: Precession matrix (Note 5)\nrbp: Bias-precession matrix (Note 6)\nrn: Nutation matrix (Note 7)\nrbpn: GCRS-to-true matrix (Notes 8,9)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any  convenient way between the two arguments.  For example,  JD(TT)=2450123.7 could be expressed in any of these ways,  among others:\n    date1          date2\n\n 2450123.7           0.0       (JD method)\n 2451545.0       -1421.3       (J2000 method)\n 2400000.5       50123.2       (MJD method)\n 2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in  cases where the loss of several decimal digits of resolution  is acceptable.  The J2000 method is best matched to the way  the argument is handled internally and will deliver the  optimum resolution.  The MJD method and the date & time methods  are both good compromises between resolution and convenience.\nThe nutation components (luni-solar + planetary, IAU 2000A) in  longitude and obliquity are in radians and with respect to the  equinox and ecliptic of date.  Free core nutation is omitted;  for the utmost accuracy, use the eraPn00  function, where the  nutation components are caller-specified.  For faster but  slightly less accurate results, use the eraPn00b function.\nThe mean obliquity is consistent with the IAU 2000 precession.\nThe matrix rb transforms vectors from GCRS to J2000.0 mean  equator and equinox by applying frame bias.\nThe matrix rp transforms vectors from J2000.0 mean equator and  equinox to mean equator and equinox of date by applying  precession.\nThe matrix rbp transforms vectors from GCRS to mean equator and  equinox of date by applying frame bias then precession.  It is  the product rp x rb.\nThe matrix rn transforms vectors from mean equator and equinox  of date to true equator and equinox of date by applying the  nutation (luni-solar + planetary).\nThe matrix rbpn transforms vectors from GCRS to true equator and  equinox of date.  It is the product rn x rbp, applying frame  bias, precession and nutation in that order.\nThe X,Y,Z coordinates of the IAU 2000A Celestial Intermediate  Pole are elements (3,1-3) of the GCRS-to-true matrix,  i.e. rbpn[2][0-2].\nIt is permissible to re-use the same array in the returned  arguments.  The arrays are filled in the order given.\n\nCalled\n\neraNut00a: nutation, IAU 2000A\neraPn00: bias/precession/nutation results, IAU 2000\n\nReference\n\nCapitaine, N., Chapront, J., Lambert, S. and Wallace, P.,   \"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pn00b",
    "page": "API",
    "title": "ERFA.pn00b",
    "category": "function",
    "text": "pn00b(date1, date2)\n\nPrecession-nutation, IAU 2000B model:  a multi-purpose function, supporting classical (equinox-based) use directly and CIO-based use indirectly.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ndpsi, deps: Nutation (Note 2)\nepsa: Mean obliquity (Note 3)\nrb: Frame bias matrix (Note 4)\nrp: Precession matrix (Note 5)\nrbp: Bias-precession matrix (Note 6)\nrn: Nutation matrix (Note 7)\nrbpn: GCRS-to-true matrix (Notes 8,9)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any  convenient way between the two arguments.  For example,  JD(TT)=2450123.7 could be expressed in any of these ways,  among others:\n    date1          date2\n\n 2450123.7           0.0       (JD method)\n 2451545.0       -1421.3       (J2000 method)\n 2400000.5       50123.2       (MJD method)\n 2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in  cases where the loss of several decimal digits of resolution  is acceptable.  The J2000 method is best matched to the way  the argument is handled internally and will deliver the  optimum resolution.  The MJD method and the date & time methods  are both good compromises between resolution and convenience.\nThe nutation components (luni-solar + planetary, IAU 2000B) in  longitude and obliquity are in radians and with respect to the  equinox and ecliptic of date.  For more accurate results, but  at the cost of increased computation, use the eraPn00a function.  For the utmost accuracy, use the eraPn00  function, where the  nutation components are caller-specified.\nThe mean obliquity is consistent with the IAU 2000 precession.\nThe matrix rb transforms vectors from GCRS to J2000.0 mean  equator and equinox by applying frame bias.\nThe matrix rp transforms vectors from J2000.0 mean equator and  equinox to mean equator and equinox of date by applying  precession.\nThe matrix rbp transforms vectors from GCRS to mean equator and  equinox of date by applying frame bias then precession.  It is  the product rp x rb.\nThe matrix rn transforms vectors from mean equator and equinox  of date to true equator and equinox of date by applying the  nutation (luni-solar + planetary).\nThe matrix rbpn transforms vectors from GCRS to true equator and  equinox of date.  It is the product rn x rbp, applying frame  bias, precession and nutation in that order.\nThe X,Y,Z coordinates of the IAU 2000B Celestial Intermediate  Pole are elements (3,1-3) of the GCRS-to-true matrix,  i.e. rbpn[2][0-2].\nIt is permissible to re-use the same array in the returned  arguments.  The arrays are filled in the stated order.\n\nCalled\n\neraNut00b: nutation, IAU 2000B\neraPn00: bias/precession/nutation results, IAU 2000\n\nReference\n\nCapitaine, N., Chapront, J., Lambert, S. and Wallace, P.,   \"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003).\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pn06",
    "page": "API",
    "title": "ERFA.pn06",
    "category": "function",
    "text": "pn06(date1, date2, dpsi, deps)\n\nPrecession-nutation, IAU 2006 model:  a multi-purpose function, supporting classical (equinox-based) use directly and CIO-based use indirectly.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\ndpsi, deps: Nutation (Note 2)\n\nReturned\n\nepsa: Mean obliquity (Note 3)\nrb: Frame bias matrix (Note 4)\nrp: Precession matrix (Note 5)\nrbp: Bias-precession matrix (Note 6)\nrn: Nutation matrix (Note 7)\nrbpn: GCRS-to-true matrix (Note 8)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any  convenient way between the two arguments.  For example,  JD(TT)=2450123.7 could be expressed in any of these ways,  among others:\n    date1          date2\n\n 2450123.7           0.0       (JD method)\n 2451545.0       -1421.3       (J2000 method)\n 2400000.5       50123.2       (MJD method)\n 2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in  cases where the loss of several decimal digits of resolution  is acceptable.  The J2000 method is best matched to the way  the argument is handled internally and will deliver the  optimum resolution.  The MJD method and the date & time methods  are both good compromises between resolution and convenience.\nThe caller is responsible for providing the nutation components;  they are in longitude and obliquity, in radians and are with  respect to the equinox and ecliptic of date.  For high-accuracy  applications, free core nutation should be included as well as  any other relevant corrections to the position of the CIP.\nThe returned mean obliquity is consistent with the IAU 2006  precession.\nThe matrix rb transforms vectors from GCRS to J2000.0 mean  equator and equinox by applying frame bias.\nThe matrix rp transforms vectors from J2000.0 mean equator and  equinox to mean equator and equinox of date by applying  precession.\nThe matrix rbp transforms vectors from GCRS to mean equator and  equinox of date by applying frame bias then precession.  It is  the product rp x rb.\nThe matrix rn transforms vectors from mean equator and equinox  of date to true equator and equinox of date by applying the  nutation (luni-solar + planetary).\nThe matrix rbpn transforms vectors from GCRS to true equator and  equinox of date.  It is the product rn x rbp, applying frame  bias, precession and nutation in that order.\nThe X,Y,Z coordinates of the Celestial Intermediate Pole are  elements (3,1-3) of the GCRS-to-true matrix, i.e. rbpn[2][0-2].\nIt is permissible to re-use the same array in the returned  arguments.  The arrays are filled in the stated order.\n\nCalled\n\neraPfw06: bias-precession F-W angles, IAU 2006\neraFw2m: F-W angles to r-matrix\neraCr: copy r-matrix\neraTr: transpose r-matrix\neraRxr: product of two r-matrices\n\nReferences\n\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pn06a",
    "page": "API",
    "title": "ERFA.pn06a",
    "category": "function",
    "text": "pn06a(date1, date2)\n\nPrecession-nutation, IAU 2006/2000A models:  a multi-purpose function, supporting classical (equinox-based) use directly and CIO-based use indirectly.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ndpsi, deps: Nutation (Note 2)\nepsa: Mean obliquity (Note 3)\nrb: Frame bias matrix (Note 4)\nrp: Precession matrix (Note 5)\nrbp: Bias-precession matrix (Note 6)\nrn: Nutation matrix (Note 7)\nrbpn: GCRS-to-true matrix (Notes 8,9)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any  convenient way between the two arguments.  For example,  JD(TT)=2450123.7 could be expressed in any of these ways,  among others:\n    date1          date2\n\n 2450123.7           0.0       (JD method)\n 2451545.0       -1421.3       (J2000 method)\n 2400000.5       50123.2       (MJD method)\n 2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in  cases where the loss of several decimal digits of resolution  is acceptable.  The J2000 method is best matched to the way  the argument is handled internally and will deliver the  optimum resolution.  The MJD method and the date & time methods  are both good compromises between resolution and convenience.\nThe nutation components (luni-solar + planetary, IAU 2000A) in  longitude and obliquity are in radians and with respect to the  equinox and ecliptic of date.  Free core nutation is omitted;  for the utmost accuracy, use the eraPn06 function, where the  nutation components are caller-specified.\nThe mean obliquity is consistent with the IAU 2006 precession.\nThe matrix rb transforms vectors from GCRS to mean J2000.0 by  applying frame bias.\nThe matrix rp transforms vectors from mean J2000.0 to mean of  date by applying precession.\nThe matrix rbp transforms vectors from GCRS to mean of date by  applying frame bias then precession.  It is the product rp x rb.\nThe matrix rn transforms vectors from mean of date to true of  date by applying the nutation (luni-solar + planetary).\nThe matrix rbpn transforms vectors from GCRS to true of date  (CIP/equinox).  It is the product rn x rbp, applying frame bias,  precession and nutation in that order.\nThe X,Y,Z coordinates of the IAU 2006/2000A Celestial  Intermediate Pole are elements (3,1-3) of the GCRS-to-true  matrix, i.e. rbpn[2][0-2].\nIt is permissible to re-use the same array in the returned  arguments.  The arrays are filled in the stated order.\n\nCalled\n\neraNut06a: nutation, IAU 2006/2000A\neraPn06: bias/precession/nutation results, IAU 2006\n\nReference\n\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pnm00a",
    "page": "API",
    "title": "ERFA.pnm00a",
    "category": "function",
    "text": "pnm00a(date1, date2)\n\nForm the matrix of precession-nutation for a given date (including frame bias), equinox-based, IAU 2000A model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrbpn: Classical NPB matrix (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(date) = rbpn * V(GCRS), where the p-vector V(date) is with respect to the true equatorial triad of date date1+date2 and the p-vector V(GCRS) is with respect to the Geocentric Celestial Reference System (IAU, 2000).\nA faster, but slightly less accurate result (about 1 mas), can be obtained by using instead the eraPnm00b function.\n\nCalled\n\neraPn00a: bias/precession/nutation, IAU 2000A\n\nReference\n\nIAU: Trans. International Astronomical Union, Vol. XXIVB;  Proc.   24th General Assembly, Manchester, UK.  Resolutions B1.3, B1.6.   (2000)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pnm00b",
    "page": "API",
    "title": "ERFA.pnm00b",
    "category": "function",
    "text": "pnm00b(date1, date2)\n\nForm the matrix of precession-nutation for a given date (including frame bias), equinox-based, IAU 2000B model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrbpn: Bias-precession-nutation matrix (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(date) = rbpn * V(GCRS), where the p-vector V(date) is with respect to the true equatorial triad of date date1+date2 and the p-vector V(GCRS) is with respect to the Geocentric Celestial Reference System (IAU, 2000).\nThe present function is faster, but slightly less accurate (about 1 mas), than the eraPnm00a function.\n\nCalled\n\neraPn00b: bias/precession/nutation, IAU 2000B\n\nReference\n\nIAU: Trans. International Astronomical Union, Vol. XXIVB;  Proc.   24th General Assembly, Manchester, UK.  Resolutions B1.3, B1.6.   (2000)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pnm06a",
    "page": "API",
    "title": "ERFA.pnm06a",
    "category": "function",
    "text": "pnm06a(date1, date2)\n\nForm the matrix of precession-nutation for a given date (including frame bias), IAU 2006 precession and IAU 2000A nutation models.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nrnpb: Bias-precession-nutation matrix (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(date) = rnpb * V(GCRS), where the p-vector V(date) is with respect to the true equatorial triad of date date1+date2 and the p-vector V(GCRS) is with respect to the Geocentric Celestial Reference System (IAU, 2000).\n\nCalled\n\neraPfw06: bias-precession F-W angles, IAU 2006\neraNut06a: nutation, IAU 2006/2000A\neraFw2m: F-W angles to r-matrix\n\nReference\n\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pnm80",
    "page": "API",
    "title": "ERFA.pnm80",
    "category": "function",
    "text": "pnm80(date1, date2)\n\nForm the matrix of precession/nutation for a given date, IAU 1976 precession model, IAU 1980 nutation model.\n\nGiven\n\ndate1, date2: TDB date (Note 1)\n\nReturned\n\nrmatpn: Combined precession/nutation matrix\n\nNotes\n\nThe TDB date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe matrix operates in the sense V(date) = rmatpn * V(J2000), where the p-vector V(date) is with respect to the true equatorial triad of date date1+date2 and the p-vector V(J2000) is with respect to the mean equatorial triad of epoch J2000.0.\n\nCalled\n\neraPmat76: precession matrix, IAU 1976\neraNutm80: nutation matrix, IAU 1980\neraRxr: product of two r-matrices\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992),   Section 3.3 (p145).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pom00-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.pom00",
    "category": "method",
    "text": "pom00(xp, yp, sp)\n\nForm the matrix of polar motion for a given date, IAU 2000.\n\nGiven\n\nxp, yp: Coordinates of the pole (radians, Note 1)\nsp: The TIO locator s\' (radians, Note 2)\n\nReturned\n\nrpom: Polar-motion matrix (Note 3)\n\nNotes\n\nThe arguments xp and yp are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions 2003), measured along the meridians to 0 and 90 deg west respectively.\nThe argument sp is the TIO locator s\', in radians, which positions the Terrestrial Intermediate Origin on the equator.  It is obtained from polar motion observations by numerical integration, and so is in essence unpredictable.  However, it is dominated by a secular drift of about 47 microarcseconds per century, and so can be taken into account by using s\' = -47*t, where t is centuries since J2000.0.  The function eraSp00 implements this approximation.\nThe matrix operates in the sense V(TRS) = rpom * V(CIP), meaning that it is the final rotation when computing the pointing direction to a celestial source.\n\nCalled\n\neraIr: initialize r-matrix to identity\neraRz: rotate around Z-axis\neraRy: rotate around Y-axis\neraRx: rotate around X-axis\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ppp",
    "page": "API",
    "title": "ERFA.ppp",
    "category": "function",
    "text": "ppp(a, b)\n\nP-vector addition.\n\nGiven\n\na: First p-vector\nb: Second p-vector\n\nReturned\n\napb: A + b\n\nNote\n\nIt is permissible to re-use the same array for any of the    arguments.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ppsp-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.ppsp",
    "category": "method",
    "text": "ppsp(a, s, b)\n\nP-vector plus scaled p-vector.\n\nGiven\n\na: First p-vector\ns: Scalar (multiplier for b)\nb: Second p-vector\n\nReturned\n\napsb: A + s*b\n\nNote\n\nIt is permissible for any of a, b and apsb to be the same array.\n\nCalled\n\neraSxp: multiply p-vector by scalar\neraPpp: p-vector plus p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pr00-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.pr00",
    "category": "method",
    "text": "pr00(date1, date2)\n\nPrecession-rate part of the IAU 2000 precession-nutation models (part of MHB2000).\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\ndpsipr, depspr: Precession corrections (Notes 2,3)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe precession adjustments are expressed as \"nutation components\", corrections in longitude and obliquity with respect to the J2000.0 equinox and ecliptic.\nAlthough the precession adjustments are stated to be with respect to Lieske et al. (1977), the MHB2000 model does not specify which set of Euler angles are to be used and how the adjustments are to be applied.  The most literal and straightforward procedure is to adopt the 4-rotation epsilon0, psiA, omegaA, xiA option, and to add dpsipr to psiA and depspr to both omegaA and eps_A.\nThis is an implementation of one aspect of the IAU 2000A nutation model, formally adopted by the IAU General Assembly in 2000, namely MHB2000 (Mathews et al. 2002).\n\nReferences\n\nLieske, J.H., Lederle, T., Fricke, W. & Morando, B., \"Expressions   for the precession quantities based upon the IAU (1976) System of   Astronomical Constants\", Astron.Astrophys., 58, 1-16 (1977)\nMathews, P.M., Herring, T.A., Buffet, B.A., \"Modeling of nutation   and precession   New nutation series for nonrigid Earth and   insights into the Earth\'s interior\", J.Geophys.Res., 107, B4,\nThe MHB2000 code itself was obtained on 9th September 2002\nfrom ftp://maia.usno.navy.mil/conv2000/chapter5/IAU2000A.\nWallace, P.T., \"Software for Implementing the IAU 2000   Resolutions\", in IERS Workshop 5.1 (2002).\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.prec76-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.prec76",
    "category": "method",
    "text": "prec76(date01, date02, date11, date12)\n\nIAU 1976 precession model.\n\nThis function forms the three Euler angles which implement general precession between two dates, using the IAU 1976 model (as for the FK5 catalog).\n\nGiven\n\ndate01, date02: TDB starting date (Note 1)\ndate11, date12: TDB ending date (Note 1)\n\nReturned\n\nzeta: 1st rotation: radians cw around z\nz: 3rd rotation: radians cw around z\ntheta: 2nd rotation: radians ccw around y\n\nNotes\n\nThe dates date01+date02 and date11+date12 are Julian Dates, apportioned in any convenient way between the arguments daten1 and daten2.  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\n  daten1        daten2\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience. The two dates may be expressed using different methods, but at the risk of losing some resolution.\nThe accumulated precession angles zeta, z, theta are expressed through canonical polynomials which are valid only for a limited time span.  In addition, the IAU 1976 precession rate is known to be imperfect.  The absolute accuracy of the present formulation is better than 0.1 arcsec from 1960AD to 2040AD, better than 1 arcsec from 1640AD to 2360AD, and remains below 3 arcsec for the whole of the period 500BC to 3000AD.  The errors exceed 10 arcsec outside the range 1200BC to 3900AD, exceed 100 arcsec outside 4200BC to 5600AD and exceed 1000 arcsec outside 6800BC to 8200AD.\nThe three angles are returned in the conventional order, which is not the same as the order of the corresponding Euler rotations.  The precession matrix is R3(-z) x R2(+theta) x R_3(-zeta).\n\nReference\n\nLieske, J.H., 1979, Astron.Astrophys. 73, 282, equations   (6) & (7), p283.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pv2p-Tuple{Any}",
    "page": "API",
    "title": "ERFA.pv2p",
    "category": "method",
    "text": "pv2p(pv)\n\nDiscard velocity component of a pv-vector.\n\nGiven\n\npv: Pv-vector\n\nReturned\n\np: P-vector\n\nCalled\n\neraCp: copy p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pv2s-Tuple{Any}",
    "page": "API",
    "title": "ERFA.pv2s",
    "category": "method",
    "text": "pv2s(pv)\n\nConvert position/velocity from Cartesian to spherical coordinates.\n\nGiven\n\npv: Pv-vector\n\nReturned\n\ntheta: Longitude angle (radians)\nphi: Latitude angle (radians)\nr: Radial distance\ntd: Rate of change of theta\npd: Rate of change of phi\nrd: Rate of change of r\n\nNotes\n\nIf the position part of pv is null, theta, phi, td and pd are indeterminate.  This is handled by extrapolating the position through unit time by using the velocity part of pv.  This moves the origin without changing the direction of the velocity component.  If the position and velocity components of pv are both null, zeroes are returned for all six results.\nIf the position is a pole, theta, td and pd are indeterminate. In such cases zeroes are returned for all three.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvdpv-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.pvdpv",
    "category": "method",
    "text": "pvdpv(a, b)\n\nInner (=scalar=dot) product of two pv-vectors.\n\nGiven\n\na: First pv-vector\nb: Second pv-vector\n\nReturned\n\nadb: A . b (see note)\n\nNote\n\nIf the position and velocity components of the two pv-vectors are    ( ap, av ) and ( bp, bv ), the result, a . b, is the pair of    numbers ( ap . bp , ap . bv + av . bp ).  The two numbers are the    dot-product of the two p-vectors and its derivative.\n\nCalled\n\neraPdp: scalar product of two p-vectors\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvm-Tuple{Any}",
    "page": "API",
    "title": "ERFA.pvm",
    "category": "method",
    "text": "pvm(pv)\n\nModulus of pv-vector.\n\nGiven\n\npv: Pv-vector\n\nReturned\n\nr: Modulus of position component\ns: Modulus of velocity component\n\nCalled\n\neraPm: modulus of p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvmpv",
    "page": "API",
    "title": "ERFA.pvmpv",
    "category": "function",
    "text": "pvmpv(a, b)\n\nSubtract one pv-vector from another.\n\nGiven\n\na: First pv-vector\nb: Second pv-vector\n\nReturned\n\namb: A - b\n\nNote\n\nIt is permissible to re-use the same array for any of the    arguments.\n\nCalled\n\neraPmp: p-vector minus p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvppv",
    "page": "API",
    "title": "ERFA.pvppv",
    "category": "function",
    "text": "pvppv(a, b)\n\nAdd one pv-vector to another.\n\nGiven\n\na: First pv-vector\nb: Second pv-vector\n\nReturned\n\napb: A + b\n\nNote\n\nIt is permissible to re-use the same array for any of the    arguments.\n\nCalled\n\neraPpp: p-vector plus p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvstar-Tuple{Any}",
    "page": "API",
    "title": "ERFA.pvstar",
    "category": "method",
    "text": "pvstar(pv)\n\nConvert star position+velocity vector to catalog coordinates.\n\nGiven (Note 1)\n\npv: pv-vector (au, au/day)\n\nReturned (Note 2)\n\nra: Right ascension (radians)\ndec: Declination (radians)\npmr: RA proper motion (radians/year)\npmd: Dec proper motion (radians/year)\npx: Parallax (arcsec)\nrv: Radial velocity (km/s, positive = receding)\n\nNotes\n\nThe specified pv-vector is the coordinate direction (and its rate of change) for the date at which the light leaving the star reached the solar-system barycenter.\nThe star data returned by this function are \"observables\" for an imaginary observer at the solar-system barycenter.  Proper motion and radial velocity are, strictly, in terms of barycentric coordinate time, TCB.  For most practical applications, it is permissible to neglect the distinction between TCB and ordinary \"proper\" time on Earth (TT/TAI).  The result will, as a rule, be limited by the intrinsic accuracy of the proper-motion and radial-velocity data;  moreover, the supplied pv-vector is likely to be merely an intermediate result (for example generated by the function eraStarpv), so that a change of time unit will cancel out overall.\nIn accordance with normal star-catalog conventions, the object\'s right ascension and declination are freed from the effects of secular aberration.  The frame, which is aligned to the catalog equator and equinox, is Lorentzian and centered on the SSB.\nSummarizing, the specified pv-vector is for most stars almost identical to the result of applying the standard geometrical \"space motion\" transformation to the catalog data.  The differences, which are the subject of the Stumpff paper cited below, are:\n(i) In stars with significant radial velocity and proper motion, the constantly changing light-time distorts the apparent proper motion.  Note that this is a classical, not a relativistic, effect.\n(ii) The transformation complies with special relativity.\nCare is needed with units.  The star coordinates are in radians and the proper motions in radians per Julian year, but the parallax is in arcseconds; the radial velocity is in km/s, but the pv-vector result is in au and au/day.\nThe proper motions are the rate of change of the right ascension and declination at the catalog epoch and are in radians per Julian year.  The RA proper motion is in terms of coordinate angle, not true angle, and will thus be numerically larger at high declinations.\nStraight-line motion at constant speed in the inertial frame is assumed.  If the speed is greater than or equal to the speed of light, the function aborts with an error status.\nThe inverse transformation is performed by the function eraStarpv.\n\nCalled\n\neraPn: decompose p-vector into modulus and direction\neraPdp: scalar product of two p-vectors\neraSxp: multiply p-vector by scalar\neraPmp: p-vector minus p-vector\neraPm: modulus of p-vector\neraPpp: p-vector plus p-vector\neraPv2s: pv-vector to spherical\neraAnp: normalize angle into range 0 to 2pi\n\nReference\n\nStumpff, P., 1985, Astron.Astrophys. 144, 232-240.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvtob-NTuple{7,Any}",
    "page": "API",
    "title": "ERFA.pvtob",
    "category": "method",
    "text": "pvtob(elong, phi, height, xp, yp, sp, theta)\n\nPosition and velocity of a terrestrial observing station.\n\nGiven\n\nelong: Longitude (radians, east +ve, Note 1)\nphi: Latitude (geodetic, radians, Note 1)\nhm: Height above ref. ellipsoid (geodetic, m)\nxp, yp: Coordinates of the pole (radians, Note 2)\nsp: The TIO locator s\' (radians, Note 2)\ntheta: Earth rotation angle (radians, Note 3)\n\nReturned\n\npv: Position/velocity vector (m, m/s, CIRS)\n\nNotes\n\nThe terrestrial coordinates are with respect to the ERFA_WGS84 reference ellipsoid.\nxp and yp are the coordinates (in radians) of the Celestial Intermediate Pole with respect to the International Terrestrial Reference System (see IERS Conventions), measured along the meridians 0 and 90 deg west respectively.  sp is the TIO locator s\', in radians, which positions the Terrestrial Intermediate Origin on the equator.  For many applications, xp, yp and (especially) sp can be set to zero.\nIf theta is Greenwich apparent sidereal time instead of Earth rotation angle, the result is with respect to the true equator and equinox of date, i.e. with the x-axis at the equinox rather than the celestial intermediate origin.\nThe velocity units are meters per UT1 second, not per SI second. This is unlikely to have any practical consequences in the modern era.\nNo validation is performed on the arguments.  Error cases that could lead to arithmetic exceptions are trapped by the eraGd2gc function, and the result set to zeros.\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nUrban, S. & Seidelmann, P. K. (eds), Explanatory Supplement to   the Astronomical Almanac, 3rd ed., University Science Books   (2013), Section 7.4.3.3.\n\nCalled\n\neraGd2gc: geodetic to geocentric transformation\neraPom00: polar motion matrix\neraTrxp: product of transpose of r-matrix and p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvu-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.pvu",
    "category": "method",
    "text": "pvu(dt, pv)\n\nUpdate a pv-vector.\n\nGiven\n\ndt: Time interval\npv: Pv-vector\n\nReturned\n\nupv: P updated, v unchanged\n\nNotes\n\n\"Update\" means \"refer the position component of the vector to a new date dt time units from the existing date\".\nThe time units of dt must match those of the velocity.\nIt is permissible for pv and upv to be the same array.\n\nCalled\n\neraPpsp: p-vector plus scaled p-vector\neraCp: copy p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvup-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.pvup",
    "category": "method",
    "text": "pvup(dt, pv)\n\nUpdate a pv-vector, discarding the velocity component.\n\nGiven\n\ndt: Time interval\npv: Pv-vector\n\nReturned\n\np: P-vector\n\nNotes\n\n\"Update\" means \"refer the position component of the vector to a new date dt time units from the existing date\".\nThe time units of dt must match those of the velocity.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pvxpv",
    "page": "API",
    "title": "ERFA.pvxpv",
    "category": "function",
    "text": "pvxpv(a, b)\n\nOuter (=vector=cross) product of two pv-vectors.\n\nGiven\n\na: First pv-vector\nb: Second pv-vector\n\nReturned\n\naxb: A x b\n\nNotes\n\nIf the position and velocity components of the two pv-vectors are ( ap, av ) and ( bp, bv ), the result, a x b, is the pair of vectors ( ap x bp, ap x bv + av x bp ).  The two vectors are the cross-product of the two p-vectors and its derivative.\nIt is permissible to re-use the same array for any of the arguments.\n\nCalled\n\neraCpv: copy pv-vector\neraPxp: vector product of two p-vectors\neraPpp: p-vector plus p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.pxp",
    "page": "API",
    "title": "ERFA.pxp",
    "category": "function",
    "text": "pxp(a, b)\n\np-vector outer (=vector=cross) product.\n\nGiven\n\na: First p-vector\nb: Second p-vector\n\nReturned\n\naxb: A x b\n\nNote\n\nIt is permissible to re-use the same array for any of the    arguments.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.refco-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.refco",
    "category": "method",
    "text": "refco(phpa, tc, rh, wl)\n\nDetermine the constants A and B in the atmospheric refraction model dZ = A tan Z + B tan^3 Z.\n\nZ is the \"observed\" zenith distance (i.e. affected by refraction) and dZ is what to add to Z to give the \"topocentric\" (i.e. in vacuo) zenith distance.\n\nGiven\n\nphpa: Pressure at the observer (hPa = millibar)\ntc: Ambient temperature at the observer (deg C)\nrh: Relative humidity at the observer (range 0-1)\nwl: Wavelength (micrometers)\n\nReturned\n\nrefa: tan Z coefficient (radians)\nrefb: tan^3 Z coefficient (radians)\n\nNotes\n\nThe model balances speed and accuracy to give good results in applications where performance at low altitudes is not paramount. Performance is maintained across a range of conditions, and applies to both optical/IR and radio.\nThe model omits the effects of (i) height above sea level (apart from the reduced pressure itself), (ii) latitude (i.e. the flattening of the Earth), (iii) variations in tropospheric lapse rate and (iv) dispersive effects in the radio.\nThe model was tested using the following range of conditions:\nlapse rates 0.0055, 0.0065, 0.0075 deg/meter   latitudes 0, 25, 50, 75 degrees   heights 0, 2500, 5000 meters ASL   pressures mean for height -10% to +5% in steps of 5%   temperatures -10 deg to +20 deg with respect to 280 deg at SL   relative humidity 0, 0.5, 1   wavelengths 0.4, 0.6, ... 2 micron, + radio   zenith distances 15, 45, 75 degrees\nThe accuracy with respect to raytracing through a model atmosphere was as follows:\n                   worst         RMS\noptical/IR           62 mas       8 mas   radio               319 mas      49 mas\nFor this particular set of conditions:\nlapse rate 0.0065 K/meter   latitude 50 degrees   sea level   pressure 1005 mb   temperature 280.15 K   humidity 80%   wavelength 5740 Angstroms\nthe results were as follows:\nZD       raytrace     eraRefco   Saastamoinen\n10         10.27        10.27        10.27   20         21.19        21.20        21.19   30         33.61        33.61        33.60   40         48.82        48.83        48.81   45         58.16        58.18        58.16   50         69.28        69.30        69.27   55         82.97        82.99        82.95   60        100.51       100.54       100.50   65        124.23       124.26       124.20   70        158.63       158.68       158.61   72        177.32       177.37       177.31   74        200.35       200.38       200.32   76        229.45       229.43       229.42   78        267.44       267.29       267.41   80        319.13       318.55       319.10\ndeg        arcsec       arcsec       arcsec\nThe values for Saastamoinen\'s formula (which includes terms up to tan^5) are taken from Hohenkerk and Sinclair (1985).\nA wl value in the range 0-100 selects the optical/IR case and is wavelength in micrometers.  Any value outside this range selects the radio case.\nOutlandish input parameters are silently limited to mathematically safe values.  Zero pressure is permissible, and causes zeroes to be returned.\nThe algorithm draws on several sources, as follows:\na) The formula for the saturation vapour pressure of water as    a function of temperature and temperature is taken from    Equations (A4.5-A4.7) of Gill (1982).\nb) The formula for the water vapour pressure, given the    saturation pressure and the relative humidity, is from    Crane (1976), Equation (2.5.5).\nc) The refractivity of air is a function of temperature,    total pressure, water-vapour pressure and, in the case    of optical/IR, wavelength.  The formulae for the two cases are    developed from Hohenkerk & Sinclair (1985) and Rueger (2002).\nd) The formula for beta, the ratio of the scale height of the    atmosphere to the geocentric distance of the observer, is    an adaption of Equation (9) from Stone (1996).  The    adaptations, arrived at empirically, consist of (i) a small    adjustment to the coefficient and (ii) a humidity term for the    radio case only.\ne) The formulae for the refraction constants as a function of    n-1 and beta are from Green (1987), Equation (4.31).\n\nReferences\n\nCrane, R.K., Meeks, M.L. (ed), \"Refraction Effects in the Neutral   Atmosphere\", Methods of Experimental Physics: Astrophysics 12B,   Academic Press, 1976.\nGill, Adrian E., \"Atmosphere-Ocean Dynamics\", Academic Press,\n\nGreen, R.M., \"Spherical Astronomy\", Cambridge University Press,\n\nHohenkerk, C.Y., & Sinclair, A.T., NAO Technical Note No. 63,\n\nRueger, J.M., \"Refractive Index Formulae for Electronic Distance   Measurement with Radio and Millimetre Waves\", in Unisurv Report   S-68, School of Surveying and Spatial Information Systems,   University of New South Wales, Sydney, Australia, 2002.\nStone, Ronald C., P.A.S.P. 108, 1051-1058, 1996.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.rm2v-Tuple{Any}",
    "page": "API",
    "title": "ERFA.rm2v",
    "category": "method",
    "text": "rm2v(r)\n\nExpress an r-matrix as an r-vector.\n\nGiven\n\nr: Rotation matrix\n\nReturned\n\nw: Rotation vector (Note 1)\n\nNotes\n\nA rotation matrix describes a rotation through some angle about some arbitrary axis called the Euler axis.  The \"rotation vector\" returned by this function has the same direction as the Euler axis, and its magnitude is the angle in radians.  (The magnitude and direction can be separated by means of the function eraPn.)\nIf r is null, so is the result.  If r is not a rotation matrix the result is undefined;  r must be proper (i.e. have a positive determinant) and real orthogonal (inverse = transpose).\nThe reference frame rotates clockwise as seen looking along the rotation vector from the origin.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.rv2m-Tuple{Any}",
    "page": "API",
    "title": "ERFA.rv2m",
    "category": "method",
    "text": "rv2m(w)\n\nForm the r-matrix corresponding to a given r-vector.\n\nGiven\n\nw: Rotation vector (Note 1)\n\nReturned\n\nr: Rotation matrix\n\nNotes\n\nA rotation matrix describes a rotation through some angle about some arbitrary axis called the Euler axis.  The \"rotation vector\" supplied to This function has the same direction as the Euler axis, and its magnitude is the angle in radians.\nIf w is null, the unit matrix is returned.\nThe reference frame rotates clockwise as seen looking along the rotation vector from the origin.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.rx",
    "page": "API",
    "title": "ERFA.rx",
    "category": "function",
    "text": "rx(phi, r)\n\nRotate an r-matrix about the x-axis.\n\nGiven\n\nphi: Angle (radians)\n\nGiven and returned\n\nr: r-matrix, rotated\n\nNotes\n\nCalling this function with positive phi incorporates in the supplied r-matrix r an additional rotation, about the x-axis, anticlockwise as seen looking towards the origin from positive x.\nThe additional rotation can be represented by this matrix:\n(  1        0            0      )\n(                               )\n(  0   + cos(phi)   + sin(phi)  )\n(                               )\n(  0   - sin(phi)   + cos(phi)  )\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.rxp-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.rxp",
    "category": "method",
    "text": "rxp(r, p)\n\nMultiply a p-vector by an r-matrix.\n\nGiven\n\nr: R-matrix\np: P-vector\n\nReturned\n\nrp: R * p\n\nNote\n\nIt is permissible for p and rp to be the same array.\n\nCalled\n\neraCp: copy p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.rxpv-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.rxpv",
    "category": "method",
    "text": "rxpv(r, pv)\n\nMultiply a pv-vector by an r-matrix.\n\nGiven\n\nr: R-matrix\npv: Pv-vector\n\nReturned\n\nrpv: R * pv\n\nNote\n\nIt is permissible for pv and rpv to be the same array.\n\nCalled\n\neraRxp: product of r-matrix and p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.rxr-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.rxr",
    "category": "method",
    "text": "rxr(a, b)\n\nMultiply two r-matrices.\n\nGiven\n\na: First r-matrix\nb: Second r-matrix\n\nReturned\n\natb: A * b\n\nNote\n\nIt is permissible to re-use the same array for any of the    arguments.\n\nCalled\n\neraCr: copy r-matrix\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ry",
    "page": "API",
    "title": "ERFA.ry",
    "category": "function",
    "text": "ry(phi, r)\n\nRotate an r-matrix about the y-axis.\n\nGiven\n\ntheta: Angle (radians)\n\nGiven and returned\n\nr: r-matrix, rotated\n\nNotes\n\nCalling this function with positive theta incorporates in the supplied r-matrix r an additional rotation, about the y-axis, anticlockwise as seen looking towards the origin from positive y.\nThe additional rotation can be represented by this matrix:\n(  + cos(theta)     0      - sin(theta)  )\n(                                        )\n(       0           1           0        )\n(                                        )\n(  + sin(theta)     0      + cos(theta)  )\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.rz",
    "page": "API",
    "title": "ERFA.rz",
    "category": "function",
    "text": "rz(phi, r)\n\nRotate an r-matrix about the z-axis.\n\nGiven\n\npsi: Angle (radians)\n\nGiven and returned\n\nr: r-matrix, rotated\n\nNotes\n\nCalling this function with positive psi incorporates in the supplied r-matrix r an additional rotation, about the z-axis, anticlockwise as seen looking towards the origin from positive z.\nThe additional rotation can be represented by this matrix:\n(  + cos(psi)   + sin(psi)     0  )\n(                                 )\n(  - sin(psi)   + cos(psi)     0  )\n(                                 )\n(       0            0         1  )\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s00",
    "page": "API",
    "title": "ERFA.s00",
    "category": "function",
    "text": "s00(date1, date2, x, y)\n\nThe CIO locator s, positioning the Celestial Intermediate Origin on the equator of the Celestial Intermediate Pole, given the CIP\'s X,Y coordinates.  Compatible with IAU 2000A precession-nutation.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\nx, y: CIP coordinates (Note 3)\n\nReturned\n\nThe CIO locator s in radians (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe CIO locator s is the difference between the right ascensions of the same point in two systems:  the two systems are the GCRS and the CIP,CIO, and the point is the ascending node of the CIP equator.  The quantity s remains below 0.1 arcsecond throughout 1900-2100.\nThe series used to compute s is in fact for s+XY/2, where X and Y are the x and y components of the CIP unit vector;  this series is more compact than a direct series for s would be.  This function requires X,Y to be supplied by the caller, who is responsible for providing values that are consistent with the supplied date.\nThe model is consistent with the IAU 2000A precession-nutation.\n\nCalled\n\neraFal03: mean anomaly of the Moon\neraFalp03: mean anomaly of the Sun\neraFaf03: mean argument of the latitude of the Moon\neraFad03: mean elongation of the Moon from the Sun\neraFaom03: mean longitude of the Moon\'s ascending node\neraFave03: mean longitude of Venus\neraFae03: mean longitude of Earth\neraFapa03: general accumulated precession in longitude\n\nReferences\n\nCapitaine, N., Chapront, J., Lambert, S. and Wallace, P.,   \"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s00a",
    "page": "API",
    "title": "ERFA.s00a",
    "category": "function",
    "text": "s00a(date1, date2)\n\nThe CIO locator s, positioning the Celestial Intermediate Origin on the equator of the Celestial Intermediate Pole, using the IAU 2000A precession-nutation model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nThe CIO locator s in radians (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe CIO locator s is the difference between the right ascensions of the same point in two systems.  The two systems are the GCRS and the CIP,CIO, and the point is the ascending node of the CIP equator.  The CIO locator s remains a small fraction of 1 arcsecond throughout 1900-2100.\nThe series used to compute s is in fact for s+XY/2, where X and Y are the x and y components of the CIP unit vector;  this series is more compact than a direct series for s would be.  The present function uses the full IAU 2000A nutation model when predicting the CIP position.  Faster results, with no significant loss of accuracy, can be obtained via the function eraS00b, which uses instead the IAU 2000B truncated model.\n\nCalled\n\neraPnm00a: classical NPB matrix, IAU 2000A\neraBnp2xy: extract CIP X,Y from the BPN matrix\neraS00: the CIO locator s, given X,Y, IAU 2000A\n\nReferences\n\nCapitaine, N., Chapront, J., Lambert, S. and Wallace, P.,   \"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s00b",
    "page": "API",
    "title": "ERFA.s00b",
    "category": "function",
    "text": "s00b(date1, date2)\n\nThe CIO locator s, positioning the Celestial Intermediate Origin on the equator of the Celestial Intermediate Pole, using the IAU 2000B precession-nutation model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nThe CIO locator s in radians (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe CIO locator s is the difference between the right ascensions of the same point in two systems.  The two systems are the GCRS and the CIP,CIO, and the point is the ascending node of the CIP equator.  The CIO locator s remains a small fraction of 1 arcsecond throughout 1900-2100.\nThe series used to compute s is in fact for s+XY/2, where X and Y are the x and y components of the CIP unit vector;  this series is more compact than a direct series for s would be.  The present function uses the IAU 2000B truncated nutation model when predicting the CIP position.  The function eraS00a uses instead the full IAU 2000A model, but with no significant increase in accuracy and at some cost in speed.\n\nCalled\n\neraPnm00b: classical NPB matrix, IAU 2000B\neraBnp2xy: extract CIP X,Y from the BPN matrix\neraS00: the CIO locator s, given X,Y, IAU 2000A\n\nReferences\n\nCapitaine, N., Chapront, J., Lambert, S. and Wallace, P.,   \"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s06",
    "page": "API",
    "title": "ERFA.s06",
    "category": "function",
    "text": "s06(date1, date2, x, y)\n\nThe CIO locator s, positioning the Celestial Intermediate Origin on the equator of the Celestial Intermediate Pole, given the CIP\'s X,Y coordinates.  Compatible with IAU 2006/2000A precession-nutation.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\nx, y: CIP coordinates (Note 3)\n\nReturned\n\nThe CIO locator s in radians (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe CIO locator s is the difference between the right ascensions of the same point in two systems:  the two systems are the GCRS and the CIP,CIO, and the point is the ascending node of the CIP equator.  The quantity s remains below 0.1 arcsecond throughout 1900-2100.\nThe series used to compute s is in fact for s+XY/2, where X and Y are the x and y components of the CIP unit vector;  this series is more compact than a direct series for s would be.  This function requires X,Y to be supplied by the caller, who is responsible for providing values that are consistent with the supplied date.\nThe model is consistent with the \"P03\" precession (Capitaine et al. 2003), adopted by IAU 2006 Resolution 1, 2006, and the IAU 2000A nutation (with P03 adjustments).\n\nCalled\n\neraFal03: mean anomaly of the Moon\neraFalp03: mean anomaly of the Sun\neraFaf03: mean argument of the latitude of the Moon\neraFad03: mean elongation of the Moon from the Sun\neraFaom03: mean longitude of the Moon\'s ascending node\neraFave03: mean longitude of Venus\neraFae03: mean longitude of Earth\neraFapa03: general accumulated precession in longitude\n\nReferences\n\nCapitaine, N., Wallace, P.T. & Chapront, J., 2003, Astron.   Astrophys. 432, 355\nMcCarthy, D.D., Petit, G. (eds.) 2004, IERS Conventions (2003),   IERS Technical Note No. 32, BKG\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s06a",
    "page": "API",
    "title": "ERFA.s06a",
    "category": "function",
    "text": "s06a(date1, date2)\n\nThe CIO locator s, positioning the Celestial Intermediate Origin on the equator of the Celestial Intermediate Pole, using the IAU 2006 precession and IAU 2000A nutation models.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nThe CIO locator s in radians (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe CIO locator s is the difference between the right ascensions of the same point in two systems.  The two systems are the GCRS and the CIP,CIO, and the point is the ascending node of the CIP equator.  The CIO locator s remains a small fraction of 1 arcsecond throughout 1900-2100.\nThe series used to compute s is in fact for s+XY/2, where X and Y are the x and y components of the CIP unit vector;  this series is more compact than a direct series for s would be.  The present function uses the full IAU 2000A nutation model when predicting the CIP position.\n\nCalled\n\neraPnm06a: classical NPB matrix, IAU 2006/2000A\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS06: the CIO locator s, given X,Y, IAU 2006\n\nReferences\n\nCapitaine, N., Chapront, J., Lambert, S. and Wallace, P.,   \"Expressions for the Celestial Intermediate Pole and Celestial   Ephemeris Origin consistent with the IAU 2000A precession-   nutation model\", Astron.Astrophys. 400, 1145-1154 (2003)\nn.b. The celestial ephemeris origin (CEO) was renamed \"celestial   intermediate origin\" (CIO) by IAU 2006 Resolution 2.\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\nMcCarthy, D. D., Petit, G. (eds.), 2004, IERS Conventions (2003),   IERS Technical Note No. 32, BKG\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s2c-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.s2c",
    "category": "method",
    "text": "s2c(theta, phi)\n\nConvert spherical coordinates to Cartesian.\n\nGiven\n\ntheta: Longitude angle (radians)\nphi: Latitude angle (radians)\n\nReturned\n\nc: Direction cosines\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s2p-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.s2p",
    "category": "method",
    "text": "s2p(theta, phi, r)\n\nConvert spherical polar coordinates to p-vector.\n\nGiven\n\ntheta: Longitude angle (radians)\nphi: Latitude angle (radians)\nr: Radial distance\n\nReturned\n\np: Cartesian coordinates\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraSxp: multiply p-vector by scalar\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s2pv-NTuple{6,Any}",
    "page": "API",
    "title": "ERFA.s2pv",
    "category": "method",
    "text": "s2pv(theta, phi, r, td, pd, rd)\n\nConvert position/velocity from spherical to Cartesian coordinates.\n\nGiven\n\ntheta: Longitude angle (radians)\nphi: Latitude angle (radians)\nr: Radial distance\ntd: Rate of change of theta\npd: Rate of change of phi\nrd: Rate of change of r\n\nReturned\n\npv: Pv-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.s2xpv-Tuple{Any,Any,Any}",
    "page": "API",
    "title": "ERFA.s2xpv",
    "category": "method",
    "text": "s2xpv(s1, s2, pv)\n\nMultiply a pv-vector by two scalars.\n\nGiven\n\ns1: Scalar to multiply position component by\ns2: Scalar to multiply velocity component by\npv: Pv-vector\n\nReturned\n\nspv: Pv-vector: p scaled by s1, v scaled by s2\n\nNote\n\nIt is permissible for pv and spv to be the same array.\n\nCalled\n\neraSxp: multiply p-vector by scalar\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.sepp-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.sepp",
    "category": "method",
    "text": "sepp(a, b)\n\nAngular separation between two p-vectors.\n\nGiven\n\na: First p-vector (not necessarily unit length)\nb: Second p-vector (not necessarily unit length)\n\nReturned\n\nAngular separation (radians, always positive)\n\nNotes\n\nIf either vector is null, a zero result is returned.\nThe angular separation is most simply formulated in terms of scalar product.  However, this gives poor accuracy for angles near zero and pi.  The present algorithm uses both cross product and dot product, to deliver full accuracy whatever the size of the angle.\n\nCalled\n\neraPxp: vector product of two p-vectors\neraPm: modulus of p-vector\neraPdp: scalar product of two p-vectors\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.seps-NTuple{4,Any}",
    "page": "API",
    "title": "ERFA.seps",
    "category": "method",
    "text": "seps(al, ap, bl, bp)\n\nAngular separation between two sets of spherical coordinates.\n\nGiven\n\nal: First longitude (radians)\nap: First latitude (radians)\nbl: Second longitude (radians)\nbp: Second latitude (radians)\n\nReturned\n\nAngular separation (radians)\n\nCalled\n\neraS2c: spherical coordinates to unit vector\neraSepp: angular separation between two p-vectors\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.sp00",
    "page": "API",
    "title": "ERFA.sp00",
    "category": "function",
    "text": "sp00(date1, date2)\n\nThe TIO locator s\', positioning the Terrestrial Intermediate Origin on the equator of the Celestial Intermediate Pole.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nThe TIO locator s\' in radians (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe TIO locator s\' is obtained from polar motion observations by numerical integration, and so is in essence unpredictable. However, it is dominated by a secular drift of about 47 microarcseconds per century, which is the approximation evaluated by the present function.\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.starpm-NTuple{10,Any}",
    "page": "API",
    "title": "ERFA.starpm",
    "category": "method",
    "text": "starpm(ra1, dec1, pmr1, pmd1, px1, rv1, ep1a, ep1b, ep2a, ep2b)\n\nStar proper motion:  update star catalog data for space motion.\n\nGiven\n\nra1: Right ascension (radians), before\ndec1: Declination (radians), before\npmr1: RA proper motion (radians/year), before\npmd1: Dec proper motion (radians/year), before\npx1: Parallax (arcseconds), before\nrv1: Radial velocity (km/s, +ve = receding), before\nep1a: \"before\" epoch, part A (Note 1)\nep1b: \"before\" epoch, part B (Note 1)\nep2a: \"after\" epoch, part A (Note 1)\nep2b: \"after\" epoch, part B (Note 1)\n\nReturned\n\nra2: Right ascension (radians), after\ndec2: Declination (radians), after\npmr2: RA proper motion (radians/year), after\npmd2: Dec proper motion (radians/year), after\npx2: Parallax (arcseconds), after\nrv2: Radial velocity (km/s, +ve = receding), after\n\nNotes\n\nThe starting and ending TDB dates ep1a+ep1b and ep2a+ep2b are Julian Dates, apportioned in any convenient way between the two parts (A and B).  For example, JD(TDB)=2450123.7 could be expressed in any of these ways, among others:\n    epna          epnb\n\n2450123.7           0.0       (JD method)\n2451545.0       -1421.3       (J2000 method)\n2400000.5       50123.2       (MJD method)\n2450123.5           0.2       (date & time method)\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nIn accordance with normal star-catalog conventions, the object\'s right ascension and declination are freed from the effects of secular aberration.  The frame, which is aligned to the catalog equator and equinox, is Lorentzian and centered on the SSB.\nThe proper motions are the rate of change of the right ascension and declination at the catalog epoch and are in radians per TDB Julian year.\nThe parallax and radial velocity are in the same frame.\nCare is needed with units.  The star coordinates are in radians and the proper motions in radians per Julian year, but the parallax is in arcseconds.\nThe RA proper motion is in terms of coordinate angle, not true angle.  If the catalog uses arcseconds for both RA and Dec proper motions, the RA proper motion will need to be divided by cos(Dec) before use.\nStraight-line motion at constant speed, in the inertial frame, is assumed.\nAn extremely small (or zero or negative) parallax is interpreted to mean that the object is on the \"celestial sphere\", the radius of which is an arbitrary (large) value (see the eraStarpv function for the value used).  When the distance is overridden in this way, the status, initially zero, has 1 added to it.\nIf the space velocity is a significant fraction of c (see the constant VMAX in the function eraStarpv), it is arbitrarily set to zero.  When this action occurs, 2 is added to the status.\nThe relativistic adjustment carried out in the eraStarpv function involves an iterative calculation.  If the process fails to converge within a set number of iterations, 4 is added to the status.\n\nCalled\n\neraStarpv: star catalog data to space motion pv-vector\neraPvu: update a pv-vector\neraPdp: scalar product of two p-vectors\neraPvstar: space motion pv-vector to star catalog data\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.starpv-NTuple{6,Any}",
    "page": "API",
    "title": "ERFA.starpv",
    "category": "method",
    "text": "starpv(ra, dec, pmr, pmd, px, rv)\n\nConvert star catalog coordinates to position+velocity vector.\n\nGiven (Note 1)\n\nra: Right ascension (radians)\ndec: Declination (radians)\npmr: RA proper motion (radians/year)\npmd: Dec proper motion (radians/year)\npx: Parallax (arcseconds)\nrv: Radial velocity (km/s, positive = receding)\n\nReturned (Note 2)\n\npv: pv-vector (au, au/day)\n\nNotes\n\nThe star data accepted by this function are \"observables\" for an imaginary observer at the solar-system barycenter.  Proper motion and radial velocity are, strictly, in terms of barycentric coordinate time, TCB.  For most practical applications, it is permissible to neglect the distinction between TCB and ordinary \"proper\" time on Earth (TT/TAI).  The result will, as a rule, be limited by the intrinsic accuracy of the proper-motion and radial-velocity data;  moreover, the pv-vector is likely to be merely an intermediate result, so that a change of time unit would cancel out overall.\nIn accordance with normal star-catalog conventions, the object\'s right ascension and declination are freed from the effects of secular aberration.  The frame, which is aligned to the catalog equator and equinox, is Lorentzian and centered on the SSB.\nThe resulting position and velocity pv-vector is with respect to the same frame and, like the catalog coordinates, is freed from the effects of secular aberration.  Should the \"coordinate direction\", where the object was located at the catalog epoch, be required, it may be obtained by calculating the magnitude of the position vector pv[0][0-2] dividing by the speed of light in au/day to give the light-time, and then multiplying the space velocity pv[1][0-2] by this light-time and adding the result to pv[0][0-2].\nSummarizing, the pv-vector returned is for most stars almost identical to the result of applying the standard geometrical \"space motion\" transformation.  The differences, which are the subject of the Stumpff paper referenced below, are:\n(i) In stars with significant radial velocity and proper motion, the constantly changing light-time distorts the apparent proper motion.  Note that this is a classical, not a relativistic, effect.\n(ii) The transformation complies with special relativity.\nCare is needed with units.  The star coordinates are in radians and the proper motions in radians per Julian year, but the parallax is in arcseconds; the radial velocity is in km/s, but the pv-vector result is in au and au/day.\nThe RA proper motion is in terms of coordinate angle, not true angle.  If the catalog uses arcseconds for both RA and Dec proper motions, the RA proper motion will need to be divided by cos(Dec) before use.\nStraight-line motion at constant speed, in the inertial frame, is assumed.\nAn extremely small (or zero or negative) parallax is interpreted to mean that the object is on the \"celestial sphere\", the radius of which is an arbitrary (large) value (see the constant PXMIN). When the distance is overridden in this way, the status, initially zero, has 1 added to it.\nIf the space velocity is a significant fraction of c (see the constant VMAX), it is arbitrarily set to zero.  When this action occurs, 2 is added to the status.\nThe relativistic adjustment involves an iterative calculation. If the process fails to converge within a set number (IMAX) of iterations, 4 is added to the status.\nThe inverse transformation is performed by the function eraPvstar.\n\nCalled\n\neraS2pv: spherical coordinates to pv-vector\neraPm: modulus of p-vector\neraZp: zero p-vector\neraPn: decompose p-vector into modulus and direction\neraPdp: scalar product of two p-vectors\neraSxp: multiply p-vector by scalar\neraPmp: p-vector minus p-vector\neraPpp: p-vector plus p-vector\n\nReference\n\nStumpff, P., 1985, Astron.Astrophys. 144, 232-240.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.sxp-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.sxp",
    "category": "method",
    "text": "sxp(s, p)\n\nMultiply a p-vector by a scalar.\n\nGiven\n\ns: Scalar\np: P-vector\n\nReturned\n\nsp: S * p\n\nNote\n\nIt is permissible for p and sp to be the same array.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.sxpv-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.sxpv",
    "category": "method",
    "text": "sxpv(s, pv)\n\nMultiply a pv-vector by a scalar.\n\nGiven\n\ns: Scalar\npv: Pv-vector\n\nReturned\n\nspv: S * pv\n\nNote\n\nIt is permissible for pv and spv to be the same array\n\nCalled\n\neraS2xpv: multiply pv-vector by two scalars\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.taitt",
    "page": "API",
    "title": "ERFA.taitt",
    "category": "function",
    "text": "taitt(tai1, tai2)\n\nTime scale transformation:  International Atomic Time, TAI, to Terrestrial Time, TT.\n\nGiven\n\ntai1, tai2: TAI as a 2-part Julian Date\n\nReturned\n\ntt1, tt2: TT as a 2-part Julian Date\n\nNote\n\ntai1+tai2 is Julian Date, apportioned in any convenient way    between the two arguments, for example where tai1 is the Julian    Day Number and tai2 is the fraction of a day.  The returned    tt1,tt2 follow suit.\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.taiut1",
    "page": "API",
    "title": "ERFA.taiut1",
    "category": "function",
    "text": "taiut1(tai1, tai2, dta)\n\nTime scale transformation:  International Atomic Time, TAI, to Universal Time, UT1.\n\nGiven\n\ntai1, tai2: TAI as a 2-part Julian Date\ndta: UT1-TAI in seconds\n\nReturned\n\nut11, ut12: UT1 as a 2-part Julian Date\n\nNotes\n\ntai1+tai2 is Julian Date, apportioned in any convenient way between the two arguments, for example where tai1 is the Julian Day Number and tai2 is the fraction of a day.  The returned UT11,UT12 follow suit.\nThe argument dta, i.e. UT1-TAI, is an observed quantity, and is available from IERS tabulations.\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.taiutc",
    "page": "API",
    "title": "ERFA.taiutc",
    "category": "function",
    "text": "taiutc(tai1, tai2)\n\nTime scale transformation:  International Atomic Time, TAI, to Coordinated Universal Time, UTC.\n\nGiven\n\ntai1, tai2: TAI as a 2-part Julian Date (Note 1)\n\nReturned\n\nutc1, utc2: UTC as a 2-part quasi Julian Date (Notes 1-3)\n\nNotes\n\ntai1+tai2 is Julian Date, apportioned in any convenient way between the two arguments, for example where tai1 is the Julian Day Number and tai2 is the fraction of a day.  The returned utc1 and utc2 form an analogous pair, except that a special convention is used, to deal with the problem of leap seconds - see the next note.\nJD cannot unambiguously represent UTC during a leap second unless special measures are taken.  The convention in the present function is that the JD day represents UTC days whether the length is 86399, 86400 or 86401 SI seconds.  In the 1960-1972 era there were smaller jumps (in either direction) each time the linear UTC(TAI) expression was changed, and these \"mini-leaps\" are also included in the ERFA convention.\nThe function eraD2dtf can be used to transform the UTC quasi-JD into calendar date and clock time, including UTC leap second handling.\nThe warning status \"dubious year\" flags UTCs that predate the introduction of the time scale or that are too far in the future to be trusted.  See eraDat for further details.\n\nCalled\n\neraUtctai: UTC to TAI\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tcbtdb",
    "page": "API",
    "title": "ERFA.tcbtdb",
    "category": "function",
    "text": "tcbtdb(tcb1, tcb2)\n\nTime scale transformation:  Barycentric Coordinate Time, TCB, to Barycentric Dynamical Time, TDB.\n\nGiven\n\ntcb1, tcb2: TCB as a 2-part Julian Date\n\nReturned\n\ntdb1, tdb2: TDB as a 2-part Julian Date\n\nNotes\n\ntcb1+tcb2 is Julian Date, apportioned in any convenient way between the two arguments, for example where tcb1 is the Julian Day Number and tcb2 is the fraction of a day.  The returned tdb1,tdb2 follow suit.\nThe 2006 IAU General Assembly introduced a conventional linear transformation between TDB and TCB.  This transformation compensates for the drift between TCB and terrestrial time TT, and keeps TDB approximately centered on TT.  Because the relationship between TT and TCB depends on the adopted solar system ephemeris, the degree of alignment between TDB and TT over long intervals will vary according to which ephemeris is used. Former definitions of TDB attempted to avoid this problem by stipulating that TDB and TT should differ only by periodic effects.  This is a good description of the nature of the relationship but eluded precise mathematical formulation.  The conventional linear relationship adopted in 2006 sidestepped these difficulties whilst delivering a TDB that in practice was consistent with values before that date.\nTDB is essentially the same as Teph, the time argument for the JPL solar system ephemerides.\n\nReference\n\nIAU 2006 Resolution B3\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tcgtt",
    "page": "API",
    "title": "ERFA.tcgtt",
    "category": "function",
    "text": "tcgtt(tcg1, tcg2)\n\nTime scale transformation:  Geocentric Coordinate Time, TCG, to Terrestrial Time, TT.\n\nGiven\n\ntcg1, tcg2: TCG as a 2-part Julian Date\n\nReturned\n\ntt1, tt2: TT as a 2-part Julian Date\n\nNote\n\ntcg1+tcg2 is Julian Date, apportioned in any convenient way    between the two arguments, for example where tcg1 is the Julian    Day Number and tcg22 is the fraction of a day.  The returned    tt1,tt2 follow suit.\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),.   IERS Technical Note No. 32, BKG (2004)\nIAU 2000 Resolution B1.9\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tdbtcb",
    "page": "API",
    "title": "ERFA.tdbtcb",
    "category": "function",
    "text": "tdbtcb(tdb1, tdb2)\n\nTime scale transformation:  Barycentric Dynamical Time, TDB, to Barycentric Coordinate Time, TCB.\n\nGiven\n\ntdb1, tdb2: TDB as a 2-part Julian Date\n\nReturned\n\ntcb1, tcb2: TCB as a 2-part Julian Date\n\nNotes\n\ntdb1+tdb2 is Julian Date, apportioned in any convenient way between the two arguments, for example where tdb1 is the Julian Day Number and tdb2 is the fraction of a day.  The returned tcb1,tcb2 follow suit.\nThe 2006 IAU General Assembly introduced a conventional linear transformation between TDB and TCB.  This transformation compensates for the drift between TCB and terrestrial time TT, and keeps TDB approximately centered on TT.  Because the relationship between TT and TCB depends on the adopted solar system ephemeris, the degree of alignment between TDB and TT over long intervals will vary according to which ephemeris is used. Former definitions of TDB attempted to avoid this problem by stipulating that TDB and TT should differ only by periodic effects.  This is a good description of the nature of the relationship but eluded precise mathematical formulation.  The conventional linear relationship adopted in 2006 sidestepped these difficulties whilst delivering a TDB that in practice was consistent with values before that date.\nTDB is essentially the same as Teph, the time argument for the JPL solar system ephemerides.\n\nReference\n\nIAU 2006 Resolution B3\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tdbtt",
    "page": "API",
    "title": "ERFA.tdbtt",
    "category": "function",
    "text": "tdbtt(tdb1, tdb2, dtr)\n\nTime scale transformation:  Barycentric Dynamical Time, TDB, to Terrestrial Time, TT.\n\nGiven\n\ntdb1, tdb2: TDB as a 2-part Julian Date\ndtr: TDB-TT in seconds\n\nReturned\n\ntt1, tt2: TT as a 2-part Julian Date\n\nNotes\n\ntdb1+tdb2 is Julian Date, apportioned in any convenient way between the two arguments, for example where tdb1 is the Julian Day Number and tdb2 is the fraction of a day.  The returned tt1,tt2 follow suit.\nThe argument dtr represents the quasi-periodic component of the GR transformation between TT and TCB.  It is dependent upon the adopted solar-system ephemeris, and can be obtained by numerical integration, by interrogating a precomputed time ephemeris or by evaluating a model such as that implemented in the ERFA function eraDtdb.   The quantity is dominated by an annual term of 1.7 ms amplitude.\nTDB is essentially the same as Teph, the time argument for the JPL solar system ephemerides.\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nIAU 2006 Resolution 3\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tf2a",
    "page": "API",
    "title": "ERFA.tf2a",
    "category": "function",
    "text": "tf2a(s, ihour, imin, sec)\n\nConvert hours, minutes, seconds to radians.\n\nGiven\n\ns: Sign:  \'-\' = negative, otherwise positive\nihour: Hours\nimin: Minutes\nsec: Seconds\n\nReturned\n\nrad: Angle in radians\n\nNotes\n\nThe result is computed even if any of the range checks fail.\nNegative ihour, imin and/or sec produce a warning status, but  the absolute value is used in the conversion.\nIf there are multiple errors, the status value reflects only the  first, the smallest taking precedence.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tf2d",
    "page": "API",
    "title": "ERFA.tf2d",
    "category": "function",
    "text": "tf2d(s, ihour, imin, sec)\n\nConvert hours, minutes, seconds to days.\n\nGiven\n\ns: Sign:  \'-\' = negative, otherwise positive\nihour: Hours\nimin: Minutes\nsec: Seconds\n\nReturned\n\ndays: Interval in days\n\nNotes\n\nThe result is computed even if any of the range checks fail.\nNegative ihour, imin and/or sec produce a warning status, but  the absolute value is used in the conversion.\nIf there are multiple errors, the status value reflects only the  first, the smallest taking precedence.\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tr-Tuple{Any}",
    "page": "API",
    "title": "ERFA.tr",
    "category": "method",
    "text": "tr(r)\n\nTranspose an r-matrix.\n\nGiven\n\nr: R-matrix\n\nReturned\n\nrt: Transpose\n\nNote\n\nIt is permissible for r and rt to be the same array.\n\nCalled\n\neraCr: copy r-matrix\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.trxp-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.trxp",
    "category": "method",
    "text": "trxp(r, p)\n\nMultiply a p-vector by the transpose of an r-matrix.\n\nGiven\n\nr: R-matrix\np: P-vector\n\nReturned\n\ntrp: R * p\n\nNote\n\nIt is permissible for p and trp to be the same array.\n\nCalled\n\neraTr: transpose r-matrix\neraRxp: product of r-matrix and p-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.trxpv-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.trxpv",
    "category": "method",
    "text": "trxpv(r, pv)\n\nMultiply a pv-vector by the transpose of an r-matrix.\n\nGiven\n\nr: R-matrix\npv: Pv-vector\n\nReturned\n\ntrpv: R * pv\n\nNote\n\nIt is permissible for pv and trpv to be the same array.\n\nCalled\n\neraTr: transpose r-matrix\neraRxpv: product of r-matrix and pv-vector\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tttai",
    "page": "API",
    "title": "ERFA.tttai",
    "category": "function",
    "text": "tttai(tt1, tt2)\n\nTime scale transformation:  Terrestrial Time, TT, to International Atomic Time, TAI.\n\nGiven\n\ntt1, tt2: TT as a 2-part Julian Date\n\nReturned\n\ntai1, tai2: TAI as a 2-part Julian Date\n\nNote\n\ntt1+tt2 is Julian Date, apportioned in any convenient way between    the two arguments, for example where tt1 is the Julian Day Number    and tt2 is the fraction of a day.  The returned tai1,tai2 follow    suit.\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tttcg",
    "page": "API",
    "title": "ERFA.tttcg",
    "category": "function",
    "text": "tttcg(tt1, tt2)\n\nTime scale transformation:  Terrestrial Time, TT, to Geocentric Coordinate Time, TCG.\n\nGiven\n\ntt1, tt2: TT as a 2-part Julian Date\n\nReturned\n\ntcg1, tcg2: TCG as a 2-part Julian Date\n\nNote\n\ntt1+tt2 is Julian Date, apportioned in any convenient way between    the two arguments, for example where tt1 is the Julian Day Number    and tt2 is the fraction of a day.  The returned tcg1,tcg2 follow    suit.\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nIAU 2000 Resolution B1.9\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.tttdb",
    "page": "API",
    "title": "ERFA.tttdb",
    "category": "function",
    "text": "tttdb(tt1, tt2, dtr)\n\nTime scale transformation:  Terrestrial Time, TT, to Barycentric Dynamical Time, TDB.\n\nGiven\n\ntt1, tt2: TT as a 2-part Julian Date\ndtr: TDB-TT in seconds\n\nReturned\n\ntdb1, tdb2: TDB as a 2-part Julian Date\n\nNotes\n\ntt1+tt2 is Julian Date, apportioned in any convenient way between the two arguments, for example where tt1 is the Julian Day Number and tt2 is the fraction of a day.  The returned tdb1,tdb2 follow suit.\nThe argument dtr represents the quasi-periodic component of the GR transformation between TT and TCB.  It is dependent upon the adopted solar-system ephemeris, and can be obtained by numerical integration, by interrogating a precomputed time ephemeris or by evaluating a model such as that implemented in the ERFA function eraDtdb.   The quantity is dominated by an annual term of 1.7 ms amplitude.\nTDB is essentially the same as Teph, the time argument for the JPL solar system ephemerides.\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nIAU 2006 Resolution 3\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ttut1",
    "page": "API",
    "title": "ERFA.ttut1",
    "category": "function",
    "text": "ttut1(tt1, tt2, dt)\n\nTime scale transformation:  Terrestrial Time, TT, to Universal Time, UT1.\n\nGiven\n\ntt1, tt2: TT as a 2-part Julian Date\ndt: TT-UT1 in seconds\n\nReturned\n\nut11, ut12: UT1 as a 2-part Julian Date\n\nNotes\n\ntt1+tt2 is Julian Date, apportioned in any convenient way between the two arguments, for example where tt1 is the Julian Day Number and tt2 is the fraction of a day.  The returned ut11,ut12 follow suit.\nThe argument dt is classical Delta T.\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ut1tai",
    "page": "API",
    "title": "ERFA.ut1tai",
    "category": "function",
    "text": "ut1tai(ut11, ut12, dta)\n\nTime scale transformation:  Universal Time, UT1, to International Atomic Time, TAI.\n\nGiven\n\nut11, ut12: UT1 as a 2-part Julian Date\ndta: UT1-TAI in seconds\n\nReturned\n\ntai1, tai2: TAI as a 2-part Julian Date\n\nNotes\n\nut11+ut12 is Julian Date, apportioned in any convenient way between the two arguments, for example where ut11 is the Julian Day Number and ut12 is the fraction of a day.  The returned tai1,tai2 follow suit.\nThe argument dta, i.e. UT1-TAI, is an observed quantity, and is available from IERS tabulations.\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ut1tt",
    "page": "API",
    "title": "ERFA.ut1tt",
    "category": "function",
    "text": "ut1tt(ut11, ut12, dt)\n\nTime scale transformation:  Universal Time, UT1, to Terrestrial Time, TT.\n\nGiven\n\nut11, ut12: UT1 as a 2-part Julian Date\ndt: TT-UT1 in seconds\n\nReturned\n\ntt1, tt2: TT as a 2-part Julian Date\n\nNotes\n\nut11+ut12 is Julian Date, apportioned in any convenient way between the two arguments, for example where ut11 is the Julian Day Number and ut12 is the fraction of a day.  The returned tt1,tt2 follow suit.\nThe argument dt is classical Delta T.\n\nReference\n\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.ut1utc",
    "page": "API",
    "title": "ERFA.ut1utc",
    "category": "function",
    "text": "ut1utc(ut11, ut12, dut1)\n\nTime scale transformation:  Universal Time, UT1, to Coordinated Universal Time, UTC.\n\nGiven\n\nut11, ut12: UT1 as a 2-part Julian Date (Note 1)\ndut1: Delta UT1: UT1-UTC in seconds (Note 2)\n\nReturned\n\nutc1, utc2: UTC as a 2-part quasi Julian Date (Notes 3,4)\n\nNotes\n\nut11+ut12 is Julian Date, apportioned in any convenient way between the two arguments, for example where ut11 is the Julian Day Number and ut12 is the fraction of a day.  The returned utc1 and utc2 form an analogous pair, except that a special convention is used, to deal with the problem of leap seconds - see Note 3.\nDelta UT1 can be obtained from tabulations provided by the International Earth Rotation and Reference Systems Service.  The value changes abruptly by 1s at a leap second;  however, close to a leap second the algorithm used here is tolerant of the \"wrong\" choice of value being made.\nJD cannot unambiguously represent UTC during a leap second unless special measures are taken.  The convention in the present function is that the returned quasi JD day UTC1+UTC2 represents UTC days whether the length is 86399, 86400 or 86401 SI seconds.\nThe function eraD2dtf can be used to transform the UTC quasi-JD into calendar date and clock time, including UTC leap second handling.\nThe warning status \"dubious year\" flags UTCs that predate the introduction of the time scale or that are too far in the future to be trusted.  See eraDat for further details.\n\nCalled\n\neraJd2cal: JD to Gregorian calendar\neraDat: delta(AT) = TAI-UTC\neraCal2jd: Gregorian calendar to JD\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.utctai-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.utctai",
    "category": "method",
    "text": "utctai(utc1, utc2)\n\nTime scale transformation:  Coordinated Universal Time, UTC, to International Atomic Time, TAI.\n\nGiven\n\nutc1, utc2: UTC as a 2-part quasi Julian Date (Notes 1-4)\n\nReturned\n\ntai1, tai2: TAI as a 2-part Julian Date (Note 5)\n\nNotes\n\nutc1+utc2 is quasi Julian Date (see Note 2), apportioned in any convenient way between the two arguments, for example where utc1 is the Julian Day Number and utc2 is the fraction of a day.\nJD cannot unambiguously represent UTC during a leap second unless special measures are taken.  The convention in the present function is that the JD day represents UTC days whether the length is 86399, 86400 or 86401 SI seconds.  In the 1960-1972 era there were smaller jumps (in either direction) each time the linear UTC(TAI) expression was changed, and these \"mini-leaps\" are also included in the ERFA convention.\nThe warning status \"dubious year\" flags UTCs that predate the introduction of the time scale or that are too far in the future to be trusted.  See eraDat for further details.\nThe function eraDtf2d converts from calendar date and time of day into 2-part Julian Date, and in the case of UTC implements the leap-second-ambiguity convention described above.\nThe returned TAI1,TAI2 are such that their sum is the TAI Julian Date.\n\nCalled\n\neraJd2cal: JD to Gregorian calendar\neraDat: delta(AT) = TAI-UTC\neraCal2jd: Gregorian calendar to JD\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.utcut1",
    "page": "API",
    "title": "ERFA.utcut1",
    "category": "function",
    "text": "utcut1(utc1, utc2, dut1)\n\nTime scale transformation:  Coordinated Universal Time, UTC, to Universal Time, UT1.\n\nGiven\n\nutc1, utc2: UTC as a 2-part quasi Julian Date (Notes 1-4)\ndut1: Delta UT1 = UT1-UTC in seconds (Note 5)\n\nReturned\n\nut11, ut12: UT1 as a 2-part Julian Date (Note 6)\n\nNotes\n\nutc1+utc2 is quasi Julian Date (see Note 2), apportioned in any convenient way between the two arguments, for example where utc1 is the Julian Day Number and utc2 is the fraction of a day.\nJD cannot unambiguously represent UTC during a leap second unless special measures are taken.  The convention in the present function is that the JD day represents UTC days whether the length is 86399, 86400 or 86401 SI seconds.\nThe warning status \"dubious year\" flags UTCs that predate the introduction of the time scale or that are too far in the future to be trusted.  See eraDat for further details.\nThe function eraDtf2d converts from calendar date and time of day into 2-part Julian Date, and in the case of UTC implements the leap-second-ambiguity convention described above.\nDelta UT1 can be obtained from tabulations provided by the International Earth Rotation and Reference Systems Service. It is the caller\'s responsibility to supply a dut1 argument containing the UT1-UTC value that matches the given UTC.\nThe returned ut11,ut12 are such that their sum is the UT1 Julian Date.\n\nReferences\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\nExplanatory Supplement to the Astronomical Almanac,   P. Kenneth Seidelmann (ed), University Science Books (1992)\n\nCalled\n\neraJd2cal: JD to Gregorian calendar\neraDat: delta(AT) = TAI-UTC\neraUtctai: UTC to TAI\neraTaiut1: TAI to UT1\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.xy06-Tuple{Any,Any}",
    "page": "API",
    "title": "ERFA.xy06",
    "category": "method",
    "text": "xy06(date1, date2)\n\nX,Y coordinates of celestial intermediate pole from series based on IAU 2006 precession and IAU 2000A nutation.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nx, y: CIP X,Y coordinates (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe X,Y coordinates are those of the unit vector towards the celestial intermediate pole.  They represent the combined effects of frame bias, precession and nutation.\nThe fundamental arguments used are as adopted in IERS Conventions (2003) and are from Simon et al. (1994) and Souchay et al. (1999).\nThis is an alternative to the angles-based method, via the ERFA function eraFw2xy and as used in eraXys06a for example.  The two methods agree at the 1 microarcsecond level (at present), a negligible amount compared with the intrinsic accuracy of the models.  However, it would be unwise to mix the two methods (angles-based and series-based) in a single application.\n\nCalled\n\neraFal03: mean anomaly of the Moon\neraFalp03: mean anomaly of the Sun\neraFaf03: mean argument of the latitude of the Moon\neraFad03: mean elongation of the Moon from the Sun\neraFaom03: mean longitude of the Moon\'s ascending node\neraFame03: mean longitude of Mercury\neraFave03: mean longitude of Venus\neraFae03: mean longitude of Earth\neraFama03: mean longitude of Mars\neraFaju03: mean longitude of Jupiter\neraFasa03: mean longitude of Saturn\neraFaur03: mean longitude of Uranus\neraFane03: mean longitude of Neptune\neraFapa03: general accumulated precession in longitude\n\nReferences\n\nCapitaine, N., Wallace, P.T. & Chapront, J., 2003,   Astron.Astrophys., 412, 567\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\nMcCarthy, D. D., Petit, G. (eds.), 2004, IERS Conventions (2003),   IERS Technical Note No. 32, BKG\nSimon, J.L., Bretagnon, P., Chapront, J., Chapront-Touze, M.,   Francou, G. & Laskar, J., Astron.Astrophys., 1994, 282, 663\nSouchay, J., Loysel, B., Kinoshita, H., Folgueira, M., 1999,   Astron.Astrophys.Supp.Ser. 135, 111\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.xys00a",
    "page": "API",
    "title": "ERFA.xys00a",
    "category": "function",
    "text": "xys00a(date1, date2)\n\nFor a given TT date, compute the X,Y coordinates of the Celestial Intermediate Pole and the CIO locator s, using the IAU 2000A precession-nutation model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nx, y: Celestial Intermediate Pole (Note 2)\ns: The CIO locator s (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe Celestial Intermediate Pole coordinates are the x,y components of the unit vector in the Geocentric Celestial Reference System.\nThe CIO locator s (in radians) positions the Celestial Intermediate Origin on the equator of the CIP.\nA faster, but slightly less accurate result (about 1 mas for X,Y), can be obtained by using instead the eraXys00b function.\n\nCalled\n\neraPnm00a: classical NPB matrix, IAU 2000A\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS00: the CIO locator s, given X,Y, IAU 2000A\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.xys00b",
    "page": "API",
    "title": "ERFA.xys00b",
    "category": "function",
    "text": "xys00b(date1, date2)\n\nFor a given TT date, compute the X,Y coordinates of the Celestial Intermediate Pole and the CIO locator s, using the IAU 2000B precession-nutation model.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nx, y: Celestial Intermediate Pole (Note 2)\ns: The CIO locator s (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe Celestial Intermediate Pole coordinates are the x,y components of the unit vector in the Geocentric Celestial Reference System.\nThe CIO locator s (in radians) positions the Celestial Intermediate Origin on the equator of the CIP.\nThe present function is faster, but slightly less accurate (about 1 mas in X,Y), than the eraXys00a function.\n\nCalled\n\neraPnm00b: classical NPB matrix, IAU 2000B\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS00: the CIO locator s, given X,Y, IAU 2000A\n\nReference\n\nMcCarthy, D. D., Petit, G. (eds.), IERS Conventions (2003),   IERS Technical Note No. 32, BKG (2004)\n\n\n\n\n\n"
},

{
    "location": "api/#ERFA.xys06a",
    "page": "API",
    "title": "ERFA.xys06a",
    "category": "function",
    "text": "xys06a(date1, date2)\n\nFor a given TT date, compute the X,Y coordinates of the Celestial Intermediate Pole and the CIO locator s, using the IAU 2006 precession and IAU 2000A nutation models.\n\nGiven\n\ndate1, date2: TT as a 2-part Julian Date (Note 1)\n\nReturned\n\nx, y: Celestial Intermediate Pole (Note 2)\ns: The CIO locator s (Note 2)\n\nNotes\n\nThe TT date date1+date2 is a Julian Date, apportioned in any convenient way between the two arguments.  For example, JD(TT)=2450123.7 could be expressed in any of these ways, among others:\ndate1 date2 \n2450123.7 0.0 JD method\n2451545.0 -1421.3 J2000 method\n2400000.5 50123.2 MJD method\n2450123.5 0.2 date & time method\nThe JD method is the most natural and convenient to use in cases where the loss of several decimal digits of resolution is acceptable.  The J2000 method is best matched to the way the argument is handled internally and will deliver the optimum resolution.  The MJD method and the date & time methods are both good compromises between resolution and convenience.\nThe Celestial Intermediate Pole coordinates are the x,y components of the unit vector in the Geocentric Celestial Reference System.\nThe CIO locator s (in radians) positions the Celestial Intermediate Origin on the equator of the CIP.\nSeries-based solutions for generating X and Y are also available: see Capitaine & Wallace (2006) and eraXy06.\n\nCalled\n\neraPnm06a: classical NPB matrix, IAU 2006/2000A\neraBpn2xy: extract CIP X,Y coordinates from NPB matrix\neraS06: the CIO locator s, given X,Y, IAU 2006\n\nReferences\n\nCapitaine, N. & Wallace, P.T., 2006, Astron.Astrophys. 450, 855\nWallace, P.T. & Capitaine, N., 2006, Astron.Astrophys. 459, 981\n\n\n\n\n\n"
},

{
    "location": "api/#API-1",
    "page": "API",
    "title": "API",
    "category": "section",
    "text": "DocTestSetup = quote\n    using ERFA\nendModules = [ERFA]\nPrivate = true"
},

]}
