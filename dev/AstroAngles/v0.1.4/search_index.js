var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [AstroAngles]","category":"page"},{"location":"api/#AstroAngles.deg2dms-Tuple{Any}","page":"API Reference","title":"AstroAngles.deg2dms","text":"deg2dms(angle)\n\nConvert degrees to (degrees, arcminutes, arcseconds) tuple\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.deg2ha-Tuple{Any}","page":"API Reference","title":"AstroAngles.deg2ha","text":"deg2ha(angle)\n\nConvert degrees to hour angles\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.deg2hms-Tuple{Any}","page":"API Reference","title":"AstroAngles.deg2hms","text":"deg2hms(angle)\n\nConvert degrees to (hours, minutes, seconds) tuple\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.dms2deg-Tuple{Any, Any, Any}","page":"API Reference","title":"AstroAngles.dms2deg","text":"dms2deg(degrees, arcmin, arcsec)\ndms2deg(parts)\ndms2deg(input::AbstractString)\n\nConvert (degrees, arcminutes, arcseconds) tuple to degrees. If a string is given, will parse with parse_dms first. If an angle is input will treat as a no-op.\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.dms2ha-Tuple{Any, Any, Any}","page":"API Reference","title":"AstroAngles.dms2ha","text":"dms2ha(degrees, arcmin, arcsec)\ndms2ha(parts)\ndms2ha(input::AbstractString)\n\nConvert (degrees, arcminutes, arcseconds) tuple to hour angles. If a string is given, will parse with parse_dms first. If an angle is input will treat as a no-op.\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.dms2rad-Tuple{Any, Any, Any}","page":"API Reference","title":"AstroAngles.dms2rad","text":"dms2rad(degrees, arcmin, arcsec)\ndms2rad(parts)\ndms2rad(input::AbstractString)\n\nConvert (degrees, arcminutes, arcseconds) tuple to radians. If a string is given, will parse with parse_dms first. If an angle is input will treat as a no-op.\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.format_angle-Tuple{Any}","page":"API Reference","title":"AstroAngles.format_angle","text":"format_angle(parts; delim=':')\n\nGiven the (whole, minutes, seconds) parts of an angle, will format into a string with the given delimiter(s). These parts can be generated by the xxx2dms and xxx2hms methods, for sexagesimal and hour:minute:second outputs. Multiple delimiters can be given in a tuple or vector placed after their respective values. For more control over formatting, consider using Printf or a package like Format.jl.\n\nExamples\n\njulia> ang = 45.0; # degrees\n\njulia> format_angle(deg2dms(ang))\n\"45:0:0.0\"\n\njulia> format_angle(deg2hms(ang))\n\"3:0:0.0\"\n\njulia> format_angle(rad2hms(1.5), delim=[\"h\", \"m\", \"s\"])\n\"5h43m46.48062470963538s\"\n\nSee also\n\ndeg2dms, deg2hms, rad2dms, rad2hms, ha2dms, ha2hms\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.ha2deg-Tuple{Any}","page":"API Reference","title":"AstroAngles.ha2deg","text":"ha2deg(angle)\n\nConvert hour angles to degrees\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.ha2dms-Tuple{Any}","page":"API Reference","title":"AstroAngles.ha2dms","text":"ha2dms(angle)\n\nConvert hour angles to (degrees, arcminutes, arcseconds) tuple\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.ha2hms-Tuple{Any}","page":"API Reference","title":"AstroAngles.ha2hms","text":"ha2hms(angle)\n\nConvert hour angles to (hours, minutes, seconds) tuple\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.ha2rad-Tuple{Any}","page":"API Reference","title":"AstroAngles.ha2rad","text":"ha2rad(angle)\n\nConvert hour angles to radians\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.hms2deg-Tuple{Any, Any, Any}","page":"API Reference","title":"AstroAngles.hms2deg","text":"hms2deg(hours, mins, secs)\nhms2deg(parts)\nhms2deg(input::AbstractString)\n\nConvert (hours, minutes, seconds) tuple to degrees. If a string is given, will parse with parse_hms first. If an angle is input will treat as a no-op.\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.hms2ha-Tuple{Any, Any, Any}","page":"API Reference","title":"AstroAngles.hms2ha","text":"hms2ha(hours, mins, secs)\nhms2ha(parts)\nhms2ha(input::AbstractString)\n\nConvert (hours, minutes, seconds) tuple to hour angles. If a string is given, will parse with parse_hms first. If an angle is input will treat as a no-op.\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.hms2rad-Tuple{Any, Any, Any}","page":"API Reference","title":"AstroAngles.hms2rad","text":"hms2rad(hours, mins, secs)\nhms2rad(parts)\nhms2rad(input::AbstractString)\n\nConvert (hours, minutes, seconds) tuple to radians. If a string is given, will parse with parse_hms first. If an angle is input will treat as a no-op.\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.parse_dms-Tuple{Any}","page":"API Reference","title":"AstroAngles.parse_dms","text":"parse_dms(input)\n\nParses a string input in \"deg:arcmin:arcsec\" format to the tuple (degrees, arcminutes, arcseconds). The following delimiters will all work and can be mixed together (the last delimiter is optional):\n\n\"[+-]xx[°d: ]xx['′m: ]xx[\\\"″s][NESW]\"\n\nif the direction is provided, \"S\" and \"E\" are considered negative (and \"-1:0:0S\" is 1 degree North)\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.parse_hms-Tuple{Any}","page":"API Reference","title":"AstroAngles.parse_hms","text":"parse_hms(input)\n\nParses a string input in \"ha:min:sec\" format to the tuple (hours, minutes, seconds). The following delimiters will all work and can be mixed together (the last delimiter is optional):\n\n\"[+-]xx[h ]xx['′m: ]xx[\\\"″s][EW]\"\n\nif the direction is provided, \"S\" and \"E\" are considered negative (and \"-1:0:0W\" is 1 degree East)\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.rad2dms-Tuple{Any}","page":"API Reference","title":"AstroAngles.rad2dms","text":"rad2dms(angle)\n\nConvert radians to (degrees, arcminutes, arcseconds) tuple\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.rad2ha-Tuple{Any}","page":"API Reference","title":"AstroAngles.rad2ha","text":"rad2ha(angle)\n\nConvert radians to hour angles\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.rad2hms-Tuple{Any}","page":"API Reference","title":"AstroAngles.rad2hms","text":"rad2hms(angle)\n\nConvert radians to (hours, minutes, seconds) tuple\n\n\n\n\n\n","category":"method"},{"location":"api/#AstroAngles.@dms_str","page":"API Reference","title":"AstroAngles.@dms_str","text":"@dms_str\n\nParse a string in \"deg:arcmin:arcsec\" format directly to an angle. By default, it will be parsed as radians, but the angle can be chosen by adding a flag to the end of the string\n\ndms\"...\"rad -> radians (default)\ndms\"...\"deg -> degrees\ndms\"...\"ha -> hour angles\n\nExamples\n\njulia> dms\"12:17:25.3\"\n0.21450726764795752\n\njulia> dms\"12:17:25.3\"rad # default\n0.21450726764795752\n\njulia> dms\"12:17:25.3\"deg\n12.29036111111111\n\njulia> dms\"12:17:25.3\"ha\n0.8193574074074074\n\nSee also\n\nparse_dms\n\n\n\n\n\n","category":"macro"},{"location":"api/#AstroAngles.@hms_str","page":"API Reference","title":"AstroAngles.@hms_str","text":"@hms_str\n\nParse a string in \"ha:min:sec\" format directly to an angle. By default, it will be parsed as radians, but the angle can be chosen by adding a flag to the end of the string\n\nhms\"...\"rad -> radians (default)\nhms\"...\"deg -> degrees\nhms\"...\"ha -> hour angles\n\nExamples\n\njulia> hms\"12:17:25.3\"\n3.2176090147193626\n\njulia> hms\"12:17:25.3\"rad # default\n3.2176090147193626\n\njulia> hms\"12:17:25.3\"deg\n184.35541666666666\n\njulia> hms\"12:17:25.3\"ha\n12.29036111111111\n\nSee also\n\nparse_hms\n\n\n\n\n\n","category":"macro"},{"location":"","page":"Home","title":"Home","text":"DocTestSetup = :(using AstroAngles)","category":"page"},{"location":"#AstroAngles.jl","page":"Home","title":"AstroAngles.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: PkgEval) (Image: Coverage) (Image: License)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Lightweight string parsing and representation of angles.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install use Pkg. From the REPL, press ] to enter Pkg-mode","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add AstroAngles","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you want to use the most up-to-date version of the code, check it out from main","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add AstroAngles#main","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"#Angle-Parsing-Utilities","page":"Home","title":"Angle Parsing Utilities","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"String representations of angles in both \"degree:arcmin:arcsec\" and  \"hour:min:sec\" format can be parsed using a variety of delimiters, which can be mixed together (e.g. can use ° after degrees but : after the arcminutes). The directions \"S\" and \"W\" are considered negative and \"-1:0:0S\" is 1 degree North, for example.","category":"page"},{"location":"#dms-formats","page":"Home","title":"dms formats","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"\"[+-]xx:xx:xx.x[NESW]\"\n\"[+-]xx xx xx.x[NESW]\"\n\"[+-]xxdxxmxx.xs[NESW]\"\n\"[+-]xx°xx'xx.x\\\"[NESW]\"\n\"[+-]xx°xx′xx.x″[NESW]\" # \\prime, \\pprime","category":"page"},{"location":"#hms-formats","page":"Home","title":"hms formats","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"\"[+-]xx:xx:xx.x[NESW]\"\n\"[+-]xx xx xx.x[NESW]\"\n\"[+-]xxhxxmxx.xs[NESW]\"\n\"[+-]xxhxx'xx.x\\\"[NESW]\"\n\"[+-]xx°xx′xx.x″[NESW]\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"the simplest way to convert is to use the @dms_str and @hms_str macros, which allows you to choose the output angle type","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> dms\"12:17:25.3\"\n0.21450726764795752\n\njulia> dms\"12:17:25.3\"rad # default\n0.21450726764795752\n\njulia> dms\"12:17:25.3\"deg\n12.29036111111111\n\njulia> dms\"12:17:25.3\"ha\n0.8193574074074074","category":"page"},{"location":"","page":"Home","title":"Home","text":"here is a showcase of the variety of ways to parse inputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> dms\"10.2345d\"deg\n10.2345\n\njulia> dms\"1:2:30.43\"deg\n1.041786111111111\n\njulia> hms\"1 2 0\"ha\n1.0333333333333334\n\njulia> dms\"1°2′3″\"deg\n1.0341666666666667\n\njulia> dms\"1°2′3″N\"deg\n1.0341666666666667\n\njulia> dms\"1d2m3.4s\"deg\n1.0342777777777779\n\njulia> dms\"1d2m3.4sS\"deg\n-1.0342777777777779\n\njulia> hms\"-1h2m3s\"ha\n-1.0341666666666667\n\njulia> hms\"-1h2m3sW\"ha\n1.0341666666666667","category":"page"},{"location":"","page":"Home","title":"Home","text":"for more control on the output, you can use the parse_dms and parse_hms methods, which returns a tuple of the parsed dms or hms values","category":"page"},{"location":"","page":"Home","title":"Home","text":"parse_dms # string -> (deg, arcmin, arcsec)\nparse_hms # string -> (hours, mins, secs)","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> parse_dms(\"12:17:25.3\")\n(12.0, 17.0, 25.3)\n\njulia> parse_hms(\"-4:4:6\")\n(-4.0, 4.0, 6.0)","category":"page"},{"location":"#Angle-Conversion-Utilities","page":"Home","title":"Angle Conversion Utilities","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The following methods are added for converting to and from hour angles","category":"page"},{"location":"","page":"Home","title":"Home","text":"deg2ha # degrees -> hour angles\nrad2ha # radians -> hour angles\nha2deg # hour angles -> degrees\nha2rad # hour angles -> radians","category":"page"},{"location":"","page":"Home","title":"Home","text":"The following methods convert from angles as a single number to tuples consistent with sexagesimal","category":"page"},{"location":"","page":"Home","title":"Home","text":"deg2dms # degrees -> (deg, arcmin, arcsec)\nrad2dms # radians -> (deg, arcmin, arcsec)\nha2dms  # hour angles -> (deg, arcmin, arcsec)\n\ndeg2hms # degrees -> (hours, mins, secs)\nrad2hms # radians -> (hours, mins, secs)\nha2hms  # hour angles -> (hours, mins, secs)","category":"page"},{"location":"","page":"Home","title":"Home","text":"and the inverse","category":"page"},{"location":"","page":"Home","title":"Home","text":"dms2deg # (deg, arcmin, arcsec) -> degrees\ndms2rad # (deg, arcmin, arcsec) -> radians\ndms2ha  # (deg, arcmin, arcsec) -> hour angles\n\nhms2deg # (hours, mins, secs) -> degrees\nhms2rad # (hours, mins, secs) -> radians\nhms2ha  # (hours, mins, secs) -> hour angles","category":"page"},{"location":"","page":"Home","title":"Home","text":"the above functions can take a string as input and will automatically parse it (using parse_dms or parse_hms, respectively) before converting.","category":"page"},{"location":"#Formatting-angles","page":"Home","title":"Formatting angles","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Lastly, we have some simple methods for formatting angles into strings, although for more fine-tuned control we recommend using Printf or a package like Format.jl. format_angle takes parts (like from deg2dms or rad2hms) and a delimiter (or collection of 3 delimiters for each value).","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> format_angle(deg2dms(45.0))\n\"45:0:0.0\"\n\njulia> format_angle(deg2hms(-65.0); delim=[\"h\", \"m\", \"s\"])\n\"-4h19m59.999999999998934s\"","category":"page"},{"location":"#Example:-reading-coordinates-from-a-table","page":"Home","title":"Example: reading coordinates from a table","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Here's an example of reading sky coordinates from a CSV formatted target list and converting them to degrees:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using AstroAngles, CSV, DataFrames\n\njulia> table = CSV.File(\"target_list.csv\") |> DataFrame;\n\njulia> [table.ra table.dec]\n203×2 Matrix{String}:\n \"00 05 01.42\"  \"40 03 35.82\"\n \"00 05 07.52\"  \"73 13 11.34\"\n \"00 36 01.40\"  \"-11 12 13.00\"\n[...]\n\njulia> ra_d = @. hms2deg(table.ra)\n203-element Vector{Float64}:\n   1.2559166666666666\n   1.2813333333333332\n   9.005833333333333\n[...]\n\njulia> dec_d = @. dms2deg(table.dec)\n203-element Vector{Float64}:\n  40.05995\n  73.21981666666667\n -11.203611111111112\n[...]","category":"page"},{"location":"#Contributing/Support","page":"Home","title":"Contributing/Support","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To contribute, feel free to open a pull request. If you run into problems, please open an issue. To discuss ideas, usage, or to plan contributions, open a new discussion.","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This code is MIT licensed. For more information, see the LICENSE file in the AstroAngles.jl repository.","category":"page"}]
}
